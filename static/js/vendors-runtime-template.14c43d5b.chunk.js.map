{"version":3,"sources":["../node_modules/@babel/template/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js"],"names":["Object","defineProperty","exports","value","default","program","expression","statements","statement","smart","formatters","require","_builder","_default","assign","bind","undefined","ast","path","file","builtinClasses","isLoose","assumptions","classState","parent","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","body","superThises","pushedConstructor","pushedInherits","protoAlias","methods","instance","hasComputed","list","map","Map","static","setState","newState","findThisesVisitor","_core","traverse","visitors","merge","_helperReplaceSupers","environmentVisitor","ThisExpression","push","buildBody","paths","get","equals","params","constructor","template","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","constantSuper","refToPreserve","replace","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Set","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","concat","bodyPaths","length","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","desc","obj","objectExpression","objectProperty","key","properties","args","arrayExpression","nullLiteral","lastNonNullIndex","i","isNullLiteral","slice","expressionStatement","call","bareSuperNode","superIsCallableConstructor","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","name","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","setClassMethods","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","descriptor","descKey","isNumericLiteral","isBigIntLiteral","stringLiteral","String","fn","toExpression","has","set","method","directives","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","arg","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","noClassCalls","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","WeakMap","beforeExpr","startsExpr","isAssign","prefix","TokenType","label","conf","this","keyword","rightAssociative","postfix","binop","updateContext","keywords$1","createKeyword","options","token","createBinop","types$1","num","bigint","decimal","regexp","string","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","slashAssign","moduloAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","skipWhiteSpaceInLine","skipWhiteSpaceToLineBreak","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","setTrailingComments","comments","trailingComments","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","CommentsParser","comment","loc","state","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","splice","leadingComments","commentStart","input","charCodeAt","type","specifiers","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","PipeTopicUnused","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","keys","forEach","reasonCode","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","offset","match","lineStart","lastIndex","exec","index","getLineInfo","raiseWithData","getLocationForPosition","message","_","errorRecovery","errors","error","_raise","data","errorTemplate","errorContext","err","isLookahead","TokContext","preserveSpace","brace","context","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","fromCharCode","isIdentifierChar","reservedWords","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","reservedWordLikeSet","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","SCOPE_PROGRAM","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScopeFlags","currentThisScopeFlags","treatFunctionsAsVarInScope","currentScope","createScope","bindingType","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","values","next","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","State","strict","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","inPropertyName","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","exprAllowed","containsEsc","strictErrors","tokensLength","strictMode","sourceType","startLine","curPosition","skipArrays","val","Array","isArray","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","tokens","init","checkKeywordEscapes","pushToken","nextToken","curContext","old","createLookaheadState","curr","nextTokenStartSince","nextTokenStart","cp","trail","clear","skipSpace","finishToken","readTmplToken","getTokenFromCode","codePointAtPos","indexOf","startSkip","ch","spaceStart","loop","skipBlockComment","addComment","attachComment","skipLineComment","CommentWhitespace","prevType","readToken_interpreter","nextPos","expectPlugin","getPluginOption","readWord1","finishOp","readNumber","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readToken_numberSign","readWord","fromCodePoint","str","escaped","inClass","content","mods","char","includes","pattern","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","invalid","total","e","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseInt","parseFloat","throwOnInvalid","codePos","readHexChar","quote","out","chunkStart","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","substr","octal","n","firstCode","escStart","identifierCheck","esc","kw","_this$state$type$upda","_this$state$type","ClassScope","privateNames","loneAccessors","ClassScopeHandler","stack","oldClassScope","current","from","elementType","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","UtilParser","extra","op","isRelational","unexpected","nameStart","nameEnd","nextCh","isUnparsedContextual","isContextual","eat","eatContextual","hasPrecedingLineBreak","canInsertSemicolon","allowAsi","isLineTerminator","messageOrType","missingPlugin","names","some","join","oldState","abortSignal","failState","thrown","aborted","refExpressionErrors","andThrow","shorthandAssign","doubleProto","optionalParameters","isPrivateName","property","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","paramFlags","enter","ExpressionErrors","Node","parser","ranges","range","NodePrototype","prototype","cloneIdentifier","cloned","create","expectedNode","cloneStringLiteral","clonePlaceholder","__clone","newNode","NodeUtils","startNodeAt","finishNodeAt","processComment","locationNode","resetStartLocation","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AbstractPropertyHasInitializer","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","PlaceHolderErrors","ClassNameIsRequired","option","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","regex","estreeParseLiteral","bigInt","BigInt","parseLiteral","stmt","expressionValue","raw","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","propertyNode","isPattern","isAccessor","shorthand","startPos","isBinding","isAssignable","isLHS","toAssignable","optional","_node$arguments$","attributes","exported","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","jsxReadEntity","jsxReadNewLine","normalizeCRLF","entity","count","jsxParseIdentifier","jsxParseNamespacedName","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","jsxParseElement","lookaheadState","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","matches","tok","oldInType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","lookaheadCharCode","setOptionalParametersError","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list1","list2","partition","every","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","result","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","isIteratorStart","readIterator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","tryParse","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","hasOwnProperty","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","element","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","tsParseTypeParameterName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","operator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","override","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","isOptionalCall","missingParenErrorPos","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","interfaceNode","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","parseIdentifierName","parseV8Intrinsic","placeholders","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","startsWith","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createParenthesizedExpressions","unwrapParenthesizedExpression","ExpressionParser","isRecord","protoRef","isObjectMethod","used","enterInitialScopes","finalizeRemainingComments","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","resultError","_resultError$pos","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicBindingContext","bodyExpr","parseHackPipeBody","checkHackPipeBodyEarlyErrors","childExpr","parseSmartPipelineBodyInStyle","withSoloAwaitPermittingContext","parseFSharpPipelineBody","parseExprOpBaseRightExpr","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","update","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","resetPreviousNodeTrailingComments","parseSuper","parseImportMetaProperty","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","parseDo","readRegexp","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","pipeProposal","tokenType","finishTopicReference","lookaheadCh","codePointAt","expectOnePlugin","nodeType","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","pluginTopicToken","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","parenExpression","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","elem","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","parsePropertyDefinition","checkProto","parseDecorator","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","canBeReservedWord","inStaticBlock","recordAsyncArrowParametersError","inClassAndNotInNonArrowFunction","inFunction","recordParameterInitializerError","delegating","delegate","topicReferenceWasUsedInCurrentContext","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","initializeScopes","parseProgram","_node$extra3","recordParenthesizedIdentifierError","last","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","refNeedsArrowPos","parseBindingAtom","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","Parser","opts","getOptions","pluginMap","pluginsMap","parseTopLevel","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withSmartMixTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","block","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","pushClassMethod","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","getPrivateNameSV","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","isString","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","importedIsString","getParser","decoratorsBeforeExport","proposal","proposalList","p","tupleSyntaxIsHash","topicToken","tokenList","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","isDuplicate","metadata","placeholderName","reverse","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","assumption","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","makeStatementFormatter","unwrap","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","_parse","_populate","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","text","toLowerCase","colorize","supportsColor","enabled","level","matchToToken","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements"],"mappings":"0HAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAAUF,EAAQG,QAAUH,EAAQI,WAAaJ,EAAQK,WAAaL,EAAQM,UAAYN,EAAQO,WAAQ,EAElH,IAAIC,EAAaC,EAAQ,KAErBC,EAAWD,EAAQ,KAEjBF,GAAQ,EAAIG,EAASR,SAASM,EAAWD,OAC/CP,EAAQO,MAAQA,EAChB,IAAMD,GAAY,EAAII,EAASR,SAASM,EAAWF,WACnDN,EAAQM,UAAYA,EACpB,IAAMD,GAAa,EAAIK,EAASR,SAASM,EAAWH,YACpDL,EAAQK,WAAaA,EACrB,IAAMD,GAAa,EAAIM,EAASR,SAASM,EAAWJ,YACpDJ,EAAQI,WAAaA,EACrB,IAAMD,GAAU,EAAIO,EAASR,SAASM,EAAWL,SACjDH,EAAQG,QAAUA,EAElB,IAAIQ,EAAWb,OAAOc,OAAOL,EAAMM,UAAKC,GAAY,CAClDP,QACAD,YACAD,aACAD,aACAD,UACAY,IAAKR,EAAMQ,MAGbf,EAAQE,QAAUS,G,gEC7BlBb,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAsBR,SAAwBc,EAAMC,EAAMC,EAAgBC,EAASC,GAC3D,IAAMC,EAAa,CACjBC,YAAQR,EACRS,WAAOT,EACPU,UAAMV,EACNE,UAAMF,EACNG,UAAMH,EACNW,aAASX,EACTY,cAAUZ,EACVa,eAAWb,EACXc,eAAWd,EACXe,aAAc,GACdC,WAAW,EACXC,eAAe,EACfC,eAAWlB,EACXmB,qBAAiBnB,EACjBoB,qBAAiBpB,EACjBqB,yBAAqBrB,EACrBsB,gBAAgB,EAChBC,eAAgB,GAChBC,KAAM,GACNC,YAAa,GACbC,mBAAmB,EACnBC,gBAAgB,EAChBC,WAAY,KACZvB,SAAS,EACTwB,QAAS,CACPC,SAAU,CACRC,aAAa,EACbC,KAAM,GACNC,IAAK,IAAIC,KAEXC,OAAQ,CACNJ,aAAa,EACbC,KAAM,GACNC,IAAK,IAAIC,OAKTE,EAAW,SAAAC,GACfrD,OAAOc,OAAOS,EAAY8B,IAGtBC,EAAoBC,EAAMC,SAASC,SAASC,MAAM,CAACC,EAAqBC,mBAAoB,CAChGC,eADgG,SACjF3C,GACbK,EAAWkB,YAAYqB,KAAK5C,OAiChC,SAAS6C,IAKP,GAjCF,WACE,IADgC,EAC5BzB,GAAiB,EACf0B,EAAQzC,EAAWL,KAAK+C,IAAI,aAFF,IAIbD,GAJa,IAIhC,6BACE1B,EADwB,QACF4B,OAAO,OAAQ,mBALP,8BAShC,IAAI5B,EAAJ,CACA,IAAI6B,EAAQ3B,EAEZ,GAAIjB,EAAWS,UAAW,CACxB,IAAMoC,EAAcb,EAAMc,SAAS/D,WAAWW,IAA7B,4FAKjBkD,EAASC,EAAYD,OACrB3B,EAAO4B,EAAY5B,UAEnB2B,EAAS,GACT3B,EAAOe,EAAMe,MAAMC,eAAe,IAGpChD,EAAWL,KAAK+C,IAAI,QAAQO,iBAAiB,OAAQjB,EAAMe,MAAMG,YAAY,cAAelB,EAAMe,MAAMI,WAAW,eAAgBP,EAAQ3B,KAI3ImC,GAoBF,WACE,IADkB,EACZC,EAAiBrD,EAAWL,KAAK+C,IAAI,aADzB,IAGCW,GAHD,IAGlB,2BAAmC,KAAxB1D,EAAwB,QAC3BQ,EAAOR,EAAKQ,KAElB,GAAIR,EAAK2D,kBACP,MAAM3D,EAAK4D,oBAAoB,uCAGjC,GAAIpD,EAAKqD,WACP,MAAM7D,EAAK4D,oBAAoB,2EAG7BvB,EAAMe,MAAMU,cAActD,IAAO,WACnC,IAAMuD,EAA8B,gBAAdvD,EAAKwD,KACL,IAAIvB,EAAqBvD,QAAQ,CACrD+E,WAAYjE,EACZkE,UAAW7D,EAAWK,SACtByD,SAAU9D,EAAWO,UACrBwD,cAAehE,EAAYgE,cAC3BnE,KAAMI,EAAWJ,KACjBoE,cAAehE,EAAWK,WAEd4D,UACd,IAAMzD,EAAe,GACrBb,EAAKsC,SAASD,EAAMC,SAASC,SAASC,MAAM,CAACC,EAAqBC,mBAAoB,CACpF6B,gBADoF,SACpEvE,GACTA,EAAKwE,oBAAoBC,6BAC5B5D,EAAa+B,KAAK5C,QAMpB+D,EACFW,EAAgB7D,EAAcL,EAAMR,GAEpC2E,EAAWnE,EAAMR,GAxBgB,IAdrB,+BAnBlB4E,GAsIF,WACE,IAAKvE,EAAWS,UAAW,OAC3B,IAAMd,EAAOK,EAAWc,oBAClBG,EAAOtB,EAAK+C,IAAI,QACtB/C,EAAKsC,SAASF,GAEd,IAN2B,EAMvByC,EAAU,WACZ,IAAMC,EAAM9E,EAAKO,MAAMwE,8BAA8B,QAIrD,OAFAF,EAAU,kBAAMxC,EAAMe,MAAM4B,UAAUF,IAE/BA,GAXkB,IAcJzE,EAAWkB,aAdP,IAc3B,2BAA+C,KAApC0D,EAAoC,QAE3CzE,EAEEyE,EAFFzE,KAEEyE,EADFC,WAGaC,mBAAmB,CAChCC,OAAQ5E,IAERyE,EAASI,YAAYR,KAIvBI,EAASI,YAAYhD,EAAMe,MAAMkC,eAAejF,EAAWJ,KAAKsF,UAAU,yBAA0B,CAACV,QA3B5E,8BA8B3B,IAAMW,EAAa,IAAIC,IACvBzF,EAAKsC,SAASD,EAAMC,SAASC,SAASC,MAAM,CAACC,EAAqBC,mBAAoB,CACpFgD,MADoF,SAC9E1F,GACJ,IACEQ,EAEER,EAFFQ,KACA0E,EACElF,EADFkF,WAGEA,EAAWS,iBAAiB,CAC9BC,OAAQpF,KAERgF,EAAWK,IAAIX,QAKrB,IA9C2B,EAiEvBY,EAnBAC,IAAgCP,EAAWQ,KA9CpB,IAgDHR,GAhDG,IAgD3B,2BAAoC,KAAzBS,EAAyB,QAClCC,EAAcD,EAAW5F,EAAWO,UAAWiE,EAASvD,GAEpDyE,GACFE,EAAUE,MAAK,SAAUjB,GACvB,OAAIA,IAAelF,IAIfkF,EAAWkB,UAAYlB,EAAWmB,iBAAmBnB,EAAWT,6BAClEsB,GAA8B,GACvB,QAFT,OAzDqB,8BAoEzBD,EADEzF,EAAWF,QACA,SAAAmG,GACX,IAAMC,EAAWlE,EAAMe,MAAMkC,eAAejF,EAAWJ,KAAKsF,UAAU,yBAA0B,CAACV,MAEjG,OAAOyB,EAAYjE,EAAMe,MAAMoD,kBAAkB,KAAMF,EAAWC,GAAYA,GAGnE,SAAAD,GAAS,OAAIjE,EAAMe,MAAMkC,eAAejF,EAAWJ,KAAKsF,UAAU,6BAA8B,CAACV,KAAW4B,OAAOH,GAAa,MAG/I,IAAMI,EAAYpF,EAAKyB,IAAI,QAEtB2D,EAAUC,QAAWD,EAAUE,MAAMC,qBACxCvF,EAAKwF,cAAc,OAAQzE,EAAMe,MAAM2D,gBAAgBhB,EAA8BlB,IAAYiB,MAhFxE,UAmFFzF,EAAWQ,cAnFT,IAmF3B,2BAAkD,KAAvCmG,EAAuC,QAChDA,EAAWjE,IAAI,YAAYsC,YAAYS,EAAWkB,EAAWxG,KAAKyG,YApFzC,+BArI3BC,GAEI7G,EAAWa,gBAAiB,CAC9B,IACED,EAGEZ,EAHFY,gBACAC,EAEEb,EAFFa,gBACAF,EACEX,EADFW,UAEFC,EAAgBK,KAAOL,EAAgBK,KAAKmF,OAAOvF,EAAgBI,KAAKA,MAExEe,EAAMe,MAAM+D,SAASnG,EAAWE,GAEhCmB,EAAMe,MAAM+D,SAASlG,EAAiBC,EAAgBI,MAGxD8F,IA+CF,SAASA,IACPC,IASA,IARA,IACE/F,EACEjB,EADFiB,KAEIgG,EAAQ,CACZ1F,SAAU,KACVK,OAAQ,MAGV,MAAwB,CAAC,SAAU,YAAnC,eAAgD,CAA3C,IAAMsF,EAAS,KACdlH,EAAWsB,QAAQ4F,GAAWzF,KAAK6E,SACrCW,EAAMC,GAAalH,EAAWsB,QAAQ4F,GAAWzF,KAAKC,KAAI,SAAAyF,GAGxD,IAFA,IAAMC,EAAMpF,EAAMe,MAAMsE,iBAAiB,CAACrF,EAAMe,MAAMuE,eAAetF,EAAMe,MAAMI,WAAW,OAAQgE,EAAKI,OAEzG,MAAmB,CAAC,MAAO,MAAO,SAAlC,eAA4C,CAAvC,IAAM5D,EAAI,KACK,MAAdwD,EAAKxD,IACPyD,EAAII,WAAWjF,KAAKP,EAAMe,MAAMuE,eAAetF,EAAMe,MAAMI,WAAWQ,GAAOwD,EAAKxD,KAItF,OAAOyD,MAKb,GAAIH,EAAM1F,UAAY0F,EAAMrF,OAAQ,CAIlC,IAHA,IAAI6F,EAAO,CAACzF,EAAMe,MAAM4B,UAAU3E,EAAWK,UAAW4G,EAAM1F,SAAWS,EAAMe,MAAM2E,gBAAgBT,EAAM1F,UAAYS,EAAMe,MAAM4E,cAAeV,EAAMrF,OAASI,EAAMe,MAAM2E,gBAAgBT,EAAMrF,QAAUI,EAAMe,MAAM4E,eACrNC,EAAmB,EAEdC,EAAI,EAAGA,EAAIJ,EAAKnB,OAAQuB,IAC1B7F,EAAMe,MAAM+E,cAAcL,EAAKI,MAAKD,EAAmBC,GAG9DJ,EAAOA,EAAKM,MAAM,EAAGH,EAAmB,GACxC3G,EAAKsB,KAAKP,EAAMe,MAAMiF,oBAAoBhG,EAAMe,MAAMkC,eAAejF,EAAWJ,KAAKsF,UAAU,eAAgBuC,MAInH,SAAS5B,EAAcD,EAAW9B,EAAUU,EAASvD,GACnD,IACIgH,EADEC,EAAgBtC,EAAUzF,KAG5BJ,EAAYoI,4BACdD,EAAcE,UAAUC,QAAQrG,EAAMe,MAAMuF,kBAEL,IAAnCJ,EAAcE,UAAU9B,QAAgBtE,EAAMe,MAAMwF,gBAAgBL,EAAcE,UAAU,KAAOpG,EAAMe,MAAMyF,aAAaN,EAAcE,UAAU,GAAGxB,SAAU,CACnK6B,KAAM,eAENP,EAAcE,UAAU,GAAKF,EAAcE,UAAU,GAAGxB,SACxDsB,EAAc3C,OAASvD,EAAMe,MAAM2F,iBAAiB1G,EAAMe,MAAM4B,UAAUb,GAAW9B,EAAMe,MAAMI,WAAW,WAE5G+E,EAAc3C,OAASvD,EAAMe,MAAM2F,iBAAiB1G,EAAMe,MAAM4B,UAAUb,GAAW9B,EAAMe,MAAMI,WAAW,SAG9G8E,EAAOjG,EAAMe,MAAMoD,kBAAkB,KAAM+B,EAAelG,EAAMe,MAAMuF,mBAEtEL,GAAO,EAAIU,EAA8B9J,SAASmD,EAAMe,MAAM4B,UAAU3E,EAAWM,WAAY0B,EAAMe,MAAMuF,iBAAkBJ,EAAcE,WAGzIxC,EAAUf,WAAW+D,yBAA2BhD,EAAUf,WAAWgE,YAAc5H,EAAKd,KAAKc,MAAQA,EAAKd,KAAKc,KAAKqF,OAAS,IAAMV,EAAUf,WAAW0C,KACtJvH,EAAWkB,YAAYoF,SACzB2B,EAAOjG,EAAMe,MAAM+F,qBAAqB,IAAKtE,IAAWyD,IAG1DrC,EAAUf,WAAWG,YAAYhD,EAAMe,MAAM2D,gBAAgBuB,KAE7DrC,EAAUZ,YAAYhD,EAAMe,MAAM+F,qBAAqB,IAAKtE,IAAWyD,IA4F3E,SAAS3D,EAAWnE,EAAMR,GACxB,IAAMO,EAAQP,EAAOA,EAAKO,MAAQF,EAAWE,MAE7C,GAAkB,WAAdC,EAAKwD,OAgDX,SAAuBxD,EAAMD,GAC3B,GAAIH,EAAYgJ,kBAAoB5I,EAAKqD,WAAY,CACnD,IACEnD,EACEL,EADFK,SAGGF,EAAKyB,UAgCd,WACE,GAA8B,OAA1B5B,EAAWqB,WAAqB,CAClCQ,EAAS,CACPR,WAAYrB,EAAWE,MAAM8I,sBAAsB,WAGrD,IAAMC,EAAajH,EAAMe,MAAM2F,iBAAiB1I,EAAWK,SAAU2B,EAAMe,MAAMI,WAAW,cAEtF+F,EAAmBlH,EAAMe,MAAMoG,oBAAoB,MAAO,CAACnH,EAAMe,MAAMqG,mBAAmBpJ,EAAWqB,WAAY4H,KAEvHjJ,EAAWiB,KAAKsB,KAAK2G,IAzCnBG,GACAhJ,EAAWL,EAAWqB,YAGxB,IAAMiI,EAAatH,EAAMe,MAAM2F,iBAAiB1G,EAAMe,MAAM4B,UAAUtE,GAAWF,EAAKoH,IAAKpH,EAAKoJ,UAAYvH,EAAMe,MAAMyG,UAAUrJ,EAAKoH,MAEnIkC,EAAOzH,EAAMe,MAAM2G,mBAAmB,KAAMvJ,EAAKyC,OAAQzC,EAAKc,KAAMd,EAAKwJ,UAAWxJ,EAAKyJ,OAE7F5H,EAAMe,MAAM+D,SAAS2C,EAAMtJ,GAE3B,IAAMoH,EAAMvF,EAAMe,MAAM8G,cAAc1J,EAAMA,EAAKoH,KAE7CvF,EAAMe,MAAM+G,gBAAgBvC,KAC9BkC,GAAO,EAAIM,EAAoBlL,SAAS,CACtCsB,KAAMsJ,EACNO,GAAIzC,EACJrH,WAIJ,IAAM+J,EAAOjI,EAAMe,MAAMiF,oBAAoBhG,EAAMe,MAAM+F,qBAAqB,IAAKQ,EAAYG,IAK/F,OAHAzH,EAAMe,MAAMmH,iBAAiBD,EAAM9J,GAEnCH,EAAWiB,KAAKsB,KAAK0H,IACd,EAGT,OAAO,EAlFDE,CAAchK,EAAMD,GAD1B,CAIA,IAmBIkK,EAnBElD,EAAY/G,EAAKyB,OAAS,SAAW,WACrCN,EAAUtB,EAAWsB,QAAQ4F,GAC7BmD,EAAwB,WAAdlK,EAAKwD,KAAoB,QAAUxD,EAAKwD,KAClD4D,EAAMvF,EAAMe,MAAMuH,iBAAiBnK,EAAKoH,MAAQvF,EAAMe,MAAMwH,gBAAgBpK,EAAKoH,KAAOvF,EAAMe,MAAMyH,cAAcC,OAAOtK,EAAKoH,IAAI3I,QAAUoD,EAAMe,MAAM8G,cAAc1J,GAExKuK,EAAK1I,EAAMe,MAAM4H,aAAaxK,GAE9B6B,EAAMe,MAAM+G,gBAAgBvC,GACZ,WAAdpH,EAAKwD,OACP+G,GAAK,EAAIX,EAAoBlL,SAAS,CACpCmL,GAAIzC,EACJpH,KAAMA,EACND,WAIJoB,EAAQE,aAAc,GAKnBF,EAAQE,aAAeF,EAAQI,IAAIkJ,IAAIrD,EAAI3I,SAC9CwL,EAAa9I,EAAQI,IAAIgB,IAAI6E,EAAI3I,QACtByL,GAAWK,EAEN,UAAZL,GACFD,EAAW1H,IAAM,KACjB0H,EAAWS,IAAM,MAEjBT,EAAWxL,MAAQ,OAGrBwL,EAAa,EAAH,CACR7C,IAAKA,GACJ8C,EAAUK,GAEbpJ,EAAQG,KAAKc,KAAK6H,GAEb9I,EAAQE,aACXF,EAAQI,IAAImJ,IAAItD,EAAI3I,MAAOwL,KAyDjC,SAAS/F,EAAgB7D,EAAcsK,EAAQnL,GAC7CkC,EAAS,CACPf,oBAAqBnB,EACrBkB,gBAAiBiK,EACjB/J,gBAAgB,EAChBP,iBAEF,IACEG,EACEX,EADFW,UAGFqB,EAAMe,MAAMmH,iBAAiBvJ,EAAWmK,GAExCnK,EAAUiC,OAASkI,EAAOlI,OAE1BZ,EAAMe,MAAM+D,SAASnG,EAAUM,KAAM6J,EAAO7J,MAE5CN,EAAUM,KAAK8J,WAAaD,EAAO7J,KAAK8J,WAI1C,WACE,GAAI/K,EAAWmB,kBAAmB,OAClCnB,EAAWmB,mBAAoB,GAE3BnB,EAAWgL,wBAA0BhL,EAAWiL,uBAClDlE,IAGF/G,EAAWiB,KAAKsB,KAAKvC,EAAWW,WAChCqG,IAZAkE,GAeF,SAASlE,IACP,GAAKhH,EAAWS,YAAaT,EAAWoB,eAAxC,CACA,IAAMd,EAAYX,EAAKO,MAAM8I,sBAAsB,SACnDnH,EAAS,CACPT,gBAAgB,EAChBd,cAGGP,EAAYoI,4BACfnI,EAAWiB,KAAKoH,QAAQrG,EAAMe,MAAMoG,oBAAoB,MAAO,CAACnH,EAAMe,MAAMqG,mBAAmB9I,EAAW0B,EAAMe,MAAMkC,gBAAe,EAAIkG,EAA0BtM,SAASmB,EAAWJ,MAAO,CAACoC,EAAMe,MAAM4B,UAAU3E,EAAWK,gBAGlOL,EAAWiB,KAAKoH,QAAQrG,EAAMe,MAAMiF,oBAAoBhG,EAAMe,MAAMkC,eAAejF,EAAWJ,KAAKsF,UAAUlF,EAAWF,QAAU,gBAAkB,YAAa,CAACkC,EAAMe,MAAM4B,UAAU3E,EAAWK,UAAW2B,EAAMe,MAAM4B,UAAU3E,EAAWO,gBAsGjP,OAtEA,SAA0BZ,EAAMC,EAAMC,EAAgBC,GACpD+B,EAAS,CACP5B,OAAQN,EAAKM,OACbC,MAAOP,EAAKO,MACZC,KAAMR,EAAKQ,KACXR,OACAC,OACAE,YAEF+B,EAAS,CACPzB,QAASJ,EAAWG,KAAK6J,GACzB3J,SAAUL,EAAWG,KAAK6J,GAAKhI,EAAMe,MAAMI,WAAWnD,EAAWG,KAAK6J,GAAGvB,MAAQzI,EAAWE,MAAM8I,sBAAsB,SACxHzI,UAAWP,EAAWG,KAAKiL,WAC3B3K,YAAaT,EAAWG,KAAKiL,WAC7BxK,gBAAiBoB,EAAMe,MAAMC,eAAe,MAE9CnB,EAAS,CACPnB,cAAeV,EAAWS,WAAaZ,EAAe+K,IAAI5K,EAAWO,UAAUkI,QAAUzI,EAAWE,MAAMmL,WAAWrL,EAAWO,UAAUkI,MAAM,KAElJ,IACEpI,EAGEL,EAHFK,SACAF,EAEEH,EAFFG,KACAS,EACEZ,EADFY,gBAEFiB,EAAS,CACPlB,UAAW2K,EAAiBjL,EAAUO,EAAiBT,KAEzD,IACEc,EACEjB,EADFiB,KAEF,EA3DF,WACE,IACEV,EACEP,EADFO,UAEIgL,EAAgB,GAChBC,EAAc,GAEpB,GAAIxL,EAAWS,UAAW,CACxB,IAAIgL,EAAMzJ,EAAMe,MAAM4B,UAAUpE,GAE5BP,EAAWU,gBACb+K,EAAMzJ,EAAMe,MAAMkC,eAAejF,EAAWJ,KAAKsF,UAAU,mBAAoB,CAACuG,KAChF,EAAIC,EAAsB7M,SAAS4M,IAGrC,IAAME,EAAQ3L,EAAWE,MAAM0L,iCAAiCrL,GAChEgL,EAAchJ,KAAKoJ,GACnBH,EAAYjJ,KAAKkJ,GACjB5J,EAAS,CACPtB,UAAWyB,EAAMe,MAAM4B,UAAUgH,KAIrC,MAAO,CACLJ,gBACAC,eAqCEK,GAFFN,EADF,EACEA,cACAC,EAFF,EAEEA,YAEFhJ,IAEKzC,EAAY+L,cACflL,EAAgBK,KAAKoH,QAAQrG,EAAMe,MAAMiF,oBAAoBhG,EAAMe,MAAMkC,eAAejF,EAAWJ,KAAKsF,UAAU,kBAAmB,CAAClD,EAAMe,MAAMuF,iBAAkBtG,EAAMe,MAAM4B,UAAU3E,EAAWK,cAGvMY,EAAOA,EAAKmF,OAAOpG,EAAWgB,eAAeU,KAAI,SAAAgJ,GAAE,OAAIA,EAAG1I,EAAMe,MAAM4B,UAAU3E,EAAWK,eAC3F,IAAM0L,EAAWpM,EAAKqM,iBAClBC,EAAkBjM,EAAWI,SAA2B,IAAhBa,EAAKqF,OAEjD,GAAI2F,IAAoBF,EAAU,WACZ/L,EAAWW,UAAUiC,QADT,IAChC,2BAAiD,KAAtC+I,EAAsC,QAC/C,IAAK3J,EAAMe,MAAMyF,aAAamD,GAAQ,CACpCM,GAAkB,EAClB,QAJ4B,+BASlC,IAAMlB,EAAakB,EAAkBhL,EAAK,GAAGA,KAAK8J,WAAa,GAM/D,GAJKgB,GACHhB,EAAWxI,KAAKP,EAAMe,MAAMmJ,UAAUlK,EAAMe,MAAMoJ,iBAAiB,gBAGjEF,EACF,OAAOjK,EAAMe,MAAM4H,aAAa1J,EAAK,IAGvCA,EAAKsB,KAAKP,EAAMe,MAAM2D,gBAAgB1E,EAAMe,MAAM4B,UAAU3E,EAAWK,YAEvE,IAAMwI,EAAY7G,EAAMe,MAAMqJ,wBAAwBb,EAAevJ,EAAMe,MAAMC,eAAe/B,EAAM8J,IAEtG,OAAO/I,EAAMe,MAAMkC,eAAe4D,EAAW2C,GAGxCa,CAAiB1M,EAAMC,EAAMC,EAAgBC,IA7jBtD,IAAIiK,EAAsB3K,EAAQ,KAE9BgD,EAAuBhD,EAAQ,KAE/BuJ,EAAgCvJ,EAAQ,KAExC4C,EAAQ5C,EAAQ,KAEhBsM,EAAwBtM,EAAQ,KAEhC+L,EAA4B/L,EAAQ,MAExC,SAASkM,EAAiBjL,EAAUO,EAAiBT,GACnD,IAAMsJ,EAAOzH,EAAMe,MAAMuJ,oBAAoBtK,EAAMe,MAAM4B,UAAUtE,GAAW,GAAIO,GAIlF,OAFAoB,EAAMe,MAAM+D,SAAS2C,EAAMtJ,GAEpBsJ,I,gDCtBThL,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAMR,SAA8Be,GAC5B,GAAI2M,EAAU3B,IAAIhL,GAChB,OAAQoC,EAAMe,MAAM4B,WAAa3C,EAAMe,MAAMyJ,OAAOD,EAAU7J,IAAI9C,IAGpE,IACE,OAAOA,EAAKsF,UAAU,eACtB,MAAOuH,IAET,IAAMzC,EAAKpK,EAAKM,MAAM8I,sBAAsB,eAC5CuD,EAAU1B,IAAIjL,EAAMoK,GACpB,IAAMU,EAAKgC,EAAO,CAChBC,aAAc3C,EACd4C,iBAAkBhN,EAAKsF,UAAU,kBACjC2H,4BAA6BjN,EAAKsF,UAAU,+BAI9C,OAFAtF,EAAKD,KAAKsD,iBAAiB,OAAQ,CAACyH,IACpC9K,EAAKM,MAAM4M,oBAAoBlN,EAAKD,KAAK+C,IAAI,WACtCV,EAAMe,MAAM4B,UAAUqF,IAtB/B,IAAIhI,EAAQ5C,EAAQ,KAEdmN,EAAY,IAAIQ,QAuBtB,IAAML,EAAS1K,EAAMc,SAAS7D,UAAlB,+hD,6GC9BZR,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IAEtD,IAAMoO,GAAa,EACbC,GAAa,EACblH,GAAS,EACTmH,GAAW,EACXC,GAAS,EAETC,EACJ,WAAYC,GAAkB,IAAXC,EAAW,uDAAJ,GAAI,UAC5BC,KAAKF,WAAQ,EACbE,KAAKC,aAAU,EACfD,KAAKP,gBAAa,EAClBO,KAAKN,gBAAa,EAClBM,KAAKE,sBAAmB,EACxBF,KAAKxH,YAAS,EACdwH,KAAKL,cAAW,EAChBK,KAAKJ,YAAS,EACdI,KAAKG,aAAU,EACfH,KAAKI,WAAQ,EACbJ,KAAKK,mBAAgB,EACrBL,KAAKF,MAAQA,EACbE,KAAKC,QAAUF,EAAKE,QACpBD,KAAKP,aAAeM,EAAKN,WACzBO,KAAKN,aAAeK,EAAKL,WACzBM,KAAKE,mBAAqBH,EAAKG,iBAC/BF,KAAKxH,SAAWuH,EAAKvH,OACrBwH,KAAKL,WAAaI,EAAKJ,SACvBK,KAAKJ,SAAWG,EAAKH,OACrBI,KAAKG,UAAYJ,EAAKI,QACtBH,KAAKI,MAAsB,MAAdL,EAAKK,MAAgBL,EAAKK,MAAQ,KAC/CJ,KAAKK,cAAgB,MAInBC,EAAa,IAAIlM,IAEvB,SAASmM,EAAcrF,GAAoB,IAAdsF,EAAc,uDAAJ,GACrCA,EAAQP,QAAU/E,EAClB,IAAMuF,EAAQ,IAAIZ,EAAU3E,EAAMsF,GAElC,OADAF,EAAWhD,IAAIpC,EAAMuF,GACdA,EAGT,SAASC,EAAYxF,EAAMkF,GACzB,OAAO,IAAIP,EAAU3E,EAAM,CACzBuE,aACAW,UAIJ,IAAMO,EAAU,CACdC,IAAK,IAAIf,EAAU,MAAO,CACxBH,eAEFmB,OAAQ,IAAIhB,EAAU,SAAU,CAC9BH,eAEFoB,QAAS,IAAIjB,EAAU,UAAW,CAChCH,eAEFqB,OAAQ,IAAIlB,EAAU,SAAU,CAC9BH,eAEFsB,OAAQ,IAAInB,EAAU,SAAU,CAC9BH,eAEFxE,KAAM,IAAI2E,EAAU,OAAQ,CAC1BH,eAEFuB,YAAa,IAAIpB,EAAU,QAAS,CAClCH,eAEFwB,IAAK,IAAIrB,EAAU,OACnBsB,SAAU,IAAItB,EAAU,IAAK,CAC3BJ,aACAC,eAEF0B,aAAc,IAAIvB,EAAU,KAAM,CAChCJ,aACAC,eAEF2B,YAAa,IAAIxB,EAAU,KAAM,CAC/BJ,aACAC,eAEF4B,SAAU,IAAIzB,EAAU,KACxB0B,YAAa,IAAI1B,EAAU,MAC3B2B,OAAQ,IAAI3B,EAAU,IAAK,CACzBJ,aACAC,eAEF+B,UAAW,IAAI5B,EAAU,KAAM,CAC7BJ,aACAC,eAEFgC,WAAY,IAAI7B,EAAU,KAAM,CAC9BJ,aACAC,eAEFiC,OAAQ,IAAI9B,EAAU,IAAK,CACzBJ,eAEFmC,UAAW,IAAI/B,EAAU,MACzBgC,OAAQ,IAAIhC,EAAU,IAAK,CACzBJ,aACAC,eAEFoC,OAAQ,IAAIjC,EAAU,KACtBkC,MAAO,IAAIlC,EAAU,IAAK,CACxBJ,eAEFuC,KAAM,IAAInC,EAAU,IAAK,CACvBJ,eAEFwC,MAAO,IAAIpC,EAAU,IAAK,CACxBJ,eAEFyC,YAAa,IAAIrC,EAAU,KAAM,CAC/BJ,eAEF0C,IAAK,IAAItC,EAAU,KACnBuC,SAAU,IAAIvC,EAAU,IAAK,CAC3BJ,eAEF4C,YAAa,IAAIxC,EAAU,MAC3ByC,MAAO,IAAIzC,EAAU,KAAM,CACzBJ,eAEFlK,SAAU,IAAIsK,EAAU,YACxB0C,SAAU,IAAI1C,EAAU,MAAO,CAC7BJ,eAEF+C,UAAW,IAAI3C,EAAU,IAAK,CAC5BH,eAEF+C,aAAc,IAAI5C,EAAU,KAAM,CAChCJ,aACAC,eAEFgD,GAAI,IAAI7C,EAAU,KAClB8C,KAAM,IAAI9C,EAAU,IAAK,CACvBH,eAEFkD,qBAAsB,IAAI/C,EAAU,SACpCgD,GAAI,IAAIhD,EAAU,IAAK,CACrBJ,aACAE,aAEF3N,OAAQ,IAAI6N,EAAU,KAAM,CAC1BJ,aACAE,aAEFmD,YAAa,IAAIjD,EAAU,KAAM,CAC/BJ,aACAE,aAEFoD,aAAc,IAAIlD,EAAU,KAAM,CAChCJ,aACAE,aAEFqD,OAAQ,IAAInD,EAAU,QAAS,CAC7BD,SACAO,SA5JY,EA6JZT,eAEFuD,KAAM,IAAIpD,EAAU,IAAK,CACvBJ,aACAG,SACAF,eAEFwD,MAAO,IAAIrD,EAAU,IAAK,CACxBJ,aACAG,SACAF,eAEFyD,SAAUzC,EAAY,KAAM,GAC5B0C,kBAAmB1C,EAAY,KAAM,GACrC2C,UAAW3C,EAAY,KAAM,GAC7B4C,WAAY5C,EAAY,KAAM,GAC9B6C,UAAW7C,EAAY,IAAK,GAC5B8C,WAAY9C,EAAY,IAAK,GAC7B+C,WAAY/C,EAAY,IAAK,GAC7BgD,SAAUhD,EAAY,gBAAiB,GACvCiD,WAAYjD,EAAY,YAAa,GACrCkD,SAAUlD,EAAY,YAAa,GACnCmD,QAAS,IAAIhE,EAAU,MAAO,CAC5BJ,aACAW,MAAO,EACPR,SACAF,eAEFoE,OAAQ,IAAIjE,EAAU,IAAK,CACzBO,MAAO,GACPV,eAEFqE,KAAM,IAAIlE,EAAU,IAAK,CACvBO,MAAO,KAET4D,MAAOtD,EAAY,IAAK,IACxBuD,SAAU,IAAIpE,EAAU,KAAM,CAC5BJ,aACAW,MAAO,GACPF,kBAAkB,IAEpBgE,OAAQ3D,EAAc,SACtB4D,MAAO5D,EAAc,OAAQ,CAC3Bd,eAEF2E,OAAQ7D,EAAc,SACtB8D,UAAW9D,EAAc,YACzB+D,UAAW/D,EAAc,YACzBxO,SAAUwO,EAAc,UAAW,CACjCd,eAEF8E,IAAKhE,EAAc,KAAM,CACvB/H,SACAiH,eAEF+E,MAAOjE,EAAc,OAAQ,CAC3Bd,eAEFgF,SAAUlE,EAAc,WACxBmE,KAAMnE,EAAc,MAAO,CACzB/H,WAEFmM,UAAWpE,EAAc,WAAY,CACnCb,eAEFkF,IAAKrE,EAAc,MACnBsE,QAAStE,EAAc,SAAU,CAC/Bd,eAEFqF,QAASvE,EAAc,UACvBwE,OAAQxE,EAAc,QAAS,CAC7Bd,aACAG,SACAF,eAEFsF,KAAMzE,EAAc,OACpB0E,KAAM1E,EAAc,OACpB2E,OAAQ3E,EAAc,SACtB4E,OAAQ5E,EAAc,QAAS,CAC7B/H,WAEF4M,MAAO7E,EAAc,QACrB8E,KAAM9E,EAAc,MAAO,CACzBd,aACAC,eAEF4F,MAAO/E,EAAc,OAAQ,CAC3Bb,eAEF6F,OAAQhF,EAAc,QAAS,CAC7Bb,eAEF8F,OAAQjF,EAAc,QAAS,CAC7Bb,eAEF+F,SAAUlF,EAAc,UAAW,CACjCd,eAEFiG,QAASnF,EAAc,UACvBoF,QAASpF,EAAc,SAAU,CAC/Bb,eAEFkG,MAAOrF,EAAc,OAAQ,CAC3Bb,eAEFmG,MAAOtF,EAAc,OAAQ,CAC3Bb,eAEFoG,OAAQvF,EAAc,QAAS,CAC7Bb,eAEFqG,IAAKxF,EAAc,KAAM,CACvBd,aACAW,MAAO,IAET4F,YAAazF,EAAc,aAAc,CACvCd,aACAW,MAAO,IAET6F,QAAS1F,EAAc,SAAU,CAC/Bd,aACAG,SACAF,eAEFwG,MAAO3F,EAAc,OAAQ,CAC3Bd,aACAG,SACAF,eAEFyG,QAAS5F,EAAc,SAAU,CAC/Bd,aACAG,SACAF,gBAIE0G,EAAY,yBACZC,EAAa,IAAIC,OAAOF,EAAUG,OAAQ,KAChD,SAASC,EAAUC,GACjB,OAAQA,GACN,KAAK,GACL,KAAK,GACL,KAAK,KACL,KAAK,KACH,OAAO,EAET,QACE,OAAO,GAGb,IAAMC,EAAiB,gCACjBC,EAAuB,IAAH,uEACpBC,EAA4B,IAAIN,OAAO,OAASK,EAAqBJ,OAAS,QAAU,2CAA2CA,OAAQ,KACjJ,SAASM,EAAaJ,GACpB,OAAQA,GACN,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,MACL,KAAK,MACH,OAAO,EAET,QACE,OAAO,G,IAIPK,EACJ,WAAYC,EAAMC,GAAK,UACrBhH,KAAK+G,UAAO,EACZ/G,KAAKiH,YAAS,EACdjH,KAAK+G,KAAOA,EACZ/G,KAAKiH,OAASD,GAIZE,EACJ,WAAYC,EAAOC,GAAK,UACtBpH,KAAKmH,WAAQ,EACbnH,KAAKoH,SAAM,EACXpH,KAAKqH,cAAW,EAChBrH,KAAKsH,oBAAiB,EACtBtH,KAAKmH,MAAQA,EACbnH,KAAKoH,IAAMA,GAkCf,SAASG,EAAoB3U,EAAM4U,GAG1B,WAFuBtV,IAA1BU,EAAK6U,iBACP7U,EAAK6U,iBAAmBD,GAExB,EAAA5U,EAAK6U,kBAAiB3M,QAAtB,UAAiC0M,IAIrC,SAASE,EAAiB9U,EAAM4U,GAC9B,QAA2BtV,IAAvBU,EAAK+U,cACP/U,EAAK+U,cAAgBH,OAChB,QAAiBtV,IAAbsV,EAAwB,QACjC,EAAA5U,EAAK+U,eAAc7M,QAAnB,UAA8B0M,KAIlC,SAASI,EAAoBhV,EAAMiV,EAAUC,GAI3C,IAHA,IAAIC,EAAc,KACdzN,EAAIuN,EAAS9O,OAEM,OAAhBgP,GAAwBzN,EAAI,GACjCyN,EAAcF,IAAWvN,GAGP,OAAhByN,GAAwBA,EAAYZ,MAAQW,EAAUX,MACxDO,EAAiB9U,EAAMkV,EAAUN,UAEjCD,EAAoBQ,EAAaD,EAAUN,U,IAIzCQ,E,wHACJ,SAAWC,GACLjI,KAAKqH,WAAUY,EAAQC,IAAIb,SAAWrH,KAAKqH,UAC/CrH,KAAKmI,MAAMX,SAASxS,KAAKiT,K,4BAG3B,SAAerV,GACb,IACEwV,EACEpI,KAAKmI,MADPC,aAEIC,EAAqBD,EAAarP,OACxC,GAA2B,IAAvBsP,EAAJ,CACA,IAAI/N,EAAI+N,EAAqB,EACvBC,EAAgBF,EAAa9N,GAE/BgO,EAAcnB,QAAUvU,EAAKwU,MAC/BkB,EAAcC,YAAc3V,EAC5B0H,KAOF,IAJA,IACSkO,EACL5V,EADFuU,MAGK7M,GAAK,EAAGA,IAAK,CAClB,IAAMwN,EAAYM,EAAa9N,GACzBmO,EAAaX,EAAUV,IAE7B,KAAIqB,EAAaD,GAIV,CACDC,IAAeD,IACjBV,EAAUY,aAAe9V,GAG3B,MARAkV,EAAUa,eAAiB/V,EAC3BoN,KAAK4I,gBAAgBd,GACrBM,EAAaS,OAAOvO,EAAG,O,6BAW7B,SAAgBwN,GACd,IACEN,EACEM,EADFN,SAGF,GAA8B,OAA1BM,EAAUS,aAAmD,OAA3BT,EAAUY,aAChB,OAA1BZ,EAAUS,aACZhB,EAAoBO,EAAUS,YAAaf,GAGd,OAA3BM,EAAUY,eACZZ,EAAUY,aAAaI,gBAAkBtB,OAEtC,CACL,IACkB5U,EAEdkV,EAFFa,eACOI,EACLjB,EADFX,MAGF,GAAgD,KAA5CnH,KAAKgJ,MAAMC,WAAWF,EAAe,GACvC,OAAQnW,EAAKsW,MACX,IAAK,mBACL,IAAK,gBACL,IAAK,mBACHtB,EAAoBhV,EAAMA,EAAKqH,WAAY6N,GAC3C,MAEF,IAAK,iBACL,IAAK,yBACHF,EAAoBhV,EAAMA,EAAKiI,UAAWiN,GAC1C,MAEF,IAAK,sBACL,IAAK,qBACL,IAAK,0BACL,IAAK,eACL,IAAK,cACL,IAAK,qBACHF,EAAoBhV,EAAMA,EAAKyC,OAAQyS,GACvC,MAEF,IAAK,kBACL,IAAK,eACL,IAAK,kBACHF,EAAoBhV,EAAMA,EAAKiV,SAAUC,GACzC,MAEF,IAAK,yBACL,IAAK,oBACHF,EAAoBhV,EAAMA,EAAKuW,WAAYrB,GAC3C,MAEF,QAEIJ,EAAiB9U,EAAM4U,QAI7BE,EAAiB9U,EAAM4U,M,uCAK7B,WAKE,IAJA,IACEY,EACEpI,KAAKmI,MADPC,aAGO9N,EAAI8N,EAAarP,OAAS,EAAGuB,GAAK,EAAGA,IAC5C0F,KAAK4I,gBAAgBR,EAAa9N,IAGpC0F,KAAKmI,MAAMC,aAAe,K,+CAG5B,SAAkCxV,GAChC,IACEwV,EACEpI,KAAKmI,MADPC,aAGArP,EACEqP,EADFrP,OAEF,GAAe,IAAXA,EAAJ,CACA,IAAM+O,EAAYM,EAAarP,EAAS,GAEpC+O,EAAUS,cAAgB3V,IAC5BkV,EAAUS,YAAc,W,cA9K5B,aAAc,UACZvI,KAAKoJ,mBAAoB,EACzBpJ,KAAKqJ,6BAA8B,E,mCAGrC,SAAUnO,GACR,OAAO8E,KAAKsJ,QAAQjM,IAAInC,K,6BAG1B,SAAgBqO,EAAQrO,GACtB,GAAI8E,KAAKwJ,UAAUD,GAAS,OAAOvJ,KAAKsJ,QAAQnU,IAAIoU,GAAQrO,O,MA0K1DuO,EAAavY,OAAOwY,OAAO,CAC/BC,YAAa,4BACbC,sBAAuB,4CAGnBC,EAAgBC,EAAmB,CACvCC,oBAAqB,iCACrBC,iBAAkB,8DAClBC,sCAAuC,2EACvCC,uBAAwB,8DACxBC,oCAAqC,2DACrCC,+BAAgC,uDAChCC,uBAAwB,mFACxBC,wBAAyB,kDACzBC,eAAgB,uDAChBC,eAAgB,0DAChBC,uBAAwB,kEACxBC,sBAAuB,oDACvBC,6BAA8B,6DAC9BC,sBAAuB,4CACvBC,mBAAoB,0CACpBC,uBAAwB,oCACxBC,8BAA+B,wCAC/BC,sBAAuB,oKACvBC,qBAAsB,kFACtBC,qBAAsB,mHACtBC,mBAAoB,kDACpBC,qBAAsB,gDACtBC,mBAAoB,2CACpBC,uBAAwB,qGACxBC,qBAAsB,2CACtBC,uBAAwB,8CACxBC,gBAAiB,uEACjBC,eAAgB,sCAChBC,qBAAsB,qCACtBC,iBAAkB,qCAClBC,2BAA4B,0BAC5BC,sBAAuB,uIACvBC,8BAA+B,iEAC/BC,uBAAwB,8DACxBC,WAAY,0DACZC,SAAU,gEACVC,kCAAmC,sEACnCC,qBAAsB,kBACtBC,6BAA8B,6EAC9BC,cAAe,gCACfC,sBAAuB,oGACvBC,gCAAiC,6DACjCC,gBAAiB,kCACjBC,2BAA4B,mCAC5BC,yBAA0B,sCAC1BC,qBAAsB,yBACtBC,iBAAkB,4BAClBC,eAAgB,mBAChBC,aAAc,+BACdC,sBAAuB,iCACvBC,8BAA+B,uCAC/BC,2BAA4B,iCAC5BC,kBAAmB,yBACnBC,WAAY,gCACZC,kBAAmB,wCACnBC,cAAe,kBACfC,yBAA0B,iEAC1BC,yBAA0B,6BAC1BC,+BAAgC,4CAChCC,8BAA+B,mCAC/BC,8BAA+B,6BAC/BC,sBAAuB,yEACvBC,6BAA8B,oCAC9BC,mBAAoB,kCACpBC,oBAAqB,8EACrBC,0BAA2B,wCAC3BC,qBAAsB,mCACtBC,iBAAkB,4BAClBC,sBAAuB,8DACvBC,iBAAkB,qBAClBC,qBAAsB,6CACtBC,0BAA2B,sFAC3BC,iCAAkC,gDAClCC,4BAA6B,+DAC7BC,kCAAmC,0DACnCC,iCAAkC,iEAClCC,sBAAuB,8BACvBC,yBAA0B,4BAC1BC,kBAAmB,+BACnBC,iBAAkB,mCAClBC,iBAAkB,oCAClBC,iCAAkC,8FAClCC,kBAAmB,0FACnBC,sBAAuB,2DACvBC,2BAA4B,6DAC5BC,sBAAuB,kEACvBC,UAAW,uBACXC,mBAAoB,iDACpBC,iBAAkB,wCAClBC,kBAAmB,kJACnBC,2BAA4B,kHAC5BC,iBAAkB,6DAClBC,2BAA4B,mKAC5BC,gBAAiB,0GACjBC,oBAAqB,oGACrBC,+BAAgC,kEAChCC,+BAAgC,qEAChCC,oBAAqB,+DACrBC,uBAAwB,uEACxBC,kCAAmC,kHACnCC,oBAAqB,yGACrBC,yBAA0B,8BAC1BC,0CAA2C,oIAC3CC,4CAA6C,sIAC7CC,6CAA8C,uIAC9CC,cAAe,oDACfC,kBAAmB,gDACnBC,eAAgB,2HAChBC,gBAAiB,wDACjBC,aAAc,0CACdC,oBAAqB,oCACrBC,2BAA4B,+BAC5BC,eAAgB,sFAChBC,oBAAqB,yDACrBC,mBAAoB,wDACpBC,WAAY,yBACZC,gBAAiB,oJACjBC,kBAAmB,6CACnBC,kBAAmB,kDACnBC,yCAA0C,mIAC1CC,2CAA4C,qIAC5CC,4CAA6C,sIAC7CC,8BAA+B,mCAC/BC,iCAAkC,2FAClCC,yBAA0B,qCAC1BC,uBAAwB,0DACxBC,kBAAmB,2BACnBC,2BAA4B,8DAC5BC,6BAA8B,mEAC9BC,oBAAqB,kEACrBC,2BAA4B,0DAC5BC,uBAAwB,0JACxBC,uBAAwB,iCACxBC,gBAAiB,yDACjBC,gBAAiB,yBACjBC,mCAAoC,mFACpCC,gBAAiB,kDACjBC,2BAA4B,sDAC5BC,yBAA0B,8EAC1BC,kBAAmB,4DACnBC,wBAAyB,gDACzBC,8BAA+B,oDAC/BC,6BAA8B,mEAC9BC,iBAAkB,wHAClBC,oBAAqB,wBACrBC,mBAAoB,mCACpBC,mBAAoB,gCACpBC,qBAAsB,yBACtBC,iBAAkB,6CAClBC,uBAAwB,wDACxBC,iBAAkB,wDAClBC,0BAA2B,sDAC1B7J,EAAWE,aACR4J,EAAgCzJ,EAAmB,CACvD0J,wBAAyB,4DACzBC,oBAAqB,uEACpBhK,EAAWG,uBAEd,SAASE,EAAmB4J,EAAUjN,GACpC,IAAMkN,EAAY,GAQlB,OAPAziB,OAAO0iB,KAAKF,GAAUG,SAAQ,SAAAC,GAC5BH,EAAUG,GAAc5iB,OAAOwY,OAAO,CACpCjD,OACAqN,aACAve,SAAUme,EAASI,QAGhB5iB,OAAOwY,OAAOiK,G,IAEjBI,E,oIACJ,SAAuBC,GAGrB,OADIA,IAAQhU,KAAKmI,MAAMhB,MAAanH,KAAKmI,MAAM8L,SAAkBD,IAAQhU,KAAKmI,MAAM+L,aAAoBlU,KAAKmI,MAAMgM,gBAAyBH,IAAQhU,KAAKmI,MAAMf,IAAWpH,KAAKmI,MAAMiM,OAAgBJ,IAAQhU,KAAKmI,MAAMkM,WAAkBrU,KAAKmI,MAAMmM,cArXzP,SAAqBtL,EAAOuL,GAC1B,IAEIC,EAFAzN,EAAO,EACP0N,EAAY,EAIhB,IAFApO,EAAWqO,UAAY,GAEfF,EAAQnO,EAAWsO,KAAK3L,KAAWwL,EAAMI,MAAQL,GACvDxN,IACA0N,EAAYpO,EAAWqO,UAGzB,OAAO,IAAI5N,EAASC,EAAMwN,EAASE,GA0W6OI,CAAY7U,KAAKgJ,MAAOgL,K,mBAIxS,SAAMA,EAAN,GAIc,QAHZvN,EAGY,EAHZA,KACAqN,EAEY,EAFZA,WACAve,EACY,EADZA,SACY,mBAARF,EAAQ,iCAARA,EAAQ,kBACZ,OAAO2K,KAAK8U,cAAL,MAAA9U,KAAA,CAAmBgU,EAAK,CAC7BvN,OACAqN,cACCve,GAHI,OAGSF,M,4BAGlB,SAAe2e,EAAf,GAGc,QAFZvN,EAEY,EAFZA,KACAlR,EACY,EADZA,SACY,mBAARF,EAAQ,iCAARA,EAAQ,kBACZ,IAAM6S,EAAMlI,KAAK+U,uBAAuBf,GAClCgB,EAAUzf,EAASmB,QAAQ,WAAW,SAACue,EAAG3a,GAAJ,OAAUjF,EAAOiF,MAA7C,YAAwD4N,EAAInB,KAA5D,YAAoEmB,EAAIjB,OAAxE,KAEhB,GAAIjH,KAAKQ,QAAQ0U,cAGf,IAFA,IAAMC,EAASnV,KAAKmI,MAAMgN,OAEjB7a,EAAI6a,EAAOpc,OAAS,EAAGuB,GAAK,EAAGA,IAAK,CAC3C,IAAM8a,EAAQD,EAAO7a,GAErB,GAAI8a,EAAMpB,MAAQA,EAChB,OAAO9iB,OAAOc,OAAOojB,EAAO,CAC1BJ,YAEG,GAAII,EAAMpB,IAAMA,EACrB,MAKN,OAAOhU,KAAKqV,OAAO,CACjB5O,OACAyB,MACA8L,OACCgB,K,2BAGL,SAAchB,EAAKsB,EAAMC,GAA0B,2BAARlgB,EAAQ,iCAARA,EAAQ,kBACjD,IAAM6S,EAAMlI,KAAK+U,uBAAuBf,GAClCgB,EAAUO,EAAc7e,QAAQ,WAAW,SAACue,EAAG3a,GAAJ,OAAUjF,EAAOiF,MAAlD,YAA6D4N,EAAInB,KAAjE,YAAyEmB,EAAIjB,OAA7E,KAChB,OAAOjH,KAAKqV,OAAOnkB,OAAOc,OAAO,CAC/BkW,MACA8L,OACCsB,GAAON,K,oBAGZ,SAAOQ,EAAcR,GACnB,IAAMS,EAAM,IAAI9L,YAAYqL,GAG5B,GAFA9jB,OAAOc,OAAOyjB,EAAKD,GAEfxV,KAAKQ,QAAQ0U,cAEf,OADKlV,KAAK0V,aAAa1V,KAAKmI,MAAMgN,OAAOngB,KAAKygB,GACvCA,EAEP,MAAMA,M,GAjEczN,GA+ZpB2N,EACJ,WAAYlV,EAAOmV,GAAe,UAChC5V,KAAKS,WAAQ,EACbT,KAAK4V,mBAAgB,EACrB5V,KAAKS,MAAQA,EACbT,KAAK4V,gBAAkBA,GAIrBpgB,EAAQ,CACZqgB,MAAO,IAAIF,EAAW,KACtBpgB,SAAU,IAAIogB,EAAW,KAAK,IAGhChV,EAAQgB,OAAOtB,cAAgB,SAAAyV,GAC7BA,EAAQ9c,OAGV2H,EAAQa,OAAOnB,cAAgBM,EAAQe,WAAWrB,cAAgBM,EAAQ8B,aAAapC,cAAgB,SAAAyV,GACrGA,EAAQ9gB,KAAKQ,EAAMqgB,QAGrBlV,EAAQ6B,UAAUnC,cAAgB,SAAAyV,GAC5BA,EAAQA,EAAQ/c,OAAS,KAAOvD,EAAMD,SACxCugB,EAAQ9c,MAER8c,EAAQ9gB,KAAKQ,EAAMD,WAIvB,IAAIwgB,EAA+B,wrIAC/BC,EAA0B,ujFACxBC,EAA0B,IAAI3P,OAAO,IAAMyP,EAA+B,KAC1EG,EAAqB,IAAI5P,OAAO,IAAMyP,EAA+BC,EAA0B,KACrGD,EAA+BC,EAA0B,KACzwDC,EAAwB,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,MAAO,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,MAAO,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,KAAM,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,GAAI,KAAM,EAAG,IAAK,EAAG,EAAG,EAAG,KAAM,EAAG,OAAQ,KAE55B,SAASC,EAAc5P,EAAMnJ,GAG3B,IAFA,IAAI0W,EAAM,MAED1Z,EAAI,EAAGvB,EAASuE,EAAIvE,OAAQuB,EAAIvB,EAAQuB,GAAK,EAAG,CAEvD,IADA0Z,GAAO1W,EAAIhD,IACDmM,EAAM,OAAO,EAEvB,IADAuN,GAAO1W,EAAIhD,EAAI,KACJmM,EAAM,OAAO,EAG1B,OAAO,EAGT,SAAS6P,EAAkB7P,GACzB,OAAIA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,KACRA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,MAERA,GAAQ,MACHA,GAAQ,KAAQwP,EAAwBM,KAAKrZ,OAAOsZ,aAAa/P,IAGnE4P,EAAc5P,EAAM0P,KAE7B,SAASM,EAAiBhQ,GACxB,OAAIA,EAAO,GAAoB,KAATA,EAClBA,EAAO,MACPA,EAAO,MACPA,GAAQ,KACRA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,MAERA,GAAQ,MACHA,GAAQ,KAAQyP,EAAmBK,KAAKrZ,OAAOsZ,aAAa/P,IAG9D4P,EAAc5P,EAAM0P,IAA+BE,EAAc5P,EAAM2P,MAGhF,IAAMM,EAEI,CAAC,aAAc,YAAa,MAAO,UAAW,UAAW,YAAa,SAAU,SAAU,SAF9FA,EAGQ,CAAC,OAAQ,aAEjBC,EAAW,IAAI9e,IAJV,CAAC,QAAS,OAAQ,QAAS,WAAY,WAAY,UAAW,KAAM,OAAQ,UAAW,MAAO,WAAY,KAAM,SAAU,SAAU,QAAS,MAAO,MAAO,QAAS,QAAS,OAAQ,MAAO,OAAQ,QAAS,QAAS,UAAW,SAAU,SAAU,OAAQ,OAAQ,QAAS,KAAM,aAAc,SAAU,OAAQ,WAKzT+e,GAAyB,IAAI/e,IAAI6e,GACjCG,GAA6B,IAAIhf,IAAI6e,GAC3C,SAASI,GAAeC,EAAMC,GAC5B,OAAOA,GAAqB,UAATD,GAA6B,SAATA,EAEzC,SAASE,GAAqBF,EAAMC,GAClC,OAAOF,GAAeC,EAAMC,IAAaJ,GAAuBvZ,IAAI0Z,GAEtE,SAASG,GAA6BH,GACpC,OAAOF,GAA2BxZ,IAAI0Z,GAExC,SAASI,GAAyBJ,EAAMC,GACtC,OAAOC,GAAqBF,EAAMC,IAAaE,GAA6BH,GAE9E,SAASK,GAAUL,GACjB,OAAOJ,EAAStZ,IAAI0Z,GAMtB,IAAMM,GAAsB,IAAIxf,IAAI,CAAC,QAAS,OAAQ,QAAS,WAAY,WAAY,UAAW,KAAM,OAAQ,UAAW,MAAO,WAAY,KAAM,SAAU,SAAU,QAAS,MAAO,MAAO,QAAS,QAAS,OAAQ,MAAO,OAAQ,QAAS,QAAS,UAAW,SAAU,SAAU,OAAQ,OAAQ,QAAS,KAAM,aAAc,SAAU,OAAQ,SAAU,aAAc,YAAa,MAAO,UAAW,UAAW,YAAa,SAAU,SAAU,QAAS,OAAQ,YAAa,OAAQ,UAKje,IAOMyf,GAAc,GAEdC,GAAkB,IAClBC,GAAYC,IAOZC,GAAmB,IACnBC,GAAqB,IACrBC,GAA2B,IAC3BC,GAA4B,KAC5BC,GAA6B,KAQ7BC,GAAkB,KAClBC,GAAY,GAeZC,GACJ,WAAYC,GAAO,UACjBlY,KAAKmY,IAAM,IAAItgB,IACfmI,KAAKoY,QAAU,IAAIvgB,IACnBmI,KAAKqY,UAAY,IAAIxgB,IACrBmI,KAAKkY,MAAQA,GAIXI,G,WACJ,WAAYC,EAAOvB,GAAU,UAC3BhX,KAAKwY,WAAa,GAClBxY,KAAKyY,iBAAmB,IAAIrkB,IAC5B4L,KAAK0Y,sBAAwB,IAAItkB,IACjC4L,KAAKuY,MAAQA,EACbvY,KAAKgX,SAAWA,E,kCAGlB,WACE,OA9DmB,EA8DXhX,KAAK2Y,wBAA2C,I,sBAG1D,WACE,OA/DgB,GA+DR3Y,KAAK4Y,yBAAyC,I,4BAGxD,WACE,OAlEuB,GAkEf5Y,KAAK4Y,yBAAgD,I,mBAG/D,WACE,OAAQ5Y,KAAK4Y,wBAA0BtB,IAAe,I,2CAGxD,WACE,IAAMY,EAAQlY,KAAK4Y,wBACnB,OAAQV,EAAQZ,IAAe,GAAkC,KA/E9C,EA+EkBY,K,yBAGvC,WACE,IAAK,IAAI5d,EAAI0F,KAAKwY,WAAWzf,OAAS,GAAIuB,IAAK,CAC7C,IACE4d,EACElY,KAAKwY,WAAWle,GADlB4d,MAGF,GAlFqB,IAkFjBA,EACF,OAAO,EAGT,GAAY,IAARA,EACF,OAAO,K,8BAKb,WACE,OAnGmB,EAmGXlY,KAAK4Y,yBAA4C,I,+BAG3D,WACE,OAAO5Y,KAAK6Y,2BAA2B7Y,KAAK8Y,kB,yBAG9C,SAAYZ,GACV,OAAO,IAAID,GAAMC,K,mBAGnB,SAAMA,GACJlY,KAAKwY,WAAWxjB,KAAKgL,KAAK+Y,YAAYb,M,kBAGxC,WACElY,KAAKwY,WAAWxf,Q,wCAGlB,SAA2BrG,GACzB,SAvHmB,EAuHTA,EAAMulB,QAA2BlY,KAAKgX,UAxH9B,EAwH0CrkB,EAAMulB,S,yBAGpE,SAAYhd,EAAM8d,EAAahF,GAC7B,IAAIrhB,EAAQqN,KAAK8Y,eAEjB,GAjHuB,EAiHnBE,GAhHoB,GAgHgBA,EACtChZ,KAAKiZ,0BAA0BtmB,EAAOuI,EAAM8d,EAAahF,GAjHnC,GAmHlBgF,EACFrmB,EAAM0lB,UAAUpgB,IAAIiD,GAEpBvI,EAAMylB,QAAQngB,IAAIiD,GAvHC,EA0HjB8d,GACFhZ,KAAKkZ,mBAAmBvmB,EAAOuI,QAE5B,GA9HY,EA8HR8d,EACT,IAAK,IAAI1e,EAAI0F,KAAKwY,WAAWzf,OAAS,EAAGuB,GAAK,IAC5C3H,EAAQqN,KAAKwY,WAAWle,GACxB0F,KAAKiZ,0BAA0BtmB,EAAOuI,EAAM8d,EAAahF,GACzDrhB,EAAMwlB,IAAIlgB,IAAIiD,GACd8E,KAAKkZ,mBAAmBvmB,EAAOuI,KAC3BvI,EAAMulB,MAAQV,OAL+Bld,GASjD0F,KAAKgX,UApJS,EAoJGrkB,EAAMulB,OACzBlY,KAAKyY,iBAAiBU,OAAOje,K,gCAIjC,SAAmBvI,EAAOuI,GACpB8E,KAAKgX,UA1JS,EA0JGrkB,EAAMulB,OACzBlY,KAAKyY,iBAAiBU,OAAOje,K,uCAIjC,SAA0BvI,EAAOuI,EAAM8d,EAAahF,GAC9ChU,KAAKoZ,oBAAoBzmB,EAAOuI,EAAM8d,IACxChZ,KAAKuY,MAAMvE,EAAKnK,EAAcsJ,iBAAkBjY,K,iCAIpD,SAAoBvI,EAAOuI,EAAM8d,GAC/B,SA5JoB,EA4JdA,KAzJiB,EA2JnBA,EACKrmB,EAAMylB,QAAQ/a,IAAInC,IAASvI,EAAM0lB,UAAUhb,IAAInC,IAASvI,EAAMwlB,IAAI9a,IAAInC,GA3JvD,GA8JpB8d,EACKrmB,EAAMylB,QAAQ/a,IAAInC,KAAU8E,KAAK6Y,2BAA2BlmB,IAAUA,EAAMwlB,IAAI9a,IAAInC,GAGtFvI,EAAMylB,QAAQ/a,IAAInC,MA7KF,EA6KavI,EAAMulB,OAA8BvlB,EAAMylB,QAAQiB,SAASC,OAAOjoB,QAAU6J,KAAU8E,KAAK6Y,2BAA2BlmB,IAAUA,EAAM0lB,UAAUhb,IAAInC,M,8BAG1L,SAAiBuB,GACf,IACEvB,EACEuB,EADFvB,KAEIqe,EAAgBvZ,KAAKwY,WAAW,GAEjCe,EAAcnB,QAAQ/a,IAAInC,IAAUqe,EAAcpB,IAAI9a,IAAInC,IAAUqe,EAAclB,UAAUhb,IAAInC,IACnG8E,KAAKyY,iBAAiBnb,IAAIpC,EAAMuB,EAAG0K,S,0BAIvC,WACE,OAAOnH,KAAKwY,WAAWxY,KAAKwY,WAAWzf,OAAS,K,kCAGlD,WACE,IAAK,IAAIuB,EAAI0F,KAAKwY,WAAWzf,OAAS,GAAIuB,IAAK,CAC7C,IACE4d,EACElY,KAAKwY,WAAWle,GADlB4d,MAGF,GAAIA,EAAQV,GACV,OAAOU,K,mCAKb,WACE,IAAK,IAAI5d,EAAI0F,KAAKwY,WAAWzf,OAAS,GAAIuB,IAAK,CAC7C,IACE4d,EACElY,KAAKwY,WAAWle,GADlB4d,MAGF,GAAY,IAARA,KAlNU,EAkN6BA,GACzC,OAAOA,O,KAOTsB,G,8BACJ,aAAqB,2CAANtf,EAAM,yBAANA,EAAM,uBACnB,+BAASA,KACJuf,iBAAmB,IAAI5hB,IAFT,E,UADCogB,IAQlByB,G,yHACJ,SAAYxB,GACV,OAAO,IAAIsB,GAAUtB,K,yBAGvB,SAAYhd,EAAM8d,EAAahF,GAC7B,IAAMrhB,EAAQqN,KAAK8Y,eAEnB,GAAIE,EAAclB,GAIhB,OAHA9X,KAAKiZ,0BAA0BtmB,EAAOuI,EAAM8d,EAAahF,GACzDhU,KAAKkZ,mBAAmBvmB,EAAOuI,QAC/BvI,EAAM8mB,iBAAiBxhB,IAAIiD,GAI7B,gDAAqBL,a,iCAGvB,SAAoBlI,EAAOuI,EAAM8d,GAC/B,gEAAiCne,eAE7Bme,EAAclB,OACRnlB,EAAM8mB,iBAAiBpc,IAAInC,KAAUvI,EAAMylB,QAAQ/a,IAAInC,IAASvI,EAAM0lB,UAAUhb,IAAInC,O,8BAMhG,SAAiBuB,GACVuD,KAAKwY,WAAW,GAAGiB,iBAAiBpc,IAAIZ,EAAGvB,OAC9C,oDAAuBuB,O,GA9BE6b,IAoCzBqB,G,WACJ,aAAc,UACZ3Z,KAAK4Z,YAAS,EACd5Z,KAAK6Z,aAAU,EACf7Z,KAAKiU,cAAW,EAChBjU,KAAKoU,YAAS,EACdpU,KAAKmV,OAAS,GACdnV,KAAK8Z,kBAAoB,EACzB9Z,KAAK+Z,UAAY,GACjB/Z,KAAKga,0BAA4B,GACjCha,KAAKia,wBAAyB,EAC9Bja,KAAKka,QAAS,EACdla,KAAKma,oBAAqB,EAC1Bna,KAAKoa,gBAAiB,EACtBpa,KAAKqa,gBAAiB,EACtBra,KAAKsa,kBAAmB,EACxBta,KAAKua,iBAAkB,EACvBva,KAAKwa,aAAe,CAClBC,yBAA0B,EAC1BC,cAAe,MAEjB1a,KAAK2a,WAAY,EACjB3a,KAAK4a,4BAA6B,EAClC5a,KAAK6a,OAAS,GACd7a,KAAK8a,eAAiB,CAAC,IACvB9a,KAAKwH,SAAW,GAChBxH,KAAKoI,aAAe,GACpBpI,KAAKgU,IAAM,EACXhU,KAAKyU,UAAY,EACjBzU,KAAKkJ,KAAOvI,EAAQO,IACpBlB,KAAK3O,MAAQ,KACb2O,KAAKmH,MAAQ,EACbnH,KAAKoH,IAAM,EACXpH,KAAKsU,cAAgB,KACrBtU,KAAKmU,gBAAkB,KACvBnU,KAAKkU,aAAe,EACpBlU,KAAKqU,WAAa,EAClBrU,KAAK8V,QAAU,CAACtgB,EAAMqgB,OACtB7V,KAAK+a,aAAc,EACnB/a,KAAKgb,aAAc,EACnBhb,KAAKib,aAAe,IAAI7mB,IACxB4L,KAAKkb,aAAe,E,8BAGtB,SAAK1a,GACHR,KAAK4Z,QAAgC,IAAvBpZ,EAAQ2a,cAAsD,IAAvB3a,EAAQ2a,YAAoD,WAAvB3a,EAAQ4a,YAClGpb,KAAK6Z,QAAUrZ,EAAQ6a,UACvBrb,KAAKiU,SAAWjU,KAAKoU,OAASpU,KAAKsb,gB,yBAGrC,WACE,OAAO,IAAIxU,EAAS9G,KAAK6Z,QAAS7Z,KAAKgU,IAAMhU,KAAKyU,a,mBAGpD,SAAM8G,GAIJ,IAHA,IAAMpT,EAAQ,IAAIwR,EACZ/F,EAAO1iB,OAAO0iB,KAAK5T,MAEhB1F,EAAI,EAAGvB,EAAS6a,EAAK7a,OAAQuB,EAAIvB,EAAQuB,IAAK,CACrD,IAAMN,EAAM4Z,EAAKtZ,GACbkhB,EAAMxb,KAAKhG,IAEVuhB,GAAcE,MAAMC,QAAQF,KAC/BA,EAAMA,EAAIhhB,SAGZ2N,EAAMnO,GAAOwhB,EAGf,OAAOrT,M,KAKPwT,GAAW,SAAiBlV,GAC9B,OAAOA,GAAQ,IAAMA,GAAQ,IAEzBmV,GAAoB,IAAI/jB,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAC3DgkB,GAAoC,CACxCC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KACzCC,IAAK,CAAC,GAAI,GAAI,GAAI,MAEdC,GAAkC,CACxCA,IAAsC,CAAC,GAAI,KAC3CA,GAAgCC,IAAhC,YAA0CD,GAAgCE,KAA1E,CAA+E,GAAI,GAAI,GAAI,GAAI,GAAI,KACnGF,GAAgCG,IAAhC,YAA0CH,GAAgCC,KAA1E,CAA+E,GAAI,KACnFD,GAAgCD,IAAhC,YAA0CC,GAAgCG,KAA1E,CAA+E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,M,IACvHC,GACJ,WAAYjU,GAAO,UACjBnI,KAAKkJ,KAAOf,EAAMe,KAClBlJ,KAAK3O,MAAQ8W,EAAM9W,MACnB2O,KAAKmH,MAAQgB,EAAMhB,MACnBnH,KAAKoH,IAAMe,EAAMf,IACjBpH,KAAKkI,IAAM,IAAIhB,EAAeiB,EAAM8L,SAAU9L,EAAMiM,SAIlDiI,G,8BACJ,WAAY7b,EAASwI,GAAO,wBAC1B,gBACK0M,iBAAc,EACnB,EAAK4G,OAAS,GACd,EAAKnU,MAAQ,IAAIwR,GACjB,EAAKxR,MAAMoU,KAAK/b,GAChB,EAAKwI,MAAQA,EACb,EAAKjQ,OAASiQ,EAAMjQ,OACpB,EAAK2c,aAAc,EARO,E,mCAW5B,SAAUjV,GACRT,KAAKsc,OAAOvjB,OAASiH,KAAKmI,MAAM+S,aAChClb,KAAKsc,OAAOtnB,KAAKyL,KACfT,KAAKmI,MAAM+S,e,kBAGf,WACElb,KAAKwc,sBAEDxc,KAAKQ,QAAQ8b,QACftc,KAAKyc,UAAU,IAAIL,GAAMpc,KAAKmI,QAGhCnI,KAAKmI,MAAMkM,WAAarU,KAAKmI,MAAMf,IACnCpH,KAAKmI,MAAM+L,aAAelU,KAAKmI,MAAMhB,MACrCnH,KAAKmI,MAAMmM,cAAgBtU,KAAKmI,MAAMiM,OACtCpU,KAAKmI,MAAMgM,gBAAkBnU,KAAKmI,MAAM8L,SACxCjU,KAAK0c,c,iBAGP,SAAIxT,GACF,QAAIlJ,KAAKwU,MAAMtL,KACblJ,KAAKsZ,QACE,K,mBAMX,SAAMpQ,GACJ,OAAOlJ,KAAKmI,MAAMe,OAASA,I,kCAG7B,SAAqBf,GACnB,MAAO,CACL6L,IAAK7L,EAAM6L,IACX3iB,MAAO,KACP6X,KAAMf,EAAMe,KACZ/B,MAAOgB,EAAMhB,MACbC,IAAKe,EAAMf,IACXiN,WAAYlM,EAAMf,IAClB0O,QAAS,CAAC9V,KAAK2c,cACfzC,OAAQ/R,EAAM+R,U,uBAIlB,WACE,IAAM0C,EAAM5c,KAAKmI,MACjBnI,KAAKmI,MAAQnI,KAAK6c,qBAAqBD,GACvC5c,KAAK0V,aAAc,EACnB1V,KAAK0c,YACL1c,KAAK0V,aAAc,EACnB,IAAMoH,EAAO9c,KAAKmI,MAElB,OADAnI,KAAKmI,MAAQyU,EACNE,I,4BAGT,WACE,OAAO9c,KAAK+c,oBAAoB/c,KAAKmI,MAAM6L,O,iCAG7C,SAAoBA,GAElB,OADAtN,EAAegO,UAAYV,EACpBtN,EAAe6P,KAAKvW,KAAKgJ,OAAStC,EAAegO,UAAYV,I,+BAGtE,WACE,OAAOhU,KAAKgJ,MAAMC,WAAWjJ,KAAKgd,oB,4BAGpC,SAAehJ,GACb,IAAIiJ,EAAKjd,KAAKgJ,MAAMC,WAAW+K,GAE/B,GAAsB,SAAZ,MAALiJ,MAA6BjJ,EAAMhU,KAAKgJ,MAAMjQ,OAAQ,CACzD,IAAMmkB,EAAQld,KAAKgJ,MAAMC,WAAW+K,GAEX,SAAZ,MAARkJ,KACHD,EAAK,QAAiB,KAALA,IAAe,KAAe,KAARC,IAI3C,OAAOD,I,uBAGT,SAAUrD,GAAQ,WAChB5Z,KAAKmI,MAAMyR,OAASA,EAEhBA,IACF5Z,KAAKmI,MAAM8S,aAAapH,SAAQ,SAACmB,EAAShB,GAAV,OAAkB,EAAKuE,MAAMvE,EAAKgB,MAClEhV,KAAKmI,MAAM8S,aAAakC,W,wBAI5B,WACE,OAAOnd,KAAKmI,MAAM2N,QAAQ9V,KAAKmI,MAAM2N,QAAQ/c,OAAS,K,uBAGxD,WACE,IAAM4jB,EAAa3c,KAAK2c,aACnBA,EAAW/G,eAAe5V,KAAKod,YACpCpd,KAAKmI,MAAMhB,MAAQnH,KAAKmI,MAAM6L,IACzBhU,KAAK0V,cAAa1V,KAAKmI,MAAM8L,SAAWjU,KAAKmI,MAAMmT,eAEpDtb,KAAKmI,MAAM6L,KAAOhU,KAAKjH,OACzBiH,KAAKqd,YAAY1c,EAAQO,KAIvByb,IAAennB,EAAMD,SACvByK,KAAKsd,gBAELtd,KAAKud,iBAAiBvd,KAAKwd,eAAexd,KAAKmI,MAAM6L,Q,8BAIzD,WACE,IAAIC,EACCjU,KAAK0V,cAAazB,EAAWjU,KAAKmI,MAAMmT,eAC7C,IAAMnU,EAAQnH,KAAKmI,MAAM6L,IACnB5M,EAAMpH,KAAKgJ,MAAMyU,QAAQ,KAAMtW,EAAQ,GAC7C,IAAa,IAATC,EAAY,MAAMpH,KAAKuY,MAAMpR,EAAO0C,EAAckJ,qBAItD,IAHA/S,KAAKmI,MAAM6L,IAAM5M,EAAM,EACvBf,EAAWqO,UAAYvN,EAAQ,EAExBd,EAAWkQ,KAAKvW,KAAKgJ,QAAU3C,EAAWqO,WAAatN,KAC1DpH,KAAKmI,MAAM0R,QACb7Z,KAAKmI,MAAMsM,UAAYpO,EAAWqO,UAGpC,IAAI1U,KAAK0V,YAAT,CACA,IAAMzN,EAAU,CACdiB,KAAM,eACN7X,MAAO2O,KAAKgJ,MAAMxO,MAAM2M,EAAQ,EAAGC,GACnCD,QACAC,IAAKA,EAAM,EACXc,IAAK,IAAIhB,EAAe+M,EAAUjU,KAAKmI,MAAMmT,gBAG/C,OADItb,KAAKQ,QAAQ8b,QAAQtc,KAAKyc,UAAUxU,GACjCA,K,6BAGT,SAAgByV,GACd,IACIzJ,EADE9M,EAAQnH,KAAKmI,MAAM6L,IAEpBhU,KAAK0V,cAAazB,EAAWjU,KAAKmI,MAAMmT,eAC7C,IAAIqC,EAAK3d,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,KAAO0J,GAEjD,GAAI1d,KAAKmI,MAAM6L,IAAMhU,KAAKjH,OACxB,MAAQyN,EAAUmX,MAAS3d,KAAKmI,MAAM6L,IAAMhU,KAAKjH,QAC/C4kB,EAAK3d,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,KAI1C,IAAIhU,KAAK0V,YAAT,CACA,IAAMtO,EAAMpH,KAAKmI,MAAM6L,IAEjB/L,EAAU,CACdiB,KAAM,cACN7X,MAHY2O,KAAKgJ,MAAMxO,MAAM2M,EAAQuW,EAAWtW,GAIhDD,QACAC,MACAc,IAAK,IAAIhB,EAAe+M,EAAUjU,KAAKmI,MAAMmT,gBAG/C,OADItb,KAAKQ,QAAQ8b,QAAQtc,KAAKyc,UAAUxU,GACjCA,K,uBAGT,WACE,IAAM2V,EAAa5d,KAAKmI,MAAM6L,IACxBxM,EAAW,GAEjBqW,EAAM,KAAO7d,KAAKmI,MAAM6L,IAAMhU,KAAKjH,QAAQ,CACzC,IAAM4kB,EAAK3d,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,KAE5C,OAAQ2J,GACN,KAAK,GACL,KAAK,IACL,KAAK,IACD3d,KAAKmI,MAAM6L,IACb,MAEF,KAAK,GAC+C,KAA9ChU,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,MACvChU,KAAKmI,MAAM6L,IAGjB,KAAK,GACL,KAAK,KACL,KAAK,OACDhU,KAAKmI,MAAM6L,MACXhU,KAAKmI,MAAM0R,QACb7Z,KAAKmI,MAAMsM,UAAYzU,KAAKmI,MAAM6L,IAClC,MAEF,KAAK,GACH,OAAQhU,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,IAC7C,KAAK,GAED,IAAM/L,EAAUjI,KAAK8d,wBAEL5rB,IAAZ+V,IACFjI,KAAK+d,WAAW9V,GACZjI,KAAKQ,QAAQwd,eAAexW,EAASxS,KAAKiT,IAGhD,MAGJ,KAAK,GAED,IAAMA,EAAUjI,KAAKie,gBAAgB,QAErB/rB,IAAZ+V,IACFjI,KAAK+d,WAAW9V,GACZjI,KAAKQ,QAAQwd,eAAexW,EAASxS,KAAKiT,IAGhD,MAGJ,QACE,MAAM4V,EAGV,MAEF,QACE,GAAIhX,EAAa8W,KACb3d,KAAKmI,MAAM6L,SACR,GAAW,KAAP2J,GAAc3d,KAAKgX,SAavB,IAAW,KAAP2G,GAAc3d,KAAKgX,SAc5B,MAAM6G,EAbN,IAAM7J,EAAMhU,KAAKmI,MAAM6L,IAEvB,GAAuC,KAAnChU,KAAKgJ,MAAMC,WAAW+K,EAAM,IAAgD,KAAnChU,KAAKgJ,MAAMC,WAAW+K,EAAM,IAAgD,KAAnChU,KAAKgJ,MAAMC,WAAW+K,EAAM,GAQhH,MAAM6J,EAPN,IAAM5V,EAAUjI,KAAKie,gBAAgB,QAErB/rB,IAAZ+V,IACFjI,KAAK+d,WAAW9V,GACZjI,KAAKQ,QAAQwd,eAAexW,EAASxS,KAAKiT,QArBZ,CACtC,IAAM+L,EAAMhU,KAAKmI,MAAM6L,IAEvB,GAAuC,KAAnChU,KAAKgJ,MAAMC,WAAW+K,EAAM,IAAgD,KAAnChU,KAAKgJ,MAAMC,WAAW+K,EAAM,MAA6B,IAAf4J,GAAoB5d,KAAKmI,MAAMsM,UAAYmJ,GAQhI,MAAMC,EAPN,IAAM5V,EAAUjI,KAAKie,gBAAgB,QAErB/rB,IAAZ+V,IACFjI,KAAK+d,WAAW9V,GACZjI,KAAKQ,QAAQwd,eAAexW,EAASxS,KAAKiT,MAyB1D,GAAIT,EAASzO,OAAS,EAAG,CACvB,IACMmlB,EAAoB,CACxB/W,MAAOyW,EACPxW,IAHUpH,KAAKmI,MAAM6L,IAIrBxM,WACAe,YAAa,KACbG,aAAc,KACdC,eAAgB,MAElB3I,KAAKmI,MAAMC,aAAapT,KAAKkpB,M,yBAIjC,SAAYhV,EAAMsS,GAChBxb,KAAKmI,MAAMf,IAAMpH,KAAKmI,MAAM6L,IAC5B,IAAMmK,EAAWne,KAAKmI,MAAMe,KAC5BlJ,KAAKmI,MAAMe,KAAOA,EAClBlJ,KAAKmI,MAAM9W,MAAQmqB,EAEdxb,KAAK0V,cACR1V,KAAKmI,MAAMiM,OAASpU,KAAKmI,MAAMmT,cAC/Btb,KAAKK,cAAc8d,M,kCAIvB,WACE,GAAuB,IAAnBne,KAAKmI,MAAM6L,MAAahU,KAAKoe,wBAAjC,CAIA,IAAMC,EAAUre,KAAKmI,MAAM6L,IAAM,EAC3BsF,EAAOtZ,KAAKwd,eAAea,GAEjC,GAAI/E,GAAQ,IAAMA,GAAQ,GACxB,MAAMtZ,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAc8H,0BAGjD,GAAa,MAAT2H,GAAyB,KAATA,GAAetZ,KAAKwJ,UAAU,kBAAmB,CAGnE,GAFAxJ,KAAKse,aAAa,kBAE2C,SAAzDte,KAAKue,gBAAgB,iBAAkB,cACzC,MAAMve,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAc,MAATsF,EAAezP,EAAc0G,6CAA+C1G,EAAc2H,6CAG7HxR,KAAKmI,MAAM6L,KAAO,EAEL,MAATsF,EACFtZ,KAAKqd,YAAY1c,EAAQe,YAEzB1B,KAAKqd,YAAY1c,EAAQS,mBAElBkV,EAAkBgD,MACzBtZ,KAAKmI,MAAM6L,IACbhU,KAAKqd,YAAY1c,EAAQM,YAAajB,KAAKwe,UAAUlF,KACnC,KAATA,KACPtZ,KAAKmI,MAAM6L,IACbhU,KAAKqd,YAAY1c,EAAQM,YAAajB,KAAKwe,cAE3Cxe,KAAKye,SAAS9d,EAAQgC,KAAM,M,2BAIhC,WACE,IAAM2W,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAEhDsF,GAAQ,IAAMA,GAAQ,GACxBtZ,KAAK0e,YAAW,GAIL,KAATpF,GAA6D,KAA9CtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,IACxDhU,KAAKmI,MAAM6L,KAAO,EAClBhU,KAAKqd,YAAY1c,EAAQ4B,cAEvBvC,KAAKmI,MAAM6L,IACbhU,KAAKqd,YAAY1c,EAAQwB,Q,6BAI7B,WAGe,KAFAnC,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAGlDhU,KAAKye,SAAS9d,EAAQmC,YAAa,GAEnC9C,KAAKye,SAAS9d,EAAQqD,MAAO,K,mCAIjC,WACE,GAAuB,IAAnBhE,KAAKmI,MAAM6L,KAAahU,KAAKjH,OAAS,EAAG,OAAO,EACpD,IAAI4kB,EAAK3d,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAChD,GAAW,KAAP2J,EAAW,OAAO,EACtB,IAAMxW,EAAQnH,KAAKmI,MAAM6L,IAGzB,IAFAhU,KAAKmI,MAAM6L,KAAO,GAEVxN,EAAUmX,MAAS3d,KAAKmI,MAAM6L,IAAMhU,KAAKjH,QAC/C4kB,EAAK3d,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,KAGxC,IAAM3iB,EAAQ2O,KAAKgJ,MAAMxO,MAAM2M,EAAQ,EAAGnH,KAAKmI,MAAM6L,KAErD,OADAhU,KAAKqd,YAAY1c,EAAQiC,qBAAsBvR,IACxC,I,mCAGT,SAAsBoV,GACpB,IAAIyC,EAAgB,KAATzC,EAAc9F,EAAQoD,KAAOpD,EAAQmD,OAC5C6a,EAAQ,EACRrF,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAErC,KAATvN,GAAwB,KAAT6S,IACjBqF,IACArF,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAC9C9K,EAAOvI,EAAQsD,UAGJ,KAATqV,GAAgBtZ,KAAKmI,MAAM+R,SAC7ByE,IACAzV,EAAgB,KAATzC,EAAc9F,EAAQoC,aAAepC,EAAQ3O,QAGtDgO,KAAKye,SAASvV,EAAMyV,K,gCAGtB,SAAmBlY,GACjB,IAAM6S,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAEpD,GAAIsF,IAAS7S,EAAb,CAUA,GAAa,MAATA,EAAc,CAChB,GAAa,KAAT6S,EAEF,YADAtZ,KAAKye,SAAS9d,EAAQwC,SAAU,GAIlC,GAAInD,KAAKwJ,UAAU,mBAA8B,MAAT8P,EAAc,CACpD,GAA6D,QAAzDtZ,KAAKue,gBAAgB,iBAAkB,cACzC,MAAMve,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAcwG,2CAKjD,OAFArQ,KAAKmI,MAAM6L,KAAO,OAClBhU,KAAKqd,YAAY1c,EAAQiB,WAI3B,GAAI5B,KAAKwJ,UAAU,mBAA8B,KAAT8P,EAAa,CACnD,GAA6D,QAAzDtZ,KAAKue,gBAAgB,iBAAkB,cACzC,MAAMve,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAcyH,0CAKjD,OAFAtR,KAAKmI,MAAM6L,KAAO,OAClBhU,KAAKqd,YAAY1c,EAAQY,cAKhB,KAAT+X,EAKJtZ,KAAKye,SAAkB,MAAThY,EAAe9F,EAAQ4C,UAAY5C,EAAQ8C,WAAY,GAJnEzD,KAAKye,SAAS9d,EAAQ3O,OAAQ,QArCoB,KAA9CgO,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GACzChU,KAAKye,SAAS9d,EAAQ3O,OAAQ,GAE9BgO,KAAKye,SAAkB,MAAThY,EAAe9F,EAAQ0C,UAAY1C,EAAQ2C,WAAY,K,6BAyC3E,WAGe,KAFAtD,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAGlDhU,KAAKye,SAAS9d,EAAQ3O,OAAQ,GAE9BgO,KAAKye,SAAS9d,EAAQ6C,WAAY,K,gCAItC,SAAmBiD,GACjB,IAAM6S,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAEhDsF,IAAS7S,EAKA,KAAT6S,EACFtZ,KAAKye,SAAS9d,EAAQ3O,OAAQ,GAE9BgO,KAAKye,SAAS9d,EAAQkD,QAAS,GAP/B7D,KAAKye,SAAS9d,EAAQqC,OAAQ,K,6BAWlC,SAAgByD,GACd,IAAM6S,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAChD5b,EAAO,EAEX,GAAIkhB,IAAS7S,EAGX,OAFArO,EAAgB,KAATqO,GAA6D,KAA9CzG,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAAY,EAAI,EAExB,KAAjDhU,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM5b,QACzC4H,KAAKye,SAAS9d,EAAQ3O,OAAQoG,EAAO,QAIvC4H,KAAKye,SAAS9d,EAAQiD,SAAUxL,GAIrB,KAATkhB,IACFlhB,EAAO,GAGT4H,KAAKye,SAAS9d,EAAQgD,WAAYvL,K,+BAGpC,SAAkBqO,GAChB,IAAM6S,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAEpD,GAAa,KAATsF,EAKJ,OAAa,KAAT7S,GAAwB,KAAT6S,GACjBtZ,KAAKmI,MAAM6L,KAAO,OAClBhU,KAAKqd,YAAY1c,EAAQ2B,aAI3BtC,KAAKye,SAAkB,KAAThY,EAAc9F,EAAQkC,GAAKlC,EAAQsC,KAAM,GAVrDjD,KAAKye,SAAS9d,EAAQ+C,SAAwD,KAA9C1D,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAAY,EAAI,K,gCAa3F,WACE,IAAMsF,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAC9C4K,EAAQ5e,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAExC,KAATsF,EACY,KAAVsF,EACF5e,KAAKye,SAAS9d,EAAQ3O,OAAQ,GAE9BgO,KAAKye,SAAS9d,EAAQyC,kBAAmB,GAEzB,KAATkW,GAAiBsF,GAAS,IAAMA,GAAS,MAIhD5e,KAAKmI,MAAM6L,IACbhU,KAAKqd,YAAY1c,EAAQyB,YAJzBpC,KAAKmI,MAAM6L,KAAO,EAClBhU,KAAKqd,YAAY1c,EAAQ0B,gB,8BAO7B,SAAiBoE,GACf,OAAQA,GACN,KAAK,GAEH,YADAzG,KAAK6e,gBAGP,KAAK,GAGH,QAFE7e,KAAKmI,MAAM6L,SACbhU,KAAKqd,YAAY1c,EAAQkB,QAG3B,KAAK,GAGH,QAFE7B,KAAKmI,MAAM6L,SACbhU,KAAKqd,YAAY1c,EAAQmB,QAG3B,KAAK,GAGH,QAFE9B,KAAKmI,MAAM6L,SACbhU,KAAKqd,YAAY1c,EAAQqB,MAG3B,KAAK,GAGH,QAFEhC,KAAKmI,MAAM6L,SACbhU,KAAKqd,YAAY1c,EAAQoB,OAG3B,KAAK,GACH,GAAI/B,KAAKwJ,UAAU,mBAAmE,MAA9CxJ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAAY,CACzF,GAA6D,QAAzDhU,KAAKue,gBAAgB,iBAAkB,cACzC,MAAMve,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAc0H,4CAGjDvR,KAAKmI,MAAM6L,KAAO,EAClBhU,KAAKqd,YAAY1c,EAAQU,mBAEvBrB,KAAKmI,MAAM6L,IACbhU,KAAKqd,YAAY1c,EAAQQ,UAG3B,OAEF,KAAK,GAGH,QAFEnB,KAAKmI,MAAM6L,SACbhU,KAAKqd,YAAY1c,EAAQW,UAG3B,KAAK,IACH,GAAItB,KAAKwJ,UAAU,mBAAmE,MAA9CxJ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAAY,CACzF,GAA6D,QAAzDhU,KAAKue,gBAAgB,iBAAkB,cACzC,MAAMve,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAcyG,6CAGjDtQ,KAAKmI,MAAM6L,KAAO,EAClBhU,KAAKqd,YAAY1c,EAAQc,iBAEvBzB,KAAKmI,MAAM6L,IACbhU,KAAKqd,YAAY1c,EAAQa,QAG3B,OAEF,KAAK,IAGH,QAFExB,KAAKmI,MAAM6L,SACbhU,KAAKqd,YAAY1c,EAAQgB,QAG3B,KAAK,GAQH,YAPI3B,KAAKwJ,UAAU,iBAAiE,KAA9CxJ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAC3EhU,KAAKye,SAAS9d,EAAQuB,YAAa,MAEjClC,KAAKmI,MAAM6L,IACbhU,KAAKqd,YAAY1c,EAAQsB,SAK7B,KAAK,GAEH,YADAjC,KAAK8e,qBAGP,KAAK,GAGH,QAFE9e,KAAKmI,MAAM6L,SACbhU,KAAKqd,YAAY1c,EAAQ6B,WAG3B,KAAK,GAED,IAAM8W,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAEpD,GAAa,MAATsF,GAAyB,KAATA,EAElB,YADAtZ,KAAK+e,gBAAgB,IAIvB,GAAa,MAATzF,GAAyB,KAATA,EAElB,YADAtZ,KAAK+e,gBAAgB,GAIvB,GAAa,KAATzF,GAAwB,KAATA,EAEjB,YADAtZ,KAAK+e,gBAAgB,GAK3B,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GAEH,YADA/e,KAAK0e,YAAW,GAGlB,KAAK,GACL,KAAK,GAEH,YADA1e,KAAKgf,WAAWvY,GAGlB,KAAK,GAEH,YADAzG,KAAKif,kBAGP,KAAK,GACL,KAAK,GAEH,YADAjf,KAAKkf,sBAAsBzY,GAG7B,KAAK,IACL,KAAK,GAEH,YADAzG,KAAKmf,mBAAmB1Y,GAG1B,KAAK,GAEH,YADAzG,KAAKof,kBAGP,KAAK,GACL,KAAK,GAEH,YADApf,KAAKqf,mBAAmB5Y,GAG1B,KAAK,GACL,KAAK,GAEH,YADAzG,KAAKsf,gBAAgB7Y,GAGvB,KAAK,GACL,KAAK,GAEH,YADAzG,KAAKuf,kBAAkB9Y,GAGzB,KAAK,IAEH,YADAzG,KAAKye,SAAS9d,EAAQuC,MAAO,GAG/B,KAAK,GAGH,QAFElD,KAAKmI,MAAM6L,SACbhU,KAAKqd,YAAY1c,EAAQ+B,IAG3B,KAAK,GAEH,YADA1C,KAAKwf,uBAGP,KAAK,GAEH,YADAxf,KAAKyf,WAGP,QACE,GAAInJ,EAAkB7P,GAEpB,YADAzG,KAAKyf,SAAShZ,GAMpB,MAAMzG,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAc2D,yBAA0BtQ,OAAOwiB,cAAcjZ,M,sBAGhG,SAASyC,EAAM9Q,GACb,IAAMunB,EAAM3f,KAAKgJ,MAAMxO,MAAMwF,KAAKmI,MAAM6L,IAAKhU,KAAKmI,MAAM6L,IAAM5b,GAC9D4H,KAAKmI,MAAM6L,KAAO5b,EAClB4H,KAAKqd,YAAYnU,EAAMyW,K,wBAGzB,WAOE,IANA,IACIC,EAASC,EADP1Y,EAAQnH,KAAKmI,MAAMhB,MAAQ,EAG/B6M,EACEhU,KAAKmI,MADP6L,OAGQA,EAAK,CACb,GAAIA,GAAOhU,KAAKjH,OACd,MAAMiH,KAAKuY,MAAMpR,EAAO0C,EAAcmJ,oBAGxC,IAAM2K,EAAK3d,KAAKgJ,MAAMC,WAAW+K,GAEjC,GAAIxN,EAAUmX,GACZ,MAAM3d,KAAKuY,MAAMpR,EAAO0C,EAAcmJ,oBAGxC,GAAI4M,EACFA,GAAU,MACL,CACL,GAAW,KAAPjC,EACFkC,GAAU,OACL,GAAW,KAAPlC,GAAakC,EACtBA,GAAU,OACL,GAAW,KAAPlC,IAAckC,EACvB,MAGFD,EAAiB,KAAPjC,GAId,IAAMmC,EAAU9f,KAAKgJ,MAAMxO,MAAM2M,EAAO6M,KACtCA,EAGF,IAFA,IAAI+L,EAAO,GAEJ/L,EAAMhU,KAAKjH,QAAQ,CACxB,IAAMkkB,EAAKjd,KAAKwd,eAAexJ,GACzBgM,EAAO9iB,OAAOsZ,aAAayG,GAEjC,GAAIrB,GAAkBve,IAAI4f,GACpB8C,EAAKE,SAASD,IAChBhgB,KAAKuY,MAAMvE,EAAM,EAAGnK,EAAc8B,0BAE/B,KAAI8K,EAAiBwG,IAAc,KAAPA,EAGjC,MAFAjd,KAAKuY,MAAMvE,EAAM,EAAGnK,EAAcoE,wBAKlC+F,EACF+L,GAAQC,EAGVhgB,KAAKmI,MAAM6L,IAAMA,EACjBhU,KAAKqd,YAAY1c,EAAQI,OAAQ,CAC/Bmf,QAASJ,EACT5H,MAAO6H,M,qBAIX,SAAQI,EAAOC,EAAKC,GAOlB,IAPsD,IAA1BC,IAA0B,yDAChDnZ,EAAQnH,KAAKmI,MAAM6L,IACnBuM,EAA8B,KAAVJ,EAAetE,GAAkCE,IAAMF,GAAkCC,UAC7G0E,EAA4B,KAAVL,EAAenE,GAAgCD,IAAgB,KAAVoE,EAAenE,GAAgCG,IAAgB,IAAVgE,EAAcnE,GAAgCC,IAAMD,GAAgCE,IAClNuE,GAAU,EACVC,EAAQ,EAEHpmB,EAAI,EAAGqmB,EAAW,MAAPP,EAAcQ,IAAWR,EAAK9lB,EAAIqmB,IAAKrmB,EAAG,CAC5D,IAAMmM,EAAOzG,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,KAC1CwH,OAAG,EAEP,GAAa,KAAT/U,EAAJ,CA4BA,IATE+U,EADE/U,GAAQ,GACJA,EAAO,GAAK,GACTA,GAAQ,GACXA,EAAO,GAAK,GACTkV,GAASlV,GACZA,EAAO,GAEPma,MAGGT,EACT,GAAIngB,KAAKQ,QAAQ0U,eAAiBsG,GAAO,EACvCA,EAAM,EACNxb,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAQ7M,EAAI,EAAGuP,EAAckD,aAAcoT,OAC5D,KAAIE,EAIT,MAHA7E,EAAM,EACNiF,GAAU,IAMZzgB,KAAKmI,MAAM6L,IACb0M,EAAQA,EAAQP,EAAQ3E,MAzCxB,CACE,IAAMqF,EAAO7gB,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAC9CsF,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,KAEb,IAAnCwM,EAAgB/C,QAAQnE,IAEjBiH,EAAkB9C,QAAQoD,IAAS,GAAKN,EAAkB9C,QAAQnE,IAAS,GAAKwH,OAAOC,MAAMzH,KADtGtZ,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAcoI,4BAKtCqO,GACHtgB,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAcmF,oCAGzChP,KAAKmI,MAAM6L,KA8BjB,OAAIhU,KAAKmI,MAAM6L,MAAQ7M,GAAgB,MAAPiZ,GAAepgB,KAAKmI,MAAM6L,IAAM7M,IAAUiZ,GAAOK,EACxE,KAGFC,I,6BAGT,SAAgBP,GACd,IAAMhZ,EAAQnH,KAAKmI,MAAM6L,IACrBgN,GAAW,EACfhhB,KAAKmI,MAAM6L,KAAO,EAClB,IAAMwH,EAAMxb,KAAKihB,QAAQd,GAEd,MAAP3E,GACFxb,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAQ,EAAG0C,EAAckD,aAAcoT,GAG/D,IAAM7G,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,KAE9C,GAAa,MAATsF,IACAtZ,KAAKmI,MAAM6L,IACbgN,GAAW,OACN,GAAa,MAAT1H,EACT,MAAMtZ,KAAKuY,MAAMpR,EAAO0C,EAAciD,gBAGxC,GAAIwJ,EAAkBtW,KAAKwd,eAAexd,KAAKmI,MAAM6L,MACnD,MAAMhU,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAckF,kBAGjD,GAAIiS,EAAJ,CACE,IAAMrB,EAAM3f,KAAKgJ,MAAMxO,MAAM2M,EAAOnH,KAAKmI,MAAM6L,KAAKtd,QAAQ,QAAS,IACrEsJ,KAAKqd,YAAY1c,EAAQE,OAAQ8e,QAInC3f,KAAKqd,YAAY1c,EAAQC,IAAK4a,K,wBAGhC,SAAW0F,GACT,IAAM/Z,EAAQnH,KAAKmI,MAAM6L,IACrBmN,GAAU,EACVH,GAAW,EACXI,GAAY,EACZC,GAAc,EACdC,GAAU,EAETJ,GAAsC,OAArBlhB,KAAKihB,QAAQ,KACjCjhB,KAAKuY,MAAMpR,EAAO0C,EAAcyD,eAGlC,IAAMiU,EAAiBvhB,KAAKmI,MAAM6L,IAAM7M,GAAS,GAAsC,KAAjCnH,KAAKgJ,MAAMC,WAAW9B,GAE5E,GAAIoa,EAAgB,CAClB,IAAMC,EAAUxhB,KAAKgJ,MAAMxO,MAAM2M,EAAOnH,KAAKmI,MAAM6L,KAGnD,GAFAhU,KAAKyhB,uBAAuBta,EAAO0C,EAAcoH,qBAE5CjR,KAAKmI,MAAMyR,OAAQ,CACtB,IAAM8H,EAAgBF,EAAQ/D,QAAQ,KAElCiE,EAAgB,GAClB1hB,KAAKuY,MAAMmJ,EAAgBva,EAAO0C,EAAcyJ,2BAIpDgO,EAAUC,IAAmB,OAAOhL,KAAKiL,GAG3C,IAAIlI,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,KA6C5C,GA3Ca,KAATsF,GAAgBgI,MAChBthB,KAAKmI,MAAM6L,IACbhU,KAAKihB,QAAQ,IACbE,GAAU,EACV7H,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,MAG5B,KAATsF,GAAwB,MAATA,GAAkBgI,IAGvB,MAFbhI,EAAOtZ,KAAKgJ,MAAMC,aAAajJ,KAAKmI,MAAM6L,OAEd,KAATsF,KACftZ,KAAKmI,MAAM6L,IAGU,OAArBhU,KAAKihB,QAAQ,KACfjhB,KAAKuY,MAAMpR,EAAO0C,EAAc0D,0BAGlC4T,GAAU,EACVE,GAAc,EACd/H,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,MAG7B,MAATsF,KACE6H,GAAWI,IACbvhB,KAAKuY,MAAMpR,EAAO0C,EAAc+C,wBAGhC5M,KAAKmI,MAAM6L,IACbgN,GAAW,GAGA,MAAT1H,IACFtZ,KAAKse,aAAa,UAAWte,KAAKmI,MAAM6L,MAEpCqN,GAAeE,IACjBvhB,KAAKuY,MAAMpR,EAAO0C,EAAciD,kBAGhC9M,KAAKmI,MAAM6L,IACboN,GAAY,GAGV9K,EAAkBtW,KAAKwd,eAAexd,KAAKmI,MAAM6L,MACnD,MAAMhU,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAckF,kBAGjD,IAAM4Q,EAAM3f,KAAKgJ,MAAMxO,MAAM2M,EAAOnH,KAAKmI,MAAM6L,KAAKtd,QAAQ,SAAU,IAEtE,GAAIsqB,EACFhhB,KAAKqd,YAAY1c,EAAQE,OAAQ8e,QAInC,GAAIyB,EACFphB,KAAKqd,YAAY1c,EAAQG,QAAS6e,OADpC,CAKA,IAAMnE,EAAM8F,EAAUK,SAAShC,EAAK,GAAKiC,WAAWjC,GACpD3f,KAAKqd,YAAY1c,EAAQC,IAAK4a,M,2BAGhC,SAAcqG,GACZ,IACIpb,EAEJ,GAAW,MAHAzG,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,KAG5B,CACd,IAAM8N,IAAY9hB,KAAKmI,MAAM6L,IAI7B,GAHAvN,EAAOzG,KAAK+hB,YAAY/hB,KAAKgJ,MAAMyU,QAAQ,IAAKzd,KAAKmI,MAAM6L,KAAOhU,KAAKmI,MAAM6L,KAAK,EAAM6N,KACtF7hB,KAAKmI,MAAM6L,IAEA,OAATvN,GAAiBA,EAAO,QAAU,CACpC,IAAIob,EAGF,OAAO,KAFP7hB,KAAKuY,MAAMuJ,EAASjY,EAAcgD,wBAMtCpG,EAAOzG,KAAK+hB,YAAY,GAAG,EAAOF,GAGpC,OAAOpb,I,wBAGT,SAAWub,GAIT,IAHA,IAAIC,EAAM,GACNC,IAAeliB,KAAKmI,MAAM6L,MAErB,CACP,GAAIhU,KAAKmI,MAAM6L,KAAOhU,KAAKjH,OACzB,MAAMiH,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAcoJ,oBAGnD,IAAM0K,EAAK3d,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,KAC5C,GAAI2J,IAAOqE,EAAO,MAElB,GAAW,KAAPrE,EACFsE,GAAOjiB,KAAKgJ,MAAMxO,MAAM0nB,EAAYliB,KAAKmI,MAAM6L,KAC/CiO,GAAOjiB,KAAKmiB,iBAAgB,GAC5BD,EAAaliB,KAAKmI,MAAM6L,SACnB,GAAW,OAAP2J,GAAsB,OAAPA,IACtB3d,KAAKmI,MAAM6L,MACXhU,KAAKmI,MAAM0R,QACb7Z,KAAKmI,MAAMsM,UAAYzU,KAAKmI,MAAM6L,QAC7B,IAAIxN,EAAUmX,GACnB,MAAM3d,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAcoJ,sBAE/CjT,KAAKmI,MAAM6L,KAIjBiO,GAAOjiB,KAAKgJ,MAAMxO,MAAM0nB,EAAYliB,KAAKmI,MAAM6L,OAC/ChU,KAAKqd,YAAY1c,EAAQK,OAAQihB,K,2BAGnC,WAKE,IAJA,IAAIA,EAAM,GACNC,EAAaliB,KAAKmI,MAAM6L,IACxBoO,GAAkB,IAEb,CACP,GAAIpiB,KAAKmI,MAAM6L,KAAOhU,KAAKjH,OACzB,MAAMiH,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAcqJ,sBAGnD,IAAMyK,EAAK3d,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,KAE5C,GAAW,KAAP2J,GAAoB,KAAPA,GAA2D,MAA9C3d,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GACnE,OAAIhU,KAAKmI,MAAM6L,MAAQhU,KAAKmI,MAAMhB,OAASnH,KAAKwU,MAAM7T,EAAQpL,UACjD,KAAPooB,GACF3d,KAAKmI,MAAM6L,KAAO,OAClBhU,KAAKqd,YAAY1c,EAAQ8B,kBAGvBzC,KAAKmI,MAAM6L,SACbhU,KAAKqd,YAAY1c,EAAQ6B,aAK7Byf,GAAOjiB,KAAKgJ,MAAMxO,MAAM0nB,EAAYliB,KAAKmI,MAAM6L,UAC/ChU,KAAKqd,YAAY1c,EAAQpL,SAAU6sB,EAAkB,KAAOH,IAI9D,GAAW,KAAPtE,EAAW,CACbsE,GAAOjiB,KAAKgJ,MAAMxO,MAAM0nB,EAAYliB,KAAKmI,MAAM6L,KAC/C,IAAM4L,EAAU5f,KAAKmiB,iBAAgB,GAErB,OAAZvC,EACFwC,GAAkB,EAElBH,GAAOrC,EAGTsC,EAAaliB,KAAKmI,MAAM6L,SACnB,GAAIxN,EAAUmX,GAAK,CAIxB,OAHAsE,GAAOjiB,KAAKgJ,MAAMxO,MAAM0nB,EAAYliB,KAAKmI,MAAM6L,OAC7ChU,KAAKmI,MAAM6L,IAEL2J,GACN,KAAK,GAC2C,KAA1C3d,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,QACjChU,KAAKmI,MAAM6L,IAGjB,KAAK,GACHiO,GAAO,KACP,MAEF,QACEA,GAAO/kB,OAAOsZ,aAAamH,KAI7B3d,KAAKmI,MAAM0R,QACb7Z,KAAKmI,MAAMsM,UAAYzU,KAAKmI,MAAM6L,IAClCkO,EAAaliB,KAAKmI,MAAM6L,UAEtBhU,KAAKmI,MAAM6L,O,oCAKnB,SAAuBA,EAAKgB,GACtBhV,KAAKmI,MAAMyR,SAAW5Z,KAAKmI,MAAM8S,aAAa5d,IAAI2W,GACpDhU,KAAKuY,MAAMvE,EAAKgB,GAEhBhV,KAAKmI,MAAM8S,aAAa3d,IAAI0W,EAAKgB,K,6BAIrC,SAAgBqN,GACd,IAAMR,GAAkBQ,EAClB1E,EAAK3d,KAAKgJ,MAAMC,aAAajJ,KAAKmI,MAAM6L,KAG9C,SAFEhU,KAAKmI,MAAM6L,IAEL2J,GACN,KAAK,IACH,MAAO,KAET,KAAK,IACH,MAAO,KAET,KAAK,IAED,IAAMlX,EAAOzG,KAAK+hB,YAAY,GAAG,EAAOF,GACxC,OAAgB,OAATpb,EAAgB,KAAOvJ,OAAOsZ,aAAa/P,GAGtD,KAAK,IAED,IAAMA,EAAOzG,KAAKsiB,cAAcT,GAChC,OAAgB,OAATpb,EAAgB,KAAOvJ,OAAOwiB,cAAcjZ,GAGvD,KAAK,IACH,MAAO,KAET,KAAK,GACH,MAAO,KAET,KAAK,IACH,MAAO,KAET,KAAK,IACH,MAAO,KAET,KAAK,GAC2C,KAA1CzG,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,QACjChU,KAAKmI,MAAM6L,IAGjB,KAAK,GACHhU,KAAKmI,MAAMsM,UAAYzU,KAAKmI,MAAM6L,MAChChU,KAAKmI,MAAM0R,QAEf,KAAK,KACL,KAAK,KACH,MAAO,GAET,KAAK,GACL,KAAK,GACH,GAAIwI,EACF,OAAO,KAEPriB,KAAKyhB,uBAAuBzhB,KAAKmI,MAAM6L,IAAM,EAAGnK,EAAcmH,qBAGlE,QACE,GAAI2M,GAAM,IAAMA,GAAM,GAAI,CACxB,IAAMmE,EAAU9hB,KAAKmI,MAAM6L,IAAM,EAE7BuO,EADUviB,KAAKgJ,MAAMwZ,OAAOxiB,KAAKmI,MAAM6L,IAAM,EAAG,GAAGQ,MAAM,WACxC,GACjBiO,EAAQd,SAASY,EAAU,GAE3BE,EAAQ,MACVF,EAAWA,EAAS/nB,MAAM,GAAI,GAC9BioB,EAAQd,SAASY,EAAU,IAG7BviB,KAAKmI,MAAM6L,KAAOuO,EAASxpB,OAAS,EACpC,IAAMugB,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,KAE9C,GAAiB,MAAbuO,GAA6B,KAATjJ,GAAwB,KAATA,EAAa,CAClD,GAAI+I,EACF,OAAO,KAEPriB,KAAKyhB,uBAAuBK,EAASjY,EAAcmH,qBAIvD,OAAO9T,OAAOsZ,aAAaiM,GAG7B,OAAOvlB,OAAOsZ,aAAamH,M,yBAIjC,SAAYyC,EAAKC,EAAUwB,GACzB,IAAMC,EAAU9hB,KAAKmI,MAAM6L,IACrB0O,EAAI1iB,KAAKihB,QAAQ,GAAIb,EAAKC,GAAU,GAU1C,OARU,OAANqC,IACEb,EACF7hB,KAAKuY,MAAMuJ,EAASjY,EAAcmD,uBAElChN,KAAKmI,MAAM6L,IAAM8N,EAAU,GAIxBY,I,uBAGT,SAAUC,GACR3iB,KAAKmI,MAAM6S,aAAc,EACzB,IAAIjE,EAAO,GACL5P,EAAQnH,KAAKmI,MAAM6L,IACrBkO,EAAaliB,KAAKmI,MAAM6L,IAM5B,SAJkB9hB,IAAdywB,IACF3iB,KAAKmI,MAAM6L,KAAO2O,GAAa,MAAS,EAAI,GAGvC3iB,KAAKmI,MAAM6L,IAAMhU,KAAKjH,QAAQ,CACnC,IAAM4kB,EAAK3d,KAAKwd,eAAexd,KAAKmI,MAAM6L,KAE1C,GAAIyC,EAAiBkH,GACnB3d,KAAKmI,MAAM6L,KAAO2J,GAAM,MAAS,EAAI,MAChC,IAAW,KAAPA,EAyBT,MAxBA3d,KAAKmI,MAAM6S,aAAc,EACzBjE,GAAQ/W,KAAKgJ,MAAMxO,MAAM0nB,EAAYliB,KAAKmI,MAAM6L,KAChD,IAAM4O,EAAW5iB,KAAKmI,MAAM6L,IACtB6O,EAAkB7iB,KAAKmI,MAAM6L,MAAQ7M,EAAQmP,EAAoBG,EAEvE,GAAgD,MAA5CzW,KAAKgJ,MAAMC,aAAajJ,KAAKmI,MAAM6L,KAAc,CACnDhU,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAcwE,sBACzC6T,EAAaliB,KAAKmI,MAAM6L,IAAM,EAC9B,WAGAhU,KAAKmI,MAAM6L,IACb,IAAM8O,EAAM9iB,KAAKsiB,eAAc,GAEnB,OAARQ,IACGD,EAAgBC,IACnB9iB,KAAKuY,MAAMqK,EAAU/Y,EAAcgC,4BAGrCkL,GAAQ7Z,OAAOwiB,cAAcoD,IAG/BZ,EAAaliB,KAAKmI,MAAM6L,KAM5B,OAAO+C,EAAO/W,KAAKgJ,MAAMxO,MAAM0nB,EAAYliB,KAAKmI,MAAM6L,O,sBAGxD,SAAS2O,GACP,IAAM5L,EAAO/W,KAAKwe,UAAUmE,GACtBzZ,EAAO5I,EAAWnL,IAAI4hB,IAASpW,EAAQzF,KAC7C8E,KAAKqd,YAAYnU,EAAM6N,K,iCAGzB,WACE,IAAMgM,EAAK/iB,KAAKmI,MAAMe,KAAKjJ,QAEvB8iB,GAAM/iB,KAAKmI,MAAM6S,aACnBhb,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAcqD,2BAA4B6V,K,2BAI3E,SAAc5E,GACZ,IAAI6E,EAAuBC,EAEqD,OAA/ED,GAAyBC,EAAmBjjB,KAAKmI,MAAMe,MAAM7I,gBAAkC2iB,EAAsBtoB,KAAKuoB,EAAkBjjB,KAAKmI,MAAM2N,a,GAnvCpI/B,GAwvClBmP,GACJ,aAAc,UACZljB,KAAKmjB,aAAe,IAAItrB,IACxBmI,KAAKojB,cAAgB,IAAIhvB,IACzB4L,KAAK0Y,sBAAwB,IAAItkB,KAI/BivB,G,WACJ,WAAY9K,GAAO,UACjBvY,KAAKsjB,MAAQ,GACbtjB,KAAK0Y,sBAAwB,IAAItkB,IACjC4L,KAAKuY,MAAQA,E,iCAGf,WACE,OAAOvY,KAAKsjB,MAAMtjB,KAAKsjB,MAAMvqB,OAAS,K,mBAGxC,WACEiH,KAAKsjB,MAAMtuB,KAAK,IAAIkuB,M,kBAGtB,WAIE,IAHA,IAAMK,EAAgBvjB,KAAKsjB,MAAMtqB,MAC3BwqB,EAAUxjB,KAAKwjB,UAErB,MAA0B/H,MAAMgI,KAAKF,EAAc7K,uBAAnD,eAA2E,CAAtE,gBAAOxd,EAAP,KAAa8Y,EAAb,KACCwP,EACGA,EAAQ9K,sBAAsBrb,IAAInC,IACrCsoB,EAAQ9K,sBAAsBpb,IAAIpC,EAAM8Y,GAG1ChU,KAAKuY,MAAMvE,EAAKnK,EAAc6D,8BAA+BxS,M,gCAKnE,SAAmBA,EAAMwoB,EAAa1P,GACpC,IAAM2P,EAAa3jB,KAAKwjB,UACpBI,EAAYD,EAAWR,aAAa9lB,IAAInC,GAE5C,GAtmDgC2oB,EAsmD5BH,EAA2C,CAC7C,IAAMI,EAAWF,GAAaD,EAAWP,cAAcjuB,IAAI+F,GAE3D,GAAI4oB,GAKFF,GA9mD4BC,EA4mDZC,MA5mDYD,EA6mDZH,KAhnDU,EA6mDRI,MA7mDQ,EA8mDRJ,KAIFC,EAAWP,cAAcjK,OAAOje,QACtC0oB,GACVD,EAAWP,cAAc9lB,IAAIpC,EAAMwoB,GAInCE,GACF5jB,KAAKuY,MAAMvE,EAAKnK,EAAcuG,yBAA0BlV,GAG1DyoB,EAAWR,aAAalrB,IAAIiD,GAC5ByoB,EAAWjL,sBAAsBS,OAAOje,K,4BAG1C,SAAeA,EAAM8Y,GACnB,IAAI2P,EADoB,MAGL3jB,KAAKsjB,OAHA,IAGxB,2BACE,IADGK,EAA0B,SACdR,aAAa9lB,IAAInC,GAAO,OAJjB,8BAOpByoB,EACFA,EAAWjL,sBAAsBpb,IAAIpC,EAAM8Y,GAE3ChU,KAAKuY,MAAMvE,EAAKnK,EAAc6D,8BAA+BxS,O,KAW7D6oB,G,WACJ,aAAgC,IAApB7a,EAAoB,uDANd,EAMc,UAC9BlJ,KAAKkJ,UAAO,EACZlJ,KAAKkJ,KAAOA,E,wDAGd,WACE,OAVyC,IAUlClJ,KAAKkJ,MAXwB,IAWyBlJ,KAAKkJ,O,6CAGpE,WACE,OAb0B,IAanBlJ,KAAKkJ,S,KAKV8a,G,8BACJ,WAAY9a,GAAM,wBAChB,cAAMA,IACDiM,OAAS,IAAI/gB,IAFF,E,gDAKlB,SAAuB4f,EAAKze,GAC1ByK,KAAKmV,OAAO7X,IAAI0W,EAAKze,K,mCAGvB,SAAsBye,GACpBhU,KAAKmV,OAAOgE,OAAOnF,K,2BAGrB,SAAciQ,GACZjkB,KAAKmV,OAAOtB,QAAQoQ,O,GAfYF,IAoB9BG,G,WACJ,WAAY3L,GAAO,UACjBvY,KAAKsjB,MAAQ,CAAC,IAAIS,IAClB/jB,KAAKuY,MAAQA,E,+BAGf,SAAM5lB,GACJqN,KAAKsjB,MAAMtuB,KAAKrC,K,kBAGlB,WACEqN,KAAKsjB,MAAMtqB,Q,6CAGb,SAAgCgb,EAAKze,GAOnC,IANA,IACE+tB,EACEtjB,KADFsjB,MAEEhpB,EAAIgpB,EAAMvqB,OAAS,EACnBpG,EAAQ2wB,EAAMhpB,IAEV3H,EAAMwxB,mCAAmC,CAC/C,IAAIxxB,EAAMyxB,iCAGR,OAFAzxB,EAAM0xB,uBAAuBrQ,EAAKze,GAKpC5C,EAAQ2wB,IAAQhpB,GAGlB0F,KAAKuY,MAAMvE,EAAKze,K,gDAGlB,SAAmCye,EAAKze,GACtC,IACE+tB,EACEtjB,KADFsjB,MAEI3wB,EAAQ2wB,EAAMA,EAAMvqB,OAAS,GAEnC,GAAIpG,EAAMwxB,kCACRnkB,KAAKuY,MAAMvE,EAAKze,OACX,KAAI5C,EAAMyxB,iCAGf,OAFAzxB,EAAM0xB,uBAAuBrQ,EAAKze,M,6CAMtC,SAAgCye,EAAKze,GAOnC,IANA,IACE+tB,EACEtjB,KADFsjB,MAEEhpB,EAAIgpB,EAAMvqB,OAAS,EACnBpG,EAAQ2wB,EAAMhpB,GAEX3H,EAAMyxB,kCA/F4B,IAgGnCzxB,EAAMuW,MACRvW,EAAM0xB,uBAAuBrQ,EAAKze,GAGpC5C,EAAQ2wB,IAAQhpB,K,+BAIpB,WAAoB,WAEhBgpB,EACEtjB,KADFsjB,MAEIxK,EAAewK,EAAMA,EAAMvqB,OAAS,GACrC+f,EAAasL,kCAClBtL,EAAawL,eAAc,SAAC/uB,EAAUye,GACpC,EAAKuE,MAAMvE,EAAKze,GAIhB,IAHA,IAAI+E,EAAIgpB,EAAMvqB,OAAS,EACnBpG,EAAQ2wB,EAAMhpB,GAEX3H,EAAMyxB,kCACXzxB,EAAM4xB,sBAAsBvQ,GAC5BrhB,EAAQ2wB,IAAQhpB,U,KAexB,SAASkqB,KACP,OAAO,IAAIT,GAGb,IAKMU,G,WACJ,aAAc,UACZzkB,KAAK0kB,OAAS,G,+BAGhB,SAAMxM,GACJlY,KAAK0kB,OAAO1vB,KAAKkjB,K,kBAGnB,WACElY,KAAK0kB,OAAO1rB,Q,0BAGd,WACE,OAAOgH,KAAK0kB,OAAO1kB,KAAK0kB,OAAO3rB,OAAS,K,oBAG1C,WACE,OArBgB,EAqBRiH,KAAK2kB,gBAAgC,I,oBAG/C,WACE,OA1BgB,EA0BR3kB,KAAK2kB,gBAAgC,I,qBAG/C,WACE,OA5BiB,EA4BT3kB,KAAK2kB,gBAAiC,I,iBAGhD,WACE,OA/Ba,EA+BL3kB,KAAK2kB,gBAA6B,M,KAI9C,SAASC,GAAcC,EAASC,GAC9B,OAAQD,EAtCU,EAsCc,IAAMC,EAvCpB,EAuCgD,G,IAG9DC,G,sHACJ,SAASnyB,EAAMoH,EAAKwhB,GACb5oB,KACSA,EAAKoyB,MAAQpyB,EAAKoyB,OAAS,IACnChrB,GAAOwhB,K,0BAGf,SAAayJ,GACX,OAAOjlB,KAAKwU,MAAM7T,EAAQgD,aAAe3D,KAAKmI,MAAM9W,QAAU4zB,I,8BAGhE,SAAiBA,GACXjlB,KAAKklB,aAAaD,GACpBjlB,KAAKsZ,OAELtZ,KAAKmlB,WAAW,KAAMxkB,EAAQgD,c,0BAIlC,SAAazI,GACX,OAAO8E,KAAKwU,MAAM7T,EAAQzF,OAAS8E,KAAKmI,MAAM9W,QAAU6J,IAAS8E,KAAKmI,MAAM6S,c,kCAG9E,SAAqBoK,EAAWlqB,GAC9B,IAAMmqB,EAAUD,EAAYlqB,EAAKnC,OAEjC,GAAIiH,KAAKgJ,MAAMxO,MAAM4qB,EAAWC,KAAanqB,EAAM,CACjD,IAAMoqB,EAAStlB,KAAKgJ,MAAMC,WAAWoc,GACrC,QAAS5O,EAAiB6O,IAAiC,SAAZ,MAATA,IAGxC,OAAO,I,mCAGT,SAAsBpqB,GACpB,IAAMoe,EAAOtZ,KAAKgd,iBAClB,OAAOhd,KAAKulB,qBAAqBjM,EAAMpe,K,2BAGzC,SAAcA,GACZ,OAAO8E,KAAKwlB,aAAatqB,IAAS8E,KAAKylB,IAAI9kB,EAAQzF,Q,8BAGrD,SAAiBA,EAAM3F,GAChByK,KAAK0lB,cAAcxqB,IAAO8E,KAAKmlB,WAAW,KAAM5vB,K,gCAGvD,WACE,OAAOyK,KAAKwU,MAAM7T,EAAQO,MAAQlB,KAAKwU,MAAM7T,EAAQgB,SAAW3B,KAAK2lB,0B,mCAGvE,WACE,OAAOvf,EAAUmQ,KAAKvW,KAAKgJ,MAAMxO,MAAMwF,KAAKmI,MAAMkM,WAAYrU,KAAKmI,MAAMhB,U,mCAG3E,WAEE,OADAP,EAA0B8N,UAAY1U,KAAKmI,MAAMf,IAC1CR,EAA0B2P,KAAKvW,KAAKgJ,S,8BAG7C,WACE,OAAOhJ,KAAKylB,IAAI9kB,EAAQqB,OAAShC,KAAK4lB,uB,uBAGxC,WAA2B,IAAjBC,IAAiB,0DACrBA,EAAW7lB,KAAK8lB,mBAAqB9lB,KAAKylB,IAAI9kB,EAAQqB,QAC1DhC,KAAKuY,MAAMvY,KAAKmI,MAAMkM,WAAYxK,EAAcuE,oB,oBAGlD,SAAOlF,EAAM8K,GACXhU,KAAKylB,IAAIvc,IAASlJ,KAAKmlB,WAAWnR,EAAK9K,K,2BAGzC,WAA6C,IAA/B8L,EAA+B,uDAArB,oBAClBhV,KAAKmI,MAAMhB,MAAQnH,KAAKmI,MAAMkM,YAChCrU,KAAKuY,MAAMvY,KAAKmI,MAAMkM,WAAY,CAChC5N,KAAMgD,EAAWE,YACjBmK,WAAY,kBACZve,SAAUyf,M,wBAKhB,SAAWhB,GAIR,IAJa+R,EAIb,uDAJ6B,CAC9Btf,KAAMgD,EAAWE,YACjBmK,WAAY,kBACZve,SAAU,oBAUV,MARIwwB,aAAyBlmB,IAC3BkmB,EAAgB,CACdtf,KAAMgD,EAAWE,YACjBmK,WAAY,kBACZve,SAAU,+BAAF,OAAiCwwB,EAAcjmB,MAA/C,OAINE,KAAKuY,MAAa,MAAPvE,EAAcA,EAAMhU,KAAKmI,MAAMhB,MAAO4e,K,0BAGzD,SAAa7qB,EAAM8Y,GACjB,IAAKhU,KAAKwJ,UAAUtO,GAClB,MAAM8E,KAAK8U,cAAqB,MAAPd,EAAcA,EAAMhU,KAAKmI,MAAMhB,MAAO,CAC7D6e,cAAe,CAAC9qB,IADZ,yEAE+DA,EAF/D,MAKR,OAAO,I,6BAGT,SAAgB+qB,EAAOjS,GAAK,WAC1B,IAAKiS,EAAMC,MAAK,SAAAxD,GAAC,OAAI,EAAKlZ,UAAUkZ,MAClC,MAAM1iB,KAAK8U,cAAqB,MAAPd,EAAcA,EAAMhU,KAAKmI,MAAMhB,MAAO,CAC7D6e,cAAeC,GADX,6FAEmFA,EAAME,KAAK,MAF9F,Q,sBAMV,SAAShpB,GAAmC,IAA/BipB,EAA+B,uDAApBpmB,KAAKmI,MAAMlJ,QAC3BonB,EAAc,CAClBzzB,KAAM,MAGR,IACE,IAAMA,EAAOuK,GAAG,WAAiB,IAAhBvK,EAAgB,uDAAT,KAEtB,MADAyzB,EAAYzzB,KAAOA,EACbyzB,KAGR,GAAIrmB,KAAKmI,MAAMgN,OAAOpc,OAASqtB,EAASjR,OAAOpc,OAAQ,CACrD,IAAMutB,EAAYtmB,KAAKmI,MAGvB,OAFAnI,KAAKmI,MAAQie,EACbpmB,KAAKmI,MAAM+S,aAAeoL,EAAUpL,aAC7B,CACLtoB,OACAwiB,MAAOkR,EAAUnR,OAAOiR,EAASjR,OAAOpc,QACxCwtB,QAAQ,EACRC,SAAS,EACTF,aAIJ,MAAO,CACL1zB,OACAwiB,MAAO,KACPmR,QAAQ,EACRC,SAAS,EACTF,UAAW,MAEb,MAAOlR,GACP,IAAMkR,EAAYtmB,KAAKmI,MAGvB,GAFAnI,KAAKmI,MAAQie,EAEThR,aAAiBzL,YACnB,MAAO,CACL/W,KAAM,KACNwiB,QACAmR,QAAQ,EACRC,SAAS,EACTF,aAIJ,GAAIlR,IAAUiR,EACZ,MAAO,CACLzzB,KAAMyzB,EAAYzzB,KAClBwiB,MAAO,KACPmR,QAAQ,EACRC,SAAS,EACTF,aAIJ,MAAMlR,K,mCAIV,SAAsBqR,EAAqBC,GACzC,IAAKD,EAAqB,OAAO,EACjC,IACEE,EAGEF,EAHFE,gBACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,mBAGF,IAAKH,EACH,OAAOC,GAAmB,GAAKC,GAAe,GAAKC,GAAsB,EAGvEF,GAAmB,GACrB3mB,KAAKmlB,WAAWwB,GAGdC,GAAe,GACjB5mB,KAAKuY,MAAMqO,EAAa/c,EAAc6B,gBAGpCmb,GAAsB,GACxB7mB,KAAKmlB,WAAW0B,K,mCAIpB,WACE,OAAO7mB,KAAKwU,MAAM7T,EAAQzF,SAAW8E,KAAKmI,MAAMe,KAAKjJ,SAAWD,KAAKwU,MAAM7T,EAAQK,SAAWhB,KAAKwU,MAAM7T,EAAQC,MAAQZ,KAAKwU,MAAM7T,EAAQE,SAAWb,KAAKwU,MAAM7T,EAAQG,W,2BAG5K,SAAclO,GACZ,MAAqB,gBAAdA,EAAKsW,O,8BAGd,SAAiBtW,GACf,OAAOA,EAAK6J,GAAGvB,O,sCAGjB,SAAyBtI,GACvB,OAAsB,qBAAdA,EAAKsW,MAA6C,6BAAdtW,EAAKsW,OAAwClJ,KAAK8mB,cAAcl0B,EAAKm0B,Y,6BAGnH,SAAgBn0B,GACd,MAAqB,6BAAdA,EAAKsW,MAAqD,2BAAdtW,EAAKsW,O,8BAG1D,SAAiBtW,GACf,MAAqB,mBAAdA,EAAKsW,O,4BAGd,SAAetW,GACb,MAAqB,iBAAdA,EAAKsW,O,8BAGd,WAAkE,WAAjD8N,EAAiD,uDAAV,WAA5BhX,KAAKQ,QAAQ4a,WACjC4L,EAAYhnB,KAAKmI,MAAM0S,OAC7B7a,KAAKmI,MAAM0S,OAAS,GACpB,IAAMoM,EAAyBjnB,KAAKknB,oBACpClnB,KAAKknB,oBAAsB,IAAIrvB,IAC/B,IAAMsvB,EAAcnnB,KAAKgX,SACzBhX,KAAKgX,SAAWA,EAChB,IAAMoQ,EAAWpnB,KAAKrN,MAChB2lB,EAAetY,KAAKqnB,kBAC1BrnB,KAAKrN,MAAQ,IAAI2lB,EAAatY,KAAKuY,MAAMtmB,KAAK+N,MAAOA,KAAKgX,UAC1D,IAAMsQ,EAAetnB,KAAKunB,UAC1BvnB,KAAKunB,UAAY,IAAI9C,GACrB,IAAMlB,EAAgBvjB,KAAK2jB,WAC3B3jB,KAAK2jB,WAAa,IAAIN,GAAkBrjB,KAAKuY,MAAMtmB,KAAK+N,OACxD,IAAMwnB,EAAqBxnB,KAAKynB,gBAEhC,OADAznB,KAAKynB,gBAAkB,IAAIvD,GAAuBlkB,KAAKuY,MAAMtmB,KAAK+N,OAC3D,WACL,EAAKmI,MAAM0S,OAASmM,EACpB,EAAKE,oBAAsBD,EAC3B,EAAKjQ,SAAWmQ,EAChB,EAAKx0B,MAAQy0B,EACb,EAAKG,UAAYD,EACjB,EAAK3D,WAAaJ,EAClB,EAAKkE,gBAAkBD,K,gCAI3B,WACE,IAAIE,EA5SM,EA8SN1nB,KAAKgX,WACP0Q,GA7Sc,GAgThB1nB,KAAKrN,MAAMg1B,MA9mEO,GA+mElB3nB,KAAKunB,UAAUI,MAAMD,O,GAxQArL,IA4QnBuL,GACJ,aAAc,UACZ5nB,KAAK2mB,iBAAmB,EACxB3mB,KAAK4mB,aAAe,EACpB5mB,KAAK6mB,oBAAsB,GAKzBgB,GACJ,WAAYC,EAAQ9T,EAAK9L,GAAK,UAC5BlI,KAAKkJ,KAAO,GACZlJ,KAAKmH,MAAQ6M,EACbhU,KAAKoH,IAAM,EACXpH,KAAKkI,IAAM,IAAIhB,EAAegB,GAChB,MAAV4f,GAAkBA,EAAOtnB,QAAQunB,SAAQ/nB,KAAKgoB,MAAQ,CAAChU,EAAK,IAClD,MAAV8T,GAAkBA,EAAOzgB,WAAUrH,KAAKkI,IAAIb,SAAWygB,EAAOzgB,WAKhE4gB,GAAgBJ,GAAKK,UAsB3B,SAASC,GAAgBv1B,GACvB,IACEsW,EAOEtW,EAPFsW,KACA/B,EAMEvU,EANFuU,MACAC,EAKExU,EALFwU,IACAc,EAIEtV,EAJFsV,IACA8f,EAGEp1B,EAHFo1B,MACAhD,EAEEpyB,EAFFoyB,MACA9pB,EACEtI,EADFsI,KAEIktB,EAASl3B,OAAOm3B,OAAOJ,IAa7B,OAZAG,EAAOlf,KAAOA,EACdkf,EAAOjhB,MAAQA,EACfihB,EAAOhhB,IAAMA,EACbghB,EAAOlgB,IAAMA,EACbkgB,EAAOJ,MAAQA,EACfI,EAAOpD,MAAQA,EACfoD,EAAOltB,KAAOA,EAED,gBAATgO,IACFkf,EAAOE,aAAe11B,EAAK01B,cAGtBF,EAET,SAASG,GAAmB31B,GAC1B,IACEsW,EAMEtW,EANFsW,KACA/B,EAKEvU,EALFuU,MACAC,EAIExU,EAJFwU,IACAc,EAGEtV,EAHFsV,IACA8f,EAEEp1B,EAFFo1B,MACAhD,EACEpyB,EADFoyB,MAGF,GAAa,gBAAT9b,EACF,OAxCJ,SAA0BtW,GACxB,OAAOu1B,GAAgBv1B,GAuCd41B,CAAiB51B,GAG1B,IAAMw1B,EAASl3B,OAAOm3B,OAAOJ,IAQ7B,OAPAG,EAAOlf,KAAO,gBACdkf,EAAOjhB,MAAQA,EACfihB,EAAOhhB,IAAMA,EACbghB,EAAOlgB,IAAMA,EACbkgB,EAAOJ,MAAQA,EACfI,EAAOpD,MAAQA,EACfoD,EAAO/2B,MAAQuB,EAAKvB,MACb+2B,EAnEPH,GAAcQ,QAAU,WAItB,IAHA,IAAMC,EAAU,IAAIb,GACdjU,EAAO1iB,OAAO0iB,KAAK5T,MAEhB1F,EAAI,EAAGvB,EAAS6a,EAAK7a,OAAQuB,EAAIvB,EAAQuB,IAAK,CACrD,IAAMN,EAAM4Z,EAAKtZ,GAEL,oBAARN,GAAqC,qBAARA,GAAsC,kBAARA,IAC7D0uB,EAAQ1uB,GAAOgG,KAAKhG,IAIxB,OAAO0uB,G,IAyDLC,G,uHACJ,WACE,OAAO,IAAId,GAAK7nB,KAAMA,KAAKmI,MAAMhB,MAAOnH,KAAKmI,MAAM8L,Y,yBAGrD,SAAYD,EAAK9L,GACf,OAAO,IAAI2f,GAAK7nB,KAAMgU,EAAK9L,K,6BAG7B,SAAgBgB,GACd,OAAOlJ,KAAK4oB,YAAY1f,EAAK/B,MAAO+B,EAAKhB,IAAIf,S,wBAG/C,SAAWvU,EAAMsW,GACf,OAAOlJ,KAAK6oB,aAAaj2B,EAAMsW,EAAMlJ,KAAKmI,MAAMkM,WAAYrU,KAAKmI,MAAMmM,iB,0BAGzE,SAAa1hB,EAAMsW,EAAM8K,EAAK9L,GAO5B,OALAtV,EAAKsW,KAAOA,EACZtW,EAAKwU,IAAM4M,EACXphB,EAAKsV,IAAId,IAAMc,EACXlI,KAAKQ,QAAQunB,SAAQn1B,EAAKo1B,MAAM,GAAKhU,GACrChU,KAAKQ,QAAQwd,eAAehe,KAAK8oB,eAAel2B,GAC7CA,I,gCAGT,SAAmBA,EAAMuU,EAAO8M,GAC9BrhB,EAAKuU,MAAQA,EACbvU,EAAKsV,IAAIf,MAAQ8M,EACbjU,KAAKQ,QAAQunB,SAAQn1B,EAAKo1B,MAAM,GAAK7gB,K,8BAG3C,SAAiBvU,GAAsE,IAAhEwU,EAAgE,uDAA1DpH,KAAKmI,MAAMkM,WAAYD,EAAmC,uDAA1BpU,KAAKmI,MAAMmM,cACtE1hB,EAAKwU,IAAMA,EACXxU,EAAKsV,IAAId,IAAMgN,EACXpU,KAAKQ,QAAQunB,SAAQn1B,EAAKo1B,MAAM,GAAK5gB,K,wCAG3C,SAA2BxU,EAAMm2B,GAC/B/oB,KAAKgpB,mBAAmBp2B,EAAMm2B,EAAa5hB,MAAO4hB,EAAa7gB,IAAIf,W,GAxC/C4d,IA6ClBkE,GAAgB,IAAIpxB,IAAI,CAAC,IAAK,MAAO,OAAQ,UAAW,QAAS,UAAW,QAAS,YAAa,QAAS,OAAQ,SAAU,SAAU,SAAU,OAAQ,SAAU,SACnKqxB,GAAapf,EAAmB,CACpCqf,0BAA2B,iFAC3BC,2BAA4B,yKAC5BC,mBAAoB,qCACpBC,oBAAqB,0DACrBC,6BAA8B,sEAC9BC,8BAA+B,gDAC/BC,gCAAiC,sGACjCC,wBAAyB,oGACzBC,6BAA8B,+KAC9BC,wBAAyB,mGACzBC,uCAAwC,uGACxCC,wCAAyC,gFACzCC,uCAAwC,qEACxCC,wCAAyC,iHACzCC,sBAAuB,2HACvBC,+BAAgC,0EAChCC,0CAA2C,8GAC3CC,0BAA2B,2CAC3BC,oCAAqC,yKACrCC,mBAAoB,8EACpBC,uBAAwB,2EACxBC,gBAAiB,gDACjBC,oCAAqC,0FACrCC,wBAAyB,0GACzBC,oBAAqB,mEACrBC,kBAAmB,0DACnBC,uBAAwB,iFACxBC,0BAA2B,2CAC3BC,eAAgB,0CAChBC,4BAA6B,0DAC7BC,6BAA8B,oGAC9BC,0BAA2B,2CAC3BC,qBAAsB,6DACtBC,mBAAoB,qDACpBC,sBAAuB,oHACvBC,kBAAmB,uEACnBC,kCAAmC,uEACnCC,uBAAwB,+BACxBC,6BAA8B,yDAC9BC,mCAAoC,wDACpCC,qBAAsB,mEACtBC,6BAA8B,mDAC9BC,kCAAmC,oEACnCC,gDAAiD,oHACjDC,6BAA8B,0DAC9BC,oCAAqC,oEACrCC,wBAAyB,8BACxBxiB,EAAWE,aAMd,SAASuiB,GAAkBt5B,GACzB,MAA2B,SAApBA,EAAKu5B,YAA6C,WAApBv5B,EAAKu5B,WAG5C,SAASC,GAAqBjkB,GAC5B,OAAQA,EAAMe,OAASvI,EAAQzF,QAAUiN,EAAMe,KAAKjJ,UAA4B,SAAhBkI,EAAM9W,MAGxE,IAAMg7B,GAAoB,CACxBC,MAAO,qBACPC,IAAK,qBACLrjB,KAAM,cACNsjB,UAAW,oBAcb,IAAMC,GAAoB,yBAywFpBC,GAAW,CACfC,KAAM,IACNC,IAAK,IACLC,KAAM,IACNC,GAAI,IACJC,GAAI,IACJC,KAAM,OACNC,MAAO,OACPC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRC,IAAK,OACLC,OAAQ,OACRC,KAAM,OACNC,IAAK,OACLC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,IAAK,OACLC,IAAK,OACLC,IAAK,OACLC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,MAAO,OACPC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,KAAM,OACNC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNpwB,MAAO,SACPqwB,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,QAAS,SACTC,GAAI,SACJC,IAAK,SACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,QAAS,SACTC,GAAI,SACJC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,MAAO,SACPC,SAAU,SACVC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,KAAM,SACNC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,GAAI,SACJC,KAAM,SACNC,IAAK,SACLC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,IAAK,SACLC,IAAK,SACLC,GAAI,SACJC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,GAAI,SACJC,MAAO,SACPC,GAAI,SACJC,GAAI,SACJC,IAAK,SACLC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,MAAO,UAGHC,GAAa,gBACbC,GAAiB,QACjBC,GAAY3yB,EAAmB,CACnC4yB,iBAAkB,+DAClBC,yBAA0B,mDAC1BC,0BAA2B,iDAC3BC,6BAA8B,2GAC9BC,oBAAqB,iEACrBC,uBAAwB,6BACxBC,6BAA8B,oGAC7BvzB,EAAWE,aAiBd,SAASszB,GAAWzlC,GAClB,QAAOA,IAAyB,uBAAhBA,EAAO0R,MAAiD,uBAAhB1R,EAAO0R,MAGjE,SAASg0B,GAAoB1lC,GAC3B,GAAoB,kBAAhBA,EAAO0R,KACT,OAAO1R,EAAO0D,KAGhB,GAAoB,sBAAhB1D,EAAO0R,KACT,OAAO1R,EAAO2lC,UAAUjiC,KAAO,IAAM1D,EAAO0D,KAAKA,KAGnD,GAAoB,wBAAhB1D,EAAO0R,KACT,OAAOg0B,GAAoB1lC,EAAOA,QAAU,IAAM0lC,GAAoB1lC,EAAOuvB,UAG/E,MAAM,IAAIqW,MAAM,6BAA+B5lC,EAAO0R,MAjCxD1T,EAAM6nC,OAAS,IAAI1nB,EAAW,QAC9BngB,EAAM8nC,OAAS,IAAI3nB,EAAW,SAC9BngB,EAAM+nC,OAAS,IAAI5nB,EAAW,kBAAkB,GAChDhV,EAAQ68B,QAAU,IAAI39B,EAAU,WAChCc,EAAQ88B,QAAU,IAAI59B,EAAU,UAAW,CACzCJ,YAAY,IAEdkB,EAAQ+8B,YAAc,IAAI79B,EAAU,cAAe,CACjDH,YAAY,IAEdiB,EAAQg9B,UAAY,IAAI99B,EAAU,aAElCc,EAAQ+8B,YAAYr9B,cAAgB,SAAAyV,GAClCA,EAAQ9gB,KAAKQ,EAAM+nC,OAAQ/nC,EAAM6nC,SAuBnC,IAqcMO,G,8BACJ,aAAqB,2CAAN1jC,EAAM,yBAANA,EAAM,uBACnB,+BAASA,KACJ1E,MAAQ,IAAIqC,IACjB,EAAKgmC,MAAQ,IAAIhmC,IACjB,EAAKimC,WAAa,IAAIjmC,IACtB,EAAKkmC,QAAU,IAAIlmC,IACnB,EAAKmmC,mBAAqB,IAAInmC,IANX,E,UADOogB,IAYxBgmB,G,yHACJ,SAAY/lB,GACV,OAAO,IAAI0lB,GAAgB1lB,K,yBAG7B,SAAYhd,EAAM8d,EAAahF,GAC7B,IAAMrhB,EAAQqN,KAAK8Y,eAEnB,GAAIE,EAAcnB,GAGhB,OAFA7X,KAAKkZ,mBAAmBvmB,EAAOuI,QAC/BvI,EAAMqrC,mBAAmB/lC,IAAIiD,GAI/B,gDAAqBL,WAz1LF,EA21Lfme,IA51LgB,EA61LZA,IACJhZ,KAAKiZ,0BAA0BtmB,EAAOuI,EAAM8d,EAAahF,GACzDhU,KAAKkZ,mBAAmBvmB,EAAOuI,IAGjCvI,EAAM6C,MAAMyC,IAAIiD,IAGd8d,EAAcrB,IAAoBhlB,EAAMkrC,MAAM5lC,IAAIiD,GAClD8d,EAAcpB,IAA0BjlB,EAAMmrC,WAAW7lC,IAAIiD,GAC7D8d,EAActB,IAAkB/kB,EAAMorC,QAAQ9lC,IAAIiD,K,iCAGxD,SAAoBvI,EAAOuI,EAAM8d,GAC/B,GAAIrmB,EAAMkrC,MAAMxgC,IAAInC,GAAO,CACzB,GAAI8d,EAAcrB,GAAoB,CACpC,IAAMumB,KAAallB,EAAcpB,IAC3BumB,EAAWxrC,EAAMmrC,WAAWzgC,IAAInC,GACtC,OAAOgjC,IAAYC,EAGrB,OAAO,EAGT,OAAInlB,EAActB,IAAoB/kB,EAAMorC,QAAQ1gC,IAAInC,KAClDvI,EAAMylB,QAAQ/a,IAAInC,OAt3LJ,EAu3LN8d,MAt3LK,EA43LfA,GAAgCrmB,EAAM6C,MAAM6H,IAAInC,KAIpD,wDAAoCL,a,8BAGtC,SAAiB4B,GACf,IAAM8c,EAAgBvZ,KAAKwY,WAAW,GAEpCtd,EACEuB,EADFvB,KAGGqe,EAAc/jB,MAAM6H,IAAInC,IAAUqe,EAAcykB,mBAAmB3gC,IAAInC,IAC1E,oDAAuBuB,O,GA/DQ6b,IAqErC,SAAS8lB,GAAQC,GACf,GAAS,MAALA,EACF,MAAM,IAAIjB,MAAJ,qBAAwBiB,EAAxB,YAGR,OAAOA,EAGT,SAASC,GAAOD,GACd,IAAKA,EACH,MAAM,IAAIjB,MAAM,eAIpB,IAAMmB,GAAWz0B,EAAmB,CAClC00B,gCAAiC,2EACjCC,+BAAgC,0EAChCC,kCAAmC,8DACnCC,gCAAiC,2CACjCC,sBAAuB,oDACvBC,uBAAwB,qDACxBC,6BAA8B,8DAC9BC,gBAAiB,sCACjBC,gCAAiC,oDACjCC,iCAAkC,4DAClCC,+BAAgC,uCAChCC,kBAAmB,4BACnBC,wBAAyB,6BACzBC,mBAAoB,sCACpBC,oBAAqB,uCACrBC,kCAAmC,+DACnCC,yBAA0B,6CAC1BC,sBAAuB,mDACvBC,0BAA2B,wDAC3BC,+BAAgC,iEAChCC,yBAA0B,uDAC1BC,0BAA2B,2DAC3BC,wBAAyB,sDACzBC,4BAA6B,gDAC7BC,sBAAuB,4CACvBC,wBAAyB,0DACzBC,qBAAsB,8DACtBC,iCAAkC,2DAClCC,kCAAmC,6DACnCC,yCAA0C,mFAC1CC,2BAA4B,wDAC5BC,sBAAuB,6GACvBC,kBAAmB,iFACnBC,0BAA2B,wDAC3BC,+BAAgC,iEAChCC,2BAA4B,oFAC5BC,sCAAuC,sDACvCC,kCAAmC,+CACnCC,+BAAgC,yDAChCC,8BAA+B,gDAC/BC,0BAA2B,oHAC3BC,uCAAwC,mFACxCC,4BAA6B,wEAC7BC,mBAAoB,+EACpBC,yBAA0B,yCAC1BC,8BAA+B,8CAC/BC,8BAA+B,sDAC/BC,iCAAkC,oEAClCC,kCAAmC,6FAClC/3B,EAAWE,aAuCd,SAAS83B,GAAmBC,GAC1B,MAAoB,YAAbA,GAAuC,WAAbA,GAAsC,cAAbA,EA27E5D/gC,EAAQghC,YAAc,IAAI9hC,EAAU,KAAM,CACxCH,YAAY,IAEd,IAAMkiC,GAAoB93B,EAAmB,CAC3C+3B,oBAAqB,6BACpBp4B,EAAWE,aAsPd,SAASH,GAAUF,EAASpO,GAC1B,OAAOoO,EAAQ4c,MAAK,SAAA3c,GAClB,OAAIkS,MAAMC,QAAQnS,GACTA,EAAO,KAAOrO,EAEdqO,IAAWrO,KAIxB,SAASqjB,GAAgBjV,EAASpO,EAAM4mC,GACtC,IAAMv4B,EAASD,EAAQ/Q,MAAK,SAAAgR,GAC1B,OAAIkS,MAAMC,QAAQnS,GACTA,EAAO,KAAOrO,EAEdqO,IAAWrO,KAItB,OAAIqO,GAAUkS,MAAMC,QAAQnS,GACnBA,EAAO,GAAGu4B,GAGZ,KAET,IAAMC,GAAqB,CAAC,UAAW,SAAU,OAAQ,SACnDC,GAAe,CAAC,IAAK,KACrBC,GAAgC,CAAC,OAAQ,OAkF/C,IAAMC,GAAe,CACnBC,OA7uSY,SAAAtkC,GAAU,uIACtB,YAGG,IAFDqiB,EAEC,EAFDA,QACAhI,EACC,EADDA,MAEIkqB,EAAQ,KAEZ,IACEA,EAAQ,IAAI97B,OAAO4Z,EAAShI,GAC5B,MAAOyI,IAET,IAAM/tB,EAAOoN,KAAKqiC,mBAAmBD,GAKrC,OAJAxvC,EAAKwvC,MAAQ,CACXliB,UACAhI,SAEKtlB,IAhBa,gCAmBtB,SAAmBvB,GACjB,IAAIixC,EAEJ,IACEA,EAASC,OAAOlxC,GAChB,MAAO6N,GACPojC,EAAS,KAGX,IAAM1vC,EAAOoN,KAAKqiC,mBAAmBC,GAErC,OADA1vC,EAAKiO,OAAS3D,OAAOtK,EAAKvB,OAASA,GAC5BuB,IA9Ba,iCAiCtB,SAAoBvB,GAClB,IACMuB,EAAOoN,KAAKqiC,mBADF,MAGhB,OADAzvC,EAAKkO,QAAU5D,OAAOtK,EAAKvB,OAASA,GAC7BuB,IArCa,gCAwCtB,SAAmBvB,GACjB,OAAO2O,KAAKwiC,aAAanxC,EAAO,aAzCZ,gCA4CtB,SAAmBA,GACjB,OAAO2O,KAAKqiC,mBAAmBhxC,KA7CX,iCAgDtB,SAAoBA,GAClB,OAAO2O,KAAKqiC,mBAAmBhxC,KAjDX,8BAoDtB,WACE,OAAO2O,KAAKqiC,mBAAmB,QArDX,iCAwDtB,SAAoBhxC,GAClB,OAAO2O,KAAKqiC,mBAAmBhxC,KAzDX,6BA4DtB,SAAgBsN,GACd,IAAMC,EAAmBD,EAAUtN,MAC7BoxC,EAAOziC,KAAK4oB,YAAYjqB,EAAUwI,MAAOxI,EAAUuJ,IAAIf,OACvD3V,EAAawO,KAAK4oB,YAAYhqB,EAAiBuI,MAAOvI,EAAiBsJ,IAAIf,OAKjF,OAJA3V,EAAWH,MAAQuN,EAAiBomB,MAAM0d,gBAC1ClxC,EAAWmxC,IAAM/jC,EAAiBomB,MAAM2d,IACxCF,EAAKjxC,WAAawO,KAAK6oB,aAAar3B,EAAY,UAAWoN,EAAiBwI,IAAKxI,EAAiBsJ,IAAId,KACtGq7B,EAAK9jC,UAAYC,EAAiBomB,MAAM2d,IAAInoC,MAAM,GAAI,GAC/CwF,KAAK6oB,aAAa4Z,EAAM,sBAAuB9jC,EAAUyI,IAAKzI,EAAUuJ,IAAId,OApE/D,0BAuEtB,SAAaxU,EAAMiyB,GACjB,gDAAmBjyB,EAAMiyB,GACzBjyB,EAAKpB,YAAa,IAzEE,8BA4EtB,SAAiBoB,GACH,MAARA,GAAgBoN,KAAK4iC,iBAAiBhwC,GACxCoN,KAAK6iC,iBAAiBjwC,EAAKvB,OAE3B,oDAAuBuB,KAhFL,0CAoFtB,SAA6B2K,GAC3B,OAAOA,EAAOlM,MAAMgE,SArFA,8BAwFtB,SAAiBotC,GACf,IAAIK,EAEJ,MAAqB,wBAAdL,EAAKv5B,MAA2D,YAAzBu5B,EAAKjxC,WAAW0X,MAAuD,kBAA1Bu5B,EAAKjxC,WAAWH,SAA2E,OAAlDyxC,EAAwBL,EAAKjxC,WAAWwzB,QAAkB8d,EAAsBC,iBA3FhM,6BA8FtB,SAAgBN,GACd,IAAMpxC,EAAQoxC,EAAKjxC,WAAWH,MACxBsN,EAAY,EAAH,iDAAyB8jC,GAExC,OADAziC,KAAKgjC,SAASrkC,EAAUtN,MAAO,kBAAmBA,GAC3CsN,IAlGa,4BAqGtB,SAAe/L,GAAe,oCAANsH,EAAM,iCAANA,EAAM,mBAC5B,8DAAqBtH,GAArB,OAA8BsH,IAC9B,IAAM+oC,EAAsBrwC,EAAK4K,WAAWrJ,KAAI,SAAA+uC,GAAC,OAAI,EAAKC,gBAAgBD,MAC1EtwC,EAAKc,KAAOuvC,EAAoBpqC,OAAOjG,EAAKc,aACrCd,EAAK4K,aAzGQ,6BA4GtB,SAAgB4lC,EAAW7lC,EAAQunB,EAAaD,EAAS1uB,EAAektC,GACtErjC,KAAKsjC,YAAY/lC,EAAQunB,EAAaD,EAAS1uB,EAAektC,EAAmB,eAAe,GAE5F9lC,EAAOgmC,iBACThmC,EAAOlM,MAAMkyC,eAAiBhmC,EAAOgmC,sBAC9BhmC,EAAOgmC,gBAGhBH,EAAU1vC,KAAKsB,KAAKuI,KApHA,mCAuHtB,WAA+B,6BAANrD,EAAM,yBAANA,EAAM,gBAC7B,IAAMtH,GAAI,6EAAkCsH,IAE5C,MAAkB,gBAAdtH,EAAKsW,MAA0BlJ,KAAKue,gBAAgB,SAAU,iBACzDve,KAAKwjC,sCAAsC5wC,GAG7CA,IA9Ha,mDAiItB,SAAsCA,GACpC,IAAMsI,EAAO,EAAH,kDAA0BtI,GAKpC,cAJAA,EAAOA,GACK6J,GACZ7J,EAAKsI,KAAOA,EACZtI,EAAKsW,KAAO,oBACLtW,IAvIa,2BA0ItB,SAAcA,GACZ,OAAKoN,KAAKue,gBAAgB,SAAU,iBAIf,sBAAd3rB,EAAKsW,KAHV,iDAA2BtW,KA5IT,8BAkJtB,SAAiBA,GACf,OAAKoN,KAAKue,gBAAgB,SAAU,iBAI7B3rB,EAAKsI,KAHV,oDAA8BtI,KApJZ,0BA0JtB,SAAavB,EAAO6X,GAClB,IAAMtW,EAAO,EAAH,8CAAsBvB,EAAO6X,GAGvC,OAFAtW,EAAK+vC,IAAM/vC,EAAKoyB,MAAM2d,WACf/vC,EAAKoyB,MACLpyB,IA9Ja,+BAiKtB,SAAkBA,EAAM6wC,GAAmC,IAAlBC,EAAkB,wDACzD,qDAAwB9wC,EAAM6wC,EAAiBC,GAC/C9wC,EAAKpB,WAAgC,mBAAnBoB,EAAKc,KAAKwV,OAnKR,yBAsKtB,SAAYtW,EAAMkyB,EAAaD,EAAS1uB,EAAewtC,EAAkBz6B,GAA4B,IAAtB06B,EAAsB,wDAC/FC,EAAW7jC,KAAK8jC,YAYpB,OAXAD,EAASztC,KAAOxD,EAAKwD,MACrBytC,EAAW,EAAH,6CAAqBA,EAAU/e,EAAaD,EAAS1uB,EAAewtC,EAAkBz6B,EAAM06B,IAC3F16B,KAAO,4BACT26B,EAASztC,KAChBxD,EAAKvB,MAAQwyC,EAEA,uBAAT36B,IACFtW,EAAKoJ,UAAW,GAGlBkN,EAAO,mBACAlJ,KAAK+jC,WAAWnxC,EAAMsW,KAnLT,gCAsLtB,WAA4B,6BAANhP,EAAM,yBAANA,EAAM,gBAC1B,IAAM8pC,GAAY,0EAA+B9pC,IAMjD,OAJI8F,KAAKue,gBAAgB,SAAU,mBACjCylB,EAAa96B,KAAO,sBAGf86B,IA7La,uCAgMtB,WAAmC,6BAAN9pC,EAAM,yBAANA,EAAM,gBACjC,IAAM8pC,GAAY,iFAAsC9pC,IAOxD,OALI8F,KAAKue,gBAAgB,SAAU,mBACjCylB,EAAa96B,KAAO,qBACpB86B,EAAahoC,UAAW,GAGnBgoC,IAxMa,+BA2MtB,SAAkB7J,EAAMrV,EAAaD,EAASof,EAAWC,GACvD,IAAMtxC,EAAO,EAAH,mDAA2BunC,EAAMrV,EAAaD,EAASof,EAAWC,GAQ5E,OANItxC,IACFA,EAAKsW,KAAO,WACM,WAAdtW,EAAKwD,OAAmBxD,EAAKwD,KAAO,QACxCxD,EAAKuxC,WAAY,GAGZvxC,IApNa,iCAuNtB,SAAoBunC,EAAMiK,EAAUnwB,EAAUgwB,EAAWxd,GACvD,IAAM7zB,EAAO,EAAH,qDAA6BunC,EAAMiK,EAAUnwB,EAAUgwB,EAAWxd,GAO5E,OALI7zB,IACFA,EAAKwD,KAAO,OACZxD,EAAKsW,KAAO,YAGPtW,IA/Na,0BAkOtB,SAAaA,EAAMyxC,GACjB,OAAY,MAARzxC,GAAgBoN,KAAK4iC,iBAAiBhwC,GACjCoN,KAAKskC,aAAa1xC,EAAKvB,MAAOgzC,GAGvC,gDAA0BzxC,EAAMyxC,KAvOZ,0BA0OtB,SAAazxC,GAAqB,IAAf2xC,EAAe,wDAChC,OAAY,MAAR3xC,GAAgBoN,KAAK4iC,iBAAiBhwC,IACxCoN,KAAKwkC,aAAa5xC,EAAKvB,MAAOkzC,GACvB3xC,GAGT,gDAA0BA,EAAM2xC,KAhPZ,8CAmPtB,SAAiCpK,GAC/B,GAAkB,QAAdA,EAAK/jC,MAAgC,QAAd+jC,EAAK/jC,KAC9B4J,KAAKuY,MAAM4hB,EAAKngC,IAAImN,MAAO0C,EAAcyF,yBACpC,GAAI6qB,EAAK58B,OACdyC,KAAKuY,MAAM4hB,EAAKngC,IAAImN,MAAO0C,EAAc0F,sBACpC,8BALiCrV,EAKjC,iCALiCA,EAKjC,mBACL,gFAAuCigC,GAAvC,OAAgDjgC,OAzP9B,kCA6PtB,SAAqBtH,EAAM6xC,GAGzB,GAFA,wDAA2B7xC,EAAM6xC,GAER,WAArB7xC,EAAKoF,OAAOkR,KAAmB,CAK/B,IAAIw7B,EADN,GAHA9xC,EAAKsW,KAAO,mBACZtW,EAAK2T,OAAS3T,EAAKiI,UAAU,GAEzBmF,KAAKwJ,UAAU,oBAGjB5W,EAAK+xC,WAAuD,OAAzCD,EAAmB9xC,EAAKiI,UAAU,IAAc6pC,EAAmB,YAGjF9xC,EAAKiI,iBACLjI,EAAKoF,OAGd,OAAOpF,IA9Qa,mCAiRtB,SAAsBA,GACF,qBAAdA,EAAKsW,MAIT,yDAA4BtW,KAtRR,yBAyRtB,SAAYA,GAGV,OAFA,+CAAkBA,GAEVA,EAAKsW,MACX,IAAK,uBACHtW,EAAKgyC,SAAW,KAChB,MAEF,IAAK,yBAC4B,IAA3BhyC,EAAKuW,WAAWpQ,QAA4C,6BAA5BnG,EAAKuW,WAAW,GAAGD,OACrDtW,EAAKsW,KAAO,uBACZtW,EAAKgyC,SAAWhyC,EAAKuW,WAAW,GAAGy7B,gBAC5BhyC,EAAKuW,YAMlB,OAAOvW,IA3Sa,4BA8StB,SAAeiyC,EAAMT,EAAUnwB,EAAU6wB,EAAS38B,GAChD,IAAMvV,EAAO,EAAH,gDAAwBiyC,EAAMT,EAAUnwB,EAAU6wB,EAAS38B,GAErE,GAAIA,EAAM48B,qBAKR,GAJkB,6BAAdnyC,EAAKsW,MAAqD,2BAAdtW,EAAKsW,OACnDtW,EAAKsW,KAAOtW,EAAKsW,KAAK87B,UAAU,IAG9B78B,EAAM88B,KAAM,CACd,IAAMC,EAAQllC,KAAKmlC,gBAAgBvyC,GAEnC,OADAsyC,EAAM1zC,WAAaoB,EACZoN,KAAK+jC,WAAWmB,EAAO,wBAET,qBAAdtyC,EAAKsW,MAA6C,mBAAdtW,EAAKsW,OAClDtW,EAAK6xC,UAAW,GAGlB,OAAO7xC,IA/Ta,sCAkUtB,SAAyBA,GAKvB,MAJkB,oBAAdA,EAAKsW,OACPtW,EAAOA,EAAKpB,YAGd,4DAAsCoB,KAvUlB,6BA0UtB,SAAgBA,GACd,MAAqB,oBAAdA,EAAKsW,OA3UQ,8BA8UtB,SAAiBtW,GACf,MAAqB,aAAdA,EAAKsW,MAAqC,SAAdtW,EAAKwD,OAAoBxD,EAAK2K,SA/U7C,4BAkVtB,SAAe3K,GACb,OAAOA,EAAK2K,QAAwB,QAAd3K,EAAKwD,MAAgC,QAAdxD,EAAKwD,SAnV9B,GAAkByH,IA8uSxCunC,IAl6GS,SAAAvnC,GAAU,iIACnB,WAIE,IAHA,IAAIokB,EAAM,GACNC,EAAaliB,KAAKmI,MAAM6L,MAEnB,CACP,GAAIhU,KAAKmI,MAAM6L,KAAOhU,KAAKjH,OACzB,MAAMiH,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAOs1B,GAAUM,wBAG/C,IAAMpf,EAAK3d,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,KAE5C,OAAQ2J,GACN,KAAK,GACL,KAAK,IACH,OAAI3d,KAAKmI,MAAM6L,MAAQhU,KAAKmI,MAAMhB,MACrB,KAAPwW,GAAa3d,KAAKmI,MAAM4S,eACxB/a,KAAKmI,MAAM6L,IACNhU,KAAKqd,YAAY1c,EAAQ+8B,cAGlC,oDAA8B/f,IAGhCsE,GAAOjiB,KAAKgJ,MAAMxO,MAAM0nB,EAAYliB,KAAKmI,MAAM6L,KACxChU,KAAKqd,YAAY1c,EAAQ88B,QAASxb,IAE3C,KAAK,GACHA,GAAOjiB,KAAKgJ,MAAMxO,MAAM0nB,EAAYliB,KAAKmI,MAAM6L,KAC/CiO,GAAOjiB,KAAKqlC,gBACZnjB,EAAaliB,KAAKmI,MAAM6L,IACxB,MAEF,KAAK,GACL,KAAK,IAEL,QACMxN,EAAUmX,IACZsE,GAAOjiB,KAAKgJ,MAAMxO,MAAM0nB,EAAYliB,KAAKmI,MAAM6L,KAC/CiO,GAAOjiB,KAAKslC,gBAAe,GAC3BpjB,EAAaliB,KAAKmI,MAAM6L,OAEtBhU,KAAKmI,MAAM6L,QA1CJ,4BAiDnB,SAAeuxB,GACb,IACItjB,EADEtE,EAAK3d,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,KAa5C,QAXEhU,KAAKmI,MAAM6L,IAEF,KAAP2J,GAAuD,KAA1C3d,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,QAC9ChU,KAAKmI,MAAM6L,IACbiO,EAAMsjB,EAAgB,KAAO,QAE7BtjB,EAAM/kB,OAAOsZ,aAAamH,KAG1B3d,KAAKmI,MAAM0R,QACb7Z,KAAKmI,MAAMsM,UAAYzU,KAAKmI,MAAM6L,IAC3BiO,IA/DU,2BAkEnB,SAAcD,GAIZ,IAHA,IAAIC,EAAM,GACNC,IAAeliB,KAAKmI,MAAM6L,MAErB,CACP,GAAIhU,KAAKmI,MAAM6L,KAAOhU,KAAKjH,OACzB,MAAMiH,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAcoJ,oBAGnD,IAAM0K,EAAK3d,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,KAC5C,GAAI2J,IAAOqE,EAAO,MAEP,KAAPrE,GACFsE,GAAOjiB,KAAKgJ,MAAMxO,MAAM0nB,EAAYliB,KAAKmI,MAAM6L,KAC/CiO,GAAOjiB,KAAKqlC,gBACZnjB,EAAaliB,KAAKmI,MAAM6L,KACfxN,EAAUmX,IACnBsE,GAAOjiB,KAAKgJ,MAAMxO,MAAM0nB,EAAYliB,KAAKmI,MAAM6L,KAC/CiO,GAAOjiB,KAAKslC,gBAAe,GAC3BpjB,EAAaliB,KAAKmI,MAAM6L,OAEtBhU,KAAKmI,MAAM6L,IAKjB,OADAiO,GAAOjiB,KAAKgJ,MAAMxO,MAAM0nB,EAAYliB,KAAKmI,MAAM6L,OACxChU,KAAKqd,YAAY1c,EAAQK,OAAQihB,KA5FvB,2BA+FnB,WAOE,IANA,IAEIujB,EAFA7lB,EAAM,GACN8lB,EAAQ,EAER9nB,EAAK3d,KAAKgJ,MAAMhJ,KAAKmI,MAAM6L,KACzBowB,IAAapkC,KAAKmI,MAAM6L,IAEvBhU,KAAKmI,MAAM6L,IAAMhU,KAAKjH,QAAU0sC,IAAU,IAAI,CAGnD,GAAW,OAFX9nB,EAAK3d,KAAKgJ,MAAMhJ,KAAKmI,MAAM6L,QAEX,CACC,MAAX2L,EAAI,GACS,MAAXA,EAAI,IACNA,EAAMA,EAAI6C,OAAO,GAEb+Z,GAAWhmB,KAAKoJ,KAClB6lB,EAAStoC,OAAOwiB,cAAciC,SAAShC,EAAK,QAG9CA,EAAMA,EAAI6C,OAAO,GAEbga,GAAejmB,KAAKoJ,KACtB6lB,EAAStoC,OAAOwiB,cAAciC,SAAShC,EAAK,OAIhD6lB,EAAS9Y,GAAS/M,GAGpB,MAGFA,GAAOhC,EAGT,OAAK6nB,IACHxlC,KAAKmI,MAAM6L,IAAMowB,EACV,OApIQ,yBA0InB,WACE,IAAIzmB,EACExW,EAAQnH,KAAKmI,MAAM6L,IAEzB,GACE2J,EAAK3d,KAAKgJ,MAAMC,aAAajJ,KAAKmI,MAAM6L,WACjCyC,EAAiBkH,IAAc,KAAPA,GAEjC,OAAO3d,KAAKqd,YAAY1c,EAAQ68B,QAASx9B,KAAKgJ,MAAMxO,MAAM2M,EAAOnH,KAAKmI,MAAM6L,QAlJ3D,gCAqJnB,WACE,IAAMphB,EAAOoN,KAAK8jC,YAWlB,OATI9jC,KAAKwU,MAAM7T,EAAQ68B,SACrB5qC,EAAKsI,KAAO8E,KAAKmI,MAAM9W,MACd2O,KAAKmI,MAAMe,KAAKjJ,QACzBrN,EAAKsI,KAAO8E,KAAKmI,MAAMe,KAAKjJ,QAE5BD,KAAKmlB,aAGPnlB,KAAKsZ,OACEtZ,KAAK+jC,WAAWnxC,EAAM,mBAjKZ,oCAoKnB,WACE,IAAMwxC,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SACtB/Y,EAAO8E,KAAK0lC,qBAClB,IAAK1lC,KAAKylB,IAAI9kB,EAAQsB,OAAQ,OAAO/G,EACrC,IAAMtI,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GAGxC,OAFArhB,EAAKuqC,UAAYjiC,EACjBtI,EAAKsI,KAAO8E,KAAK0lC,qBACV1lC,KAAK+jC,WAAWnxC,EAAM,uBA5KZ,iCA+KnB,WACE,IAAMwxC,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SACxBrhB,EAAOoN,KAAK2lC,yBAEhB,GAAkB,sBAAd/yC,EAAKsW,KACP,OAAOtW,EAGT,KAAOoN,KAAKylB,IAAI9kB,EAAQwB,MAAM,CAC5B,IAAMumB,EAAU1oB,KAAK4oB,YAAYwb,EAAUnwB,GAC3CyU,EAAQlxB,OAAS5E,EACjB81B,EAAQ3B,SAAW/mB,KAAK0lC,qBACxB9yC,EAAOoN,KAAK+jC,WAAWrb,EAAS,uBAGlC,OAAO91B,IA/LU,oCAkMnB,WACE,IAAIA,EAEJ,OAAQoN,KAAKmI,MAAMe,MACjB,KAAKvI,EAAQa,OASX,OARA5O,EAAOoN,KAAK8jC,YACZ9jC,KAAKsZ,OAGwB,wBAF7B1mB,EAAOoN,KAAK4lC,4BAA4BhzC,IAE/BpB,WAAW0X,MAClBlJ,KAAKuY,MAAM3lB,EAAKuU,MAAOs1B,GAAUC,kBAG5B9pC,EAET,KAAK+N,EAAQ+8B,YACb,KAAK/8B,EAAQK,OACX,OAAOhB,KAAK6lC,gBAEd,QACE,MAAM7lC,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAOs1B,GAAUK,wBAtNhC,qCA0NnB,WACE,IAAMlqC,EAAOoN,KAAK4oB,YAAY5oB,KAAKmI,MAAMkM,WAAYrU,KAAKmI,MAAMmM,eAChE,OAAOtU,KAAK6oB,aAAaj2B,EAAM,qBAAsBoN,KAAKmI,MAAMhB,MAAOnH,KAAKmI,MAAM8L,YA5NjE,iCA+NnB,SAAoBrhB,GAIlB,OAHAoN,KAAKsZ,OACL1mB,EAAKpB,WAAawO,KAAK8lC,kBACvB9lC,KAAK+lC,OAAOplC,EAAQgB,QACb3B,KAAK+jC,WAAWnxC,EAAM,oBAnOZ,yCAsOnB,SAA4BA,GAC1B,GAAIoN,KAAKwU,MAAM7T,EAAQgB,QACrB/O,EAAKpB,WAAawO,KAAKgmC,8BAClB,CACL,IAAMx0C,EAAawO,KAAK8lC,kBACxBlzC,EAAKpB,WAAaA,EAIpB,OADAwO,KAAK+lC,OAAOplC,EAAQgB,QACb3B,KAAK+jC,WAAWnxC,EAAM,4BA/OZ,+BAkPnB,WACE,IAAMA,EAAOoN,KAAK8jC,YAElB,OAAI9jC,KAAKylB,IAAI9kB,EAAQa,SACnBxB,KAAK+lC,OAAOplC,EAAQ4B,UACpB3P,EAAKyG,SAAW2G,KAAKimC,0BACrBjmC,KAAK+lC,OAAOplC,EAAQgB,QACb3B,KAAK+jC,WAAWnxC,EAAM,wBAG/BA,EAAKsI,KAAO8E,KAAK2lC,yBACjB/yC,EAAKvB,MAAQ2O,KAAKylB,IAAI9kB,EAAQkC,IAAM7C,KAAKkmC,yBAA2B,KAC7DlmC,KAAK+jC,WAAWnxC,EAAM,mBA9PZ,sCAiQnB,SAAyBwxC,EAAUnwB,GACjC,IAAMrhB,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GAExC,OAAIjU,KAAKwU,MAAM7T,EAAQg9B,YACrB39B,KAAK+lC,OAAOplC,EAAQg9B,WACb39B,KAAK+jC,WAAWnxC,EAAM,wBAG/BA,EAAKsI,KAAO8E,KAAKmmC,sBACVnmC,KAAKomC,gCAAgCxzC,MA1Q3B,6CA6QnB,SAAgCA,GAG9B,IAFA,IAAM+xC,EAAa,IAEX3kC,KAAKwU,MAAM7T,EAAQqD,SAAWhE,KAAKwU,MAAM7T,EAAQg9B,YACvDgH,EAAW3vC,KAAKgL,KAAKqmC,qBAMvB,OAHAzzC,EAAK+xC,WAAaA,EAClB/xC,EAAK0zC,YAActmC,KAAKylB,IAAI9kB,EAAQqD,OACpChE,KAAK+lC,OAAOplC,EAAQg9B,WACb39B,KAAK+jC,WAAWnxC,EAAM,uBAvRZ,sCA0RnB,SAAyBwxC,EAAUnwB,GACjC,IAAMrhB,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GAExC,OAAIjU,KAAKwU,MAAM7T,EAAQg9B,YACrB39B,KAAK+lC,OAAOplC,EAAQg9B,WACb39B,KAAK+jC,WAAWnxC,EAAM,wBAG/BA,EAAKsI,KAAO8E,KAAKmmC,sBACjBnmC,KAAK+lC,OAAOplC,EAAQg9B,WACb39B,KAAK+jC,WAAWnxC,EAAM,wBApSZ,+BAuSnB,SAAkBwxC,EAAUnwB,GAC1B,IAAMrhB,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GAClCsyB,EAAW,GACXC,EAAiBxmC,KAAKymC,yBAAyBrC,EAAUnwB,GAC3DyyB,EAAiB,KAErB,IAAKF,EAAeF,YAAa,CAC/BK,EAAU,OACR,OAAQ3mC,KAAKmI,MAAMe,MACjB,KAAKvI,EAAQ+8B,YAKX,GAJA0G,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SACtBjU,KAAKsZ,OAEDtZ,KAAKylB,IAAI9kB,EAAQqD,OAAQ,CAC3B0iC,EAAiB1mC,KAAK4mC,yBAAyBxC,EAAUnwB,GACzD,MAAM0yB,EAGRJ,EAASvxC,KAAKgL,KAAK6mC,kBAAkBzC,EAAUnwB,IAC/C,MAEF,KAAKtT,EAAQ88B,QACX8I,EAASvxC,KAAKgL,KAAK6lC,iBACnB,MAEF,KAAKllC,EAAQa,OAET,IAAM5O,EAAOoN,KAAK8jC,YAClB9jC,KAAKsZ,OAEDtZ,KAAKwU,MAAM7T,EAAQ4B,UACrBgkC,EAASvxC,KAAKgL,KAAK8mC,oBAAoBl0C,IAEvC2zC,EAASvxC,KAAKgL,KAAK4lC,4BAA4BhzC,IAGjD,MAGJ,QACE,MAAMoN,KAAKmlB,aAIb8X,GAAWuJ,KAAoBvJ,GAAWyJ,GAC5C1mC,KAAKuY,MAAMmuB,EAAev/B,MAAOs1B,GAAUG,4BACjCK,GAAWuJ,IAAmBvJ,GAAWyJ,GACnD1mC,KAAKuY,MAAMmuB,EAAev/B,MAAOs1B,GAAUE,yBAA0BO,GAAoBsJ,EAAetrC,OAC9F+hC,GAAWuJ,IAAoBvJ,GAAWyJ,IAChDxJ,GAAoBwJ,EAAexrC,QAAUgiC,GAAoBsJ,EAAetrC,OAClF8E,KAAKuY,MAAMmuB,EAAev/B,MAAOs1B,GAAUE,yBAA0BO,GAAoBsJ,EAAetrC,OAe9G,GAVI+hC,GAAWuJ,IACb5zC,EAAKm0C,gBAAkBP,EACvB5zC,EAAKo0C,gBAAkBN,IAEvB9zC,EAAK4zC,eAAiBA,EACtB5zC,EAAK8zC,eAAiBA,GAGxB9zC,EAAK2zC,SAAWA,EAEZvmC,KAAKklB,aAAa,KACpB,MAAMllB,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAOs1B,GAAUO,8BAG/C,OAAOC,GAAWuJ,GAAkBxmC,KAAK+jC,WAAWnxC,EAAM,eAAiBoN,KAAK+jC,WAAWnxC,EAAM,gBA7WhF,6BAgXnB,WACE,IAAMwxC,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SAE5B,OADAjU,KAAKsZ,OACEtZ,KAAK6mC,kBAAkBzC,EAAUnwB,KApXvB,2BAuXnB,SAAcwS,GACZ,OAAIzmB,KAAKwU,MAAM7T,EAAQ88B,SACdz9B,KAAKwiC,aAAaxiC,KAAKmI,MAAM9W,MAAO,WAClC2O,KAAKwU,MAAM7T,EAAQ+8B,aACrB19B,KAAKinC,kBACHjnC,KAAKklB,aAAa,MAAkD,KAA1CllB,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,MACpEhU,KAAKqd,YAAY1c,EAAQ+8B,aAClB19B,KAAKinC,mBAEZ,iDAA2BxgB,KAhYZ,kCAoYnB,SAAqBte,GACnB,IAAM++B,EAAiB,EAAH,sDAA8B/+B,GAElD,OADA++B,EAAe9sB,eAAiBjS,EAAMiS,eAC/B8sB,IAvYU,8BA0YnB,SAAiBzgC,GACf,GAAIzG,KAAKmI,MAAMiS,eAAgB,OAAO,EAAP,kDAA8B3T,GAC7D,IAAMqP,EAAU9V,KAAK2c,aAErB,GAAI7G,IAAYtgB,EAAM+nC,OACpB,OAAOv9B,KAAKmnC,eAGd,GAAIrxB,IAAYtgB,EAAM6nC,QAAUvnB,IAAYtgB,EAAM8nC,OAAQ,CACxD,GAAIhnB,EAAkB7P,GACpB,OAAOzG,KAAKonC,cAGd,GAAa,KAAT3gC,EAEF,QADEzG,KAAKmI,MAAM6L,IACNhU,KAAKqd,YAAY1c,EAAQg9B,WAGlC,IAAc,KAATl3B,GAAwB,KAATA,IAAgBqP,IAAYtgB,EAAM6nC,OACpD,OAAOr9B,KAAKqnC,cAAc5gC,GAI9B,OAAa,KAATA,GAAezG,KAAKmI,MAAM4S,aAA6D,KAA9C/a,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,MAChFhU,KAAKmI,MAAM6L,IACNhU,KAAKqd,YAAY1c,EAAQ+8B,cAGlC,oDAA8Bj3B,KAtab,2BAyanB,SAAc0X,GACZ,iDAAoBA,GACpB,MAGIne,KAAKmI,MAFP2N,EADF,EACEA,QACA5M,EAFF,EAEEA,KAGF,GAAIA,IAASvI,EAAQqD,OAASma,IAAaxd,EAAQ+8B,YACjD5nB,EAAQjN,QAAQ,EAAG,EAAGrT,EAAM8nC,QAC5Bt9B,KAAKmI,MAAM4S,aAAc,OACpB,GAAI7R,IAASvI,EAAQg9B,UAAW,CACrC,IAAM1b,EAAMnM,EAAQ9c,MAEhBipB,IAAQzsB,EAAM6nC,QAAUlf,IAAaxd,EAAQqD,OAASie,IAAQzsB,EAAM8nC,QACtExnB,EAAQ9c,MACRgH,KAAKmI,MAAM4S,YAAcjF,EAAQA,EAAQ/c,OAAS,KAAOvD,EAAM+nC,QAE/Dv9B,KAAKmI,MAAM4S,aAAc,OAElB7R,EAAKjJ,SAAYke,IAAaxd,EAAQwB,KAAOgc,IAAaxd,EAAQ0B,YAG3ErC,KAAKmI,MAAM4S,YAAc7R,EAAKzJ,WAF9BO,KAAKmI,MAAM4S,aAAc,MA7bV,GAAkBld,IAm6GrCypC,KA19MU,SAAAzpC,GAAU,qCACpB,aAAqB,2CAAN3D,EAAM,yBAANA,EAAM,uBACnB,+BAASA,KACJqtC,gBAAar1C,EAFC,EADD,yCAMpB,WACE,OAAOwnB,KAPW,8BAUpB,WACE,OAAO1Z,KAAKue,gBAAgB,OAAQ,QAA8B,SAApBve,KAAKunC,aAXjC,8BAcpB,WACE,QAASvnC,KAAKue,gBAAgB,OAAQ,WAfpB,yBAkBpB,SAAYrV,EAAMsS,GAOhB,OANItS,IAASvI,EAAQK,QAAUkI,IAASvI,EAAQqB,MAAQkH,IAASvI,EAAQiC,2BAC/C1Q,IAApB8N,KAAKunC,aACPvnC,KAAKunC,WAAa,MAItB,+CAAyBr+B,EAAMsS,KAzBb,wBA4BpB,SAAWvT,GACT,QAAwB/V,IAApB8N,KAAKunC,WAA0B,CACjC,IAAMC,EAAU/a,GAAkB9X,KAAK1M,EAAQ5W,OAE/C,GAAKm2C,EAAgB,GAAmB,SAAfA,EAAQ,GAC/BxnC,KAAKunC,WAAa,WACb,IAAmB,WAAfC,EAAQ,GAGjB,MAAM,IAAIpK,MAAM,0BAFhBp9B,KAAKunC,WAAa,eAMtB,qDAAwBt/B,KAzCN,sCA4CpB,SAAyBw/B,GACvB,IAAMC,EAAY1nC,KAAKmI,MAAM+R,OAC7Bla,KAAKmI,MAAM+R,QAAS,EACpBla,KAAK+lC,OAAO0B,GAAO9mC,EAAQsB,OAC3B,IAAMiH,EAAOlJ,KAAK2nC,gBAElB,OADA3nC,KAAKmI,MAAM+R,OAASwtB,EACbx+B,IAlDW,gCAqDpB,WACE,IAAMtW,EAAOoN,KAAK8jC,YACZ8D,EAAY5nC,KAAKmI,MAAMhB,MAQ7B,OAPAnH,KAAKsZ,OACLtZ,KAAK6nC,iBAAiB,UAElB7nC,KAAKmI,MAAM+L,aAAe0zB,EAAY,GACxC5nC,KAAKuY,MAAMqvB,EAAW1e,GAAWwC,oCAG/B1rB,KAAKylB,IAAI9kB,EAAQkB,SACnBjP,EAAKvB,MAAQ2O,KAAK8lC,kBAClB9lC,KAAK+lC,OAAOplC,EAAQmB,QACb9B,KAAK+jC,WAAWnxC,EAAM,sBAEtBoN,KAAK+jC,WAAWnxC,EAAM,uBApEb,kDAwEpB,WACE,IAAM80C,EAAY1nC,KAAKmI,MAAM+R,OAC7Bla,KAAKmI,MAAM+R,QAAS,EACpBla,KAAK+lC,OAAOplC,EAAQsB,OACpB,IAAIiH,EAAO,KACP4+B,EAAY,KAchB,OAZI9nC,KAAKwU,MAAM7T,EAAQmD,SACrB9D,KAAKmI,MAAM+R,OAASwtB,EACpBI,EAAY9nC,KAAK+nC,uBAEjB7+B,EAAOlJ,KAAK2nC,gBACZ3nC,KAAKmI,MAAM+R,OAASwtB,EAEhB1nC,KAAKwU,MAAM7T,EAAQmD,UACrBgkC,EAAY9nC,KAAK+nC,uBAId,CAAC7+B,EAAM4+B,KA3FI,mCA8FpB,SAAsBl1C,GAGpB,OAFAoN,KAAKsZ,OACLtZ,KAAKgoC,sBAAsBp1C,GAAM,GAC1BoN,KAAK+jC,WAAWnxC,EAAM,kBAjGX,sCAoGpB,SAAyBA,GACvBoN,KAAKsZ,OACL,IAAM7c,EAAK7J,EAAK6J,GAAKuD,KAAKioC,kBACpBC,EAAWloC,KAAK8jC,YAChBqE,EAAgBnoC,KAAK8jC,YAEvB9jC,KAAKklB,aAAa,KACpBgjB,EAAS3E,eAAiBvjC,KAAKooC,oCAE/BF,EAAS3E,eAAiB,KAG5BvjC,KAAK+lC,OAAOplC,EAAQkB,QACpB,IAAMwmC,EAAMroC,KAAKsoC,8BACjBJ,EAAS7yC,OAASgzC,EAAIhzC,OACtB6yC,EAASK,KAAOF,EAAIE,KACpBL,EAASloC,KAAOqoC,EAAI/iC,MACpBtF,KAAK+lC,OAAOplC,EAAQmB,QAjBS,MAkBW9B,KAAKwoC,uCAlBhB,SAwB7B,OANCN,EAASO,WAlBmB,KAkBP71C,EAAKk1C,UAlBE,KAmB7BK,EAAcO,eAAiB1oC,KAAK+jC,WAAWmE,EAAU,0BACzDzrC,EAAGisC,eAAiB1oC,KAAK+jC,WAAWoE,EAAe,kBACnDnoC,KAAK2oC,iBAAiBlsC,GACtBuD,KAAK4oC,YACL5oC,KAAKrN,MAAMk2C,YAAYj2C,EAAK6J,GAAGvB,KAx6EN4c,KAw6EkCllB,EAAK6J,GAAG0K,OAC5DnH,KAAK+jC,WAAWnxC,EAAM,qBA5HX,8BA+HpB,SAAiBA,EAAMk2C,GACrB,GAAI9oC,KAAKwU,MAAM7T,EAAQ6E,QACrB,OAAOxF,KAAK+oC,sBAAsBn2C,GAC7B,GAAIoN,KAAKwU,MAAM7T,EAAQgE,WAC5B,OAAO3E,KAAKgpC,yBAAyBp2C,GAChC,GAAIoN,KAAKwU,MAAM7T,EAAQsE,MAC5B,OAAOjF,KAAKipC,yBAAyBr2C,GAChC,GAAIoN,KAAK0lB,cAAc,UAC5B,OAAI1lB,KAAKwU,MAAM7T,EAAQwB,KACdnC,KAAKkpC,8BAA8Bt2C,IAEtCk2C,GACF9oC,KAAKuY,MAAMvY,KAAKmI,MAAM+L,aAAcgV,GAAWyB,qBAG1C3qB,KAAKmpC,uBAAuBv2C,IAEhC,GAAIoN,KAAKwlB,aAAa,QAC3B,OAAOxlB,KAAKopC,0BAA0Bx2C,GACjC,GAAIoN,KAAKwlB,aAAa,UAC3B,OAAOxlB,KAAKqpC,2BAA2Bz2C,GAClC,GAAIoN,KAAKwlB,aAAa,aAC3B,OAAOxlB,KAAKspC,0BAA0B12C,GACjC,GAAIoN,KAAKwU,MAAM7T,EAAQ+E,SAC5B,OAAO1F,KAAKupC,kCAAkC32C,EAAMk2C,GAEpD,MAAM9oC,KAAKmlB,eAzJK,sCA6JpB,SAAyBvyB,GAKvB,OAJAoN,KAAKsZ,OACL1mB,EAAK6J,GAAKuD,KAAKwpC,oCAAmC,GAClDxpC,KAAKrN,MAAMk2C,YAAYj2C,EAAK6J,GAAGvB,KAv9ElBuuC,EAu9EkC72C,EAAK6J,GAAG0K,OACvDnH,KAAK4oC,YACE5oC,KAAK+jC,WAAWnxC,EAAM,qBAlKX,oCAqKpB,SAAuBA,GAAM,WAC3BoN,KAAKrN,MAAMg1B,MAr/EK,GAu/EZ3nB,KAAKwU,MAAM7T,EAAQK,QACrBpO,EAAK6J,GAAKuD,KAAK6lC,gBAEfjzC,EAAK6J,GAAKuD,KAAKioC,kBAGjB,IAAMyB,EAAW92C,EAAKc,KAAOsM,KAAK8jC,YAC5BpwC,EAAOg2C,EAASh2C,KAAO,GAG7B,IAFAsM,KAAK+lC,OAAOplC,EAAQa,SAEZxB,KAAKwU,MAAM7T,EAAQgB,SAAS,CAClC,IAAI+nC,EAAW1pC,KAAK8jC,YAEhB9jC,KAAKwU,MAAM7T,EAAQgF,UACrB3F,KAAKsZ,OAEAtZ,KAAKwlB,aAAa,SAAYxlB,KAAKwU,MAAM7T,EAAQsF,UACpDjG,KAAKuY,MAAMvY,KAAKmI,MAAM+L,aAAcgV,GAAWuB,qCAGjDzqB,KAAK2pC,YAAYD,KAEjB1pC,KAAK6nC,iBAAiB,UAAW3e,GAAW8C,qCAC5C0d,EAAW1pC,KAAK4pC,iBAAiBF,GAAU,IAG7Ch2C,EAAKsB,KAAK00C,GAGZ1pC,KAAKrN,MAAMk3C,OACX7pC,KAAK+lC,OAAOplC,EAAQgB,QACpB3B,KAAK+jC,WAAW2F,EAAU,kBAC1B,IAAItzC,EAAO,KACP0zC,GAAkB,EAsBtB,OArBAp2C,EAAKmgB,SAAQ,SAAAk2B,IAzOjB,SAAwBA,GACtB,MAA4B,gCAArBA,EAAY7gC,MAA+D,6BAArB6gC,EAAY7gC,QAAyC6gC,EAAYC,aAAgD,cAAjCD,EAAYC,YAAY9gC,MAAyD,yBAAjC6gC,EAAYC,YAAY9gC,MAyO7M+gC,CAAeF,GAMa,yBAArBA,EAAY7gC,OACjB4gC,GACF,EAAKvxB,MAAMwxB,EAAY5iC,MAAO+hB,GAAWM,+BAG9B,OAATpzB,GACF,EAAKmiB,MAAMwxB,EAAY5iC,MAAO+hB,GAAWE,4BAG3ChzB,EAAO,WACP0zC,GAAkB,IAfL,aAAT1zC,GACF,EAAKmiB,MAAMwxB,EAAY5iC,MAAO+hB,GAAWE,4BAG3ChzB,EAAO,SAcXxD,EAAKwD,KAAOA,GAAQ,WACb4J,KAAK+jC,WAAWnxC,EAAM,mBA/NX,+CAkOpB,SAAkCA,EAAMk2C,GAGtC,GAFA9oC,KAAK+lC,OAAOplC,EAAQ+E,SAEhB1F,KAAKylB,IAAI9kB,EAAQ5O,UASnB,OARIiO,KAAKwU,MAAM7T,EAAQgE,YAAc3E,KAAKwU,MAAM7T,EAAQ6E,QACtD5S,EAAKo3C,YAAchqC,KAAK4pC,iBAAiB5pC,KAAK8jC,cAE9ClxC,EAAKo3C,YAAchqC,KAAK2nC,gBACxB3nC,KAAK4oC,aAGPh2C,EAAKtB,SAAU,EACR0O,KAAK+jC,WAAWnxC,EAAM,4BAE7B,GAAIoN,KAAKwU,MAAM7T,EAAQuE,SAAWlF,KAAKkqC,UAAYlqC,KAAKwlB,aAAa,SAAWxlB,KAAKwlB,aAAa,gBAAkBsjB,EAAc,CAChI,IAAMhpC,EAAQE,KAAKmI,MAAM9W,MACnB84C,EAAa9d,GAAkBvsB,GACrC,MAAME,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO+hB,GAAW6C,6BAA8BjsB,EAAOqqC,GAGrF,GAAInqC,KAAKwU,MAAM7T,EAAQsE,OAASjF,KAAKwU,MAAM7T,EAAQgE,YAAc3E,KAAKwU,MAAM7T,EAAQ6E,SAAWxF,KAAKwlB,aAAa,UAG/G,OAFA5yB,EAAKo3C,YAAchqC,KAAK4pC,iBAAiB5pC,KAAK8jC,aAC9ClxC,EAAKtB,SAAU,EACR0O,KAAK+jC,WAAWnxC,EAAM,4BACxB,GAAIoN,KAAKwU,MAAM7T,EAAQoD,OAAS/D,KAAKwU,MAAM7T,EAAQa,SAAWxB,KAAKwlB,aAAa,cAAgBxlB,KAAKwlB,aAAa,SAAWxlB,KAAKwlB,aAAa,UAUpJ,MAPkB,4BAFlB5yB,EAAOoN,KAAKoqC,YAAYx3C,IAEfsW,OACPtW,EAAKsW,KAAO,oBACZtW,EAAKtB,SAAU,SACRsB,EAAKy3C,YAGdz3C,EAAKsW,KAAO,UAAYtW,EAAKsW,KACtBtW,EAIX,MAAMoN,KAAKmlB,eAxQO,2CA2QpB,SAA8BvyB,GAK5B,OAJAoN,KAAKsZ,OACLtZ,KAAK6nC,iBAAiB,WACtBj1C,EAAK81C,eAAiB1oC,KAAKsqC,0BAC3BtqC,KAAK4oC,YACE5oC,KAAK+jC,WAAWnxC,EAAM,0BAhRX,uCAmRpB,SAA0BA,GAIxB,OAHAoN,KAAKsZ,OACLtZ,KAAKuqC,mBAAmB33C,GACxBA,EAAKsW,KAAO,mBACLtW,IAvRW,wCA0RpB,SAA2BA,GAIzB,OAHAoN,KAAKsZ,OACLtZ,KAAKwqC,oBAAoB53C,GAAM,GAC/BA,EAAKsW,KAAO,oBACLtW,IA9RW,uCAiSpB,SAA0BA,GAGxB,OAFAoN,KAAKsZ,OACLtZ,KAAKgoC,sBAAsBp1C,GACpBoN,KAAK+jC,WAAWnxC,EAAM,sBApSX,mCAuSpB,SAAsBA,GAAuB,IAAjB63C,EAAiB,wDAc3C,GAbA73C,EAAK6J,GAAKuD,KAAK0qC,+BAA+BD,GAAS,GACvDzqC,KAAKrN,MAAMk2C,YAAYj2C,EAAK6J,GAAGvB,KAAMuvC,EA/lFnBhB,GAFDA,EAimF4D72C,EAAK6J,GAAG0K,OAEjFnH,KAAKklB,aAAa,KACpBtyB,EAAK2wC,eAAiBvjC,KAAKooC,oCAE3Bx1C,EAAK2wC,eAAiB,KAGxB3wC,EAAK+3C,QAAU,GACf/3C,EAAKg4C,WAAa,GAClBh4C,EAAKi4C,OAAS,GAEV7qC,KAAKylB,IAAI9kB,EAAQ8E,UACnB,GACE7S,EAAK+3C,QAAQ31C,KAAKgL,KAAK8qC,oCACfL,GAAWzqC,KAAKylB,IAAI9kB,EAAQoB,QAGxC,GAAI/B,KAAKwlB,aAAa,UAAW,CAC/BxlB,KAAKsZ,OAEL,GACE1mB,EAAKi4C,OAAO71C,KAAKgL,KAAK8qC,mCACf9qC,KAAKylB,IAAI9kB,EAAQoB,QAG5B,GAAI/B,KAAKwlB,aAAa,cAAe,CACnCxlB,KAAKsZ,OAEL,GACE1mB,EAAKg4C,WAAW51C,KAAKgL,KAAK8qC,mCACnB9qC,KAAKylB,IAAI9kB,EAAQoB,QAG5BnP,EAAKc,KAAOsM,KAAK+qC,oBAAoB,CACnCC,YAAaP,EACbQ,YAAY,EACZC,aAAa,EACbC,WAAYV,EACZW,cAAc,MAhVE,uCAoVpB,WACE,IAAMx4C,EAAOoN,KAAK8jC,YASlB,OARAlxC,EAAK6J,GAAKuD,KAAKqrC,mCAEXrrC,KAAKklB,aAAa,KACpBtyB,EAAK2wC,eAAiBvjC,KAAKsrC,sCAE3B14C,EAAK2wC,eAAiB,KAGjBvjC,KAAK+jC,WAAWnxC,EAAM,sBA9VX,gCAiWpB,SAAmBA,GAEjB,OADAoN,KAAKgoC,sBAAsBp1C,GACpBoN,KAAK+jC,WAAWnxC,EAAM,0BAnWX,gCAsWpB,SAAmBmkB,GACJ,MAATA,GACF/W,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO+hB,GAAWuC,gCAxWxB,+BA4WpB,SAAkB1U,EAAM9C,EAAU+1B,GAC3B/gB,GAAc5rB,IAAI0Z,IACvB/W,KAAKuY,MAAMtE,EAAU+1B,EAAc9gB,GAAWG,mBAAqBH,GAAWsC,uBAAwBzU,KA9WpF,2CAiXpB,SAA8Bw0B,EAASvB,GAErC,OADAhqC,KAAKwrC,kBAAkBxrC,KAAKmI,MAAM9W,MAAO2O,KAAKmI,MAAMhB,MAAO6iC,GACpDhqC,KAAKioC,gBAAgBsD,KAnXV,gCAsXpB,SAAmB34C,GAYjB,OAXAA,EAAK6J,GAAKuD,KAAK0qC,+BAA8B,GAAO,GACpD1qC,KAAKrN,MAAMk2C,YAAYj2C,EAAK6J,GAAGvB,KAhrFduuC,EAgrFkC72C,EAAK6J,GAAG0K,OAEvDnH,KAAKklB,aAAa,KACpBtyB,EAAK2wC,eAAiBvjC,KAAKooC,oCAE3Bx1C,EAAK2wC,eAAiB,KAGxB3wC,EAAK64C,MAAQzrC,KAAK0rC,yBAAyB/qC,EAAQkC,IACnD7C,KAAK4oC,YACE5oC,KAAK+jC,WAAWnxC,EAAM,eAlYX,iCAqYpB,SAAoBA,EAAM+4C,GAwBxB,OAvBA3rC,KAAK6nC,iBAAiB,QACtBj1C,EAAK6J,GAAKuD,KAAK0qC,+BAA8B,GAAM,GACnD1qC,KAAKrN,MAAMk2C,YAAYj2C,EAAK6J,GAAGvB,KAhsFduuC,EAgsFkC72C,EAAK6J,GAAG0K,OAEvDnH,KAAKklB,aAAa,KACpBtyB,EAAK2wC,eAAiBvjC,KAAKooC,oCAE3Bx1C,EAAK2wC,eAAiB,KAGxB3wC,EAAKg5C,UAAY,KAEb5rC,KAAKwU,MAAM7T,EAAQsB,SACrBrP,EAAKg5C,UAAY5rC,KAAK0rC,yBAAyB/qC,EAAQsB,QAGzDrP,EAAKi5C,SAAW,KAEXF,IACH/4C,EAAKi5C,SAAW7rC,KAAK0rC,yBAAyB/qC,EAAQkC,KAGxD7C,KAAK4oC,YACE5oC,KAAK+jC,WAAWnxC,EAAM,gBA7ZX,oCAgapB,WAA+C,IAAxBk5C,EAAwB,wDACvCtjC,EAAYxI,KAAKmI,MAAMhB,MACvBvU,EAAOoN,KAAK8jC,YACZiI,EAAW/rC,KAAKgsC,oBAChBC,EAAQjsC,KAAKwpC,qCAcnB,OAbA52C,EAAKsI,KAAO+wC,EAAM/wC,KAClBtI,EAAKm5C,SAAWA,EAChBn5C,EAAKs5C,MAAQD,EAAMvD,eAEf1oC,KAAKwU,MAAM7T,EAAQkC,KACrB7C,KAAKylB,IAAI9kB,EAAQkC,IACjBjQ,EAAKtB,QAAU0O,KAAK2nC,iBAEhBmE,GACF9rC,KAAKuY,MAAM/P,EAAW0gB,GAAWwB,yBAI9B1qB,KAAK+jC,WAAWnxC,EAAM,mBAlbX,+CAqbpB,WACE,IAAM80C,EAAY1nC,KAAKmI,MAAM+R,OACvBtnB,EAAOoN,KAAK8jC,YAClBlxC,EAAKyC,OAAS,GACd2K,KAAKmI,MAAM+R,QAAS,EAEhBla,KAAKklB,aAAa,MAAQllB,KAAKwU,MAAM7T,EAAQ+8B,aAC/C19B,KAAKsZ,OAELtZ,KAAKmlB,aAGP,IAAIgnB,GAAkB,EAEtB,EAAG,CACD,IAAMC,EAAgBpsC,KAAKqsC,uBAAuBF,GAClDv5C,EAAKyC,OAAOL,KAAKo3C,GAEbA,EAAc96C,UAChB66C,GAAkB,GAGfnsC,KAAKklB,aAAa,MACrBllB,KAAK+lC,OAAOplC,EAAQoB,cAEd/B,KAAKklB,aAAa,MAI5B,OAFAllB,KAAKssC,iBAAiB,KACtBtsC,KAAKmI,MAAM+R,OAASwtB,EACb1nC,KAAK+jC,WAAWnxC,EAAM,8BAldX,iDAqdpB,WACE,IAAMA,EAAOoN,KAAK8jC,YACZ4D,EAAY1nC,KAAKmI,MAAM+R,OAC7BtnB,EAAKyC,OAAS,GACd2K,KAAKmI,MAAM+R,QAAS,EACpBla,KAAKssC,iBAAiB,KACtB,IAAMC,EAAwBvsC,KAAKmI,MAAMgS,mBAGzC,IAFAna,KAAKmI,MAAMgS,oBAAqB,GAExBna,KAAKklB,aAAa,MACxBtyB,EAAKyC,OAAOL,KAAKgL,KAAK2nC,iBAEjB3nC,KAAKklB,aAAa,MACrBllB,KAAK+lC,OAAOplC,EAAQoB,OAOxB,OAHA/B,KAAKmI,MAAMgS,mBAAqBoyB,EAChCvsC,KAAKssC,iBAAiB,KACtBtsC,KAAKmI,MAAM+R,OAASwtB,EACb1nC,KAAK+jC,WAAWnxC,EAAM,gCAzeX,0DA4epB,WACE,IAAMA,EAAOoN,KAAK8jC,YACZ4D,EAAY1nC,KAAKmI,MAAM+R,OAK7B,IAJAtnB,EAAKyC,OAAS,GACd2K,KAAKmI,MAAM+R,QAAS,EACpBla,KAAKssC,iBAAiB,MAEdtsC,KAAKklB,aAAa,MACxBtyB,EAAKyC,OAAOL,KAAKgL,KAAKwsC,wCAEjBxsC,KAAKklB,aAAa,MACrBllB,KAAK+lC,OAAOplC,EAAQoB,OAMxB,OAFA/B,KAAKssC,iBAAiB,KACtBtsC,KAAKmI,MAAM+R,OAASwtB,EACb1nC,KAAK+jC,WAAWnxC,EAAM,gCA7fX,oCAggBpB,WACE,IAAMA,EAAOoN,KAAK8jC,YAIlB,GAHA9jC,KAAK6nC,iBAAiB,aACtBj1C,EAAK+3C,QAAU,GAEX3qC,KAAKylB,IAAI9kB,EAAQ8E,UACnB,GACE7S,EAAK+3C,QAAQ31C,KAAKgL,KAAK8qC,mCAChB9qC,KAAKylB,IAAI9kB,EAAQoB,QAU5B,OAPAnP,EAAKc,KAAOsM,KAAK+qC,oBAAoB,CACnCC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAETprC,KAAK+jC,WAAWnxC,EAAM,6BAlhBX,wCAqhBpB,WACE,OAAOoN,KAAKwU,MAAM7T,EAAQC,MAAQZ,KAAKwU,MAAM7T,EAAQK,QAAUhB,KAAK6lC,gBAAkB7lC,KAAKioC,iBAAgB,KAthBzF,wCAyhBpB,SAA2Br1C,EAAM65C,EAAUV,GAczC,OAbAn5C,EAAKyB,OAASo4C,EAEVzsC,KAAK0sC,YAAYxjC,OAASvI,EAAQsB,OACpCrP,EAAK6J,GAAKuD,KAAK2sC,6BACf/5C,EAAKoH,IAAMgG,KAAK0rC,6BAEhB94C,EAAK6J,GAAK,KACV7J,EAAKoH,IAAMgG,KAAK2nC,iBAGlB3nC,KAAK+lC,OAAOplC,EAAQW,UACpB1O,EAAKvB,MAAQ2O,KAAK0rC,2BAClB94C,EAAKm5C,SAAWA,EACT/rC,KAAK+jC,WAAWnxC,EAAM,uBAviBX,6CA0iBpB,SAAgCA,EAAM65C,GAoBpC,OAnBA75C,EAAKyB,OAASo4C,EACd75C,EAAK6J,GAAKuD,KAAK2sC,6BACf3sC,KAAK+lC,OAAOplC,EAAQW,UACpBtB,KAAK+lC,OAAOplC,EAAQW,UAEhBtB,KAAKklB,aAAa,MAAQllB,KAAKwU,MAAM7T,EAAQkB,SAC/CjP,EAAK2K,QAAS,EACd3K,EAAK6xC,UAAW,EAChB7xC,EAAKvB,MAAQ2O,KAAK4sC,6BAA6B5sC,KAAK4oB,YAAYh2B,EAAKuU,MAAOvU,EAAKsV,IAAIf,UAErFvU,EAAK2K,QAAS,EAEVyC,KAAKylB,IAAI9kB,EAAQyB,YACnBxP,EAAK6xC,UAAW,GAGlB7xC,EAAKvB,MAAQ2O,KAAK0rC,4BAGb1rC,KAAK+jC,WAAWnxC,EAAM,4BA9jBX,0CAikBpB,SAA6BA,GAqB3B,IApBAA,EAAKyC,OAAS,GACdzC,EAAK21C,KAAO,KACZ31C,EAAK2wC,eAAiB,KACtB3wC,EAAKoN,KAAO,KAERA,KAAKklB,aAAa,OACpBtyB,EAAK2wC,eAAiBvjC,KAAKooC,qCAG7BpoC,KAAK+lC,OAAOplC,EAAQkB,QAEhB7B,KAAKwU,MAAM7T,EAAQ2E,SACrB1S,EAAKoN,KAAOA,KAAK6sC,4BAA2B,GAC5Cj6C,EAAKoN,KAAK9E,KAAO,KAEZ8E,KAAKwU,MAAM7T,EAAQmB,SACtB9B,KAAK+lC,OAAOplC,EAAQoB,SAIhB/B,KAAKwU,MAAM7T,EAAQmB,UAAY9B,KAAKwU,MAAM7T,EAAQ4B,WACxD3P,EAAKyC,OAAOL,KAAKgL,KAAK6sC,4BAA2B,IAE5C7sC,KAAKwU,MAAM7T,EAAQmB,SACtB9B,KAAK+lC,OAAOplC,EAAQoB,OAUxB,OANI/B,KAAKylB,IAAI9kB,EAAQ4B,YACnB3P,EAAK21C,KAAOvoC,KAAK6sC,4BAA2B,IAG9C7sC,KAAK+lC,OAAOplC,EAAQmB,QACpBlP,EAAK61C,WAAazoC,KAAK0rC,2BAChB1rC,KAAK+jC,WAAWnxC,EAAM,4BApmBX,6CAumBpB,SAAgCA,EAAM65C,GACpC,IAAMK,EAAY9sC,KAAK8jC,YAGvB,OAFAlxC,EAAKyB,OAASo4C,EACd75C,EAAKvB,MAAQ2O,KAAK4sC,6BAA6BE,GACxC9sC,KAAK+jC,WAAWnxC,EAAM,4BA3mBX,iCA8mBpB,YAMG,IALDo4C,EAKC,EALDA,YACAC,EAIC,EAJDA,WACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,WACAC,EACC,EADDA,aAEM1D,EAAY1nC,KAAKmI,MAAM+R,OAC7Bla,KAAKmI,MAAM+R,QAAS,EACpB,IAKI6yB,EACAC,EANExkC,EAAYxI,KAAK8jC,YACvBt7B,EAAUykC,eAAiB,GAC3BzkC,EAAUvO,WAAa,GACvBuO,EAAU0kC,SAAW,GACrB1kC,EAAU2kC,cAAgB,GAG1B,IAAIC,GAAU,EAcd,IAZInC,GAAcjrC,KAAKwU,MAAM7T,EAAQc,YACnCzB,KAAK+lC,OAAOplC,EAAQc,WACpBsrC,EAAWpsC,EAAQiB,UACnBorC,GAAQ,IAERhtC,KAAK+lC,OAAOplC,EAAQa,QACpBurC,EAAWpsC,EAAQgB,OACnBqrC,GAAQ,GAGVxkC,EAAUwkC,MAAQA,GAEVhtC,KAAKwU,MAAMu4B,IAAW,CAC5B,IAAIN,GAAW,EACXY,EAAa,KACbC,EAAe,KACb16C,EAAOoN,KAAK8jC,YAElB,GAAIqH,GAAcnrC,KAAKwlB,aAAa,SAAU,CAC5C,IAAMknB,EAAY1sC,KAAK0sC,YAEnBA,EAAUxjC,OAASvI,EAAQsB,OAASyqC,EAAUxjC,OAASvI,EAAQyB,WACjEpC,KAAKsZ,OACL+zB,EAAartC,KAAKmI,MAAMhB,MACxB6jC,GAAc,GAIlB,GAAIA,GAAehrC,KAAKwlB,aAAa,UAAW,CAC9C,IAAMknB,EAAY1sC,KAAK0sC,YAEnBA,EAAUxjC,OAASvI,EAAQsB,OAASyqC,EAAUxjC,OAASvI,EAAQyB,WACjEpC,KAAKsZ,OACLmzB,GAAW,GAIf,IAAMV,EAAW/rC,KAAKgsC,oBAEtB,GAAIhsC,KAAKylB,IAAI9kB,EAAQQ,UACD,MAAdksC,GACFrtC,KAAKmlB,WAAWkoB,GAGdrtC,KAAKylB,IAAI9kB,EAAQQ,WACf4qC,GACF/rC,KAAKmlB,WAAW4mB,EAAS5kC,OAG3BqB,EAAU2kC,cAAcn4C,KAAKgL,KAAKutC,gCAAgC36C,EAAM65C,KAExEjkC,EAAU0kC,SAASl4C,KAAKgL,KAAKwtC,2BAA2B56C,EAAM65C,EAAUV,SAErE,GAAI/rC,KAAKwU,MAAM7T,EAAQkB,SAAW7B,KAAKklB,aAAa,KACvC,MAAdmoB,GACFrtC,KAAKmlB,WAAWkoB,GAGdtB,GACF/rC,KAAKmlB,WAAW4mB,EAAS5kC,OAG3BqB,EAAUykC,eAAej4C,KAAKgL,KAAKytC,gCAAgC76C,EAAM65C,QACpE,CACL,IAAIr2C,EAAO,OAEX,GAAI4J,KAAKwlB,aAAa,QAAUxlB,KAAKwlB,aAAa,OAAQ,CACxD,IAAMknB,EAAY1sC,KAAK0sC,YAEnBA,EAAUxjC,OAASvI,EAAQzF,MAAQwxC,EAAUxjC,OAASvI,EAAQK,QAAU0rC,EAAUxjC,OAASvI,EAAQC,MACrGxK,EAAO4J,KAAKmI,MAAM9W,MAClB2O,KAAKsZ,QAIT,IAAMo0B,EAAgB1tC,KAAK2tC,4BAA4B/6C,EAAM65C,EAAUY,EAAYtB,EAAU31C,EAAM80C,EAA6B,MAAhBE,EAAuBA,GAAgB4B,GAEjI,OAAlBU,GACFN,GAAU,EACVE,EAAettC,KAAKmI,MAAM+L,cAE1B1L,EAAUvO,WAAWjF,KAAK04C,GAI9B1tC,KAAK4tC,2BAEDN,GAAiBttC,KAAKwU,MAAM7T,EAAQgB,SAAY3B,KAAKwU,MAAM7T,EAAQiB,YACrE5B,KAAKuY,MAAM+0B,EAAcpkB,GAAWqC,mCAIxCvrB,KAAK+lC,OAAOgH,GAER7B,IACF1iC,EAAU4kC,QAAUA,GAGtB,IAAMnrB,EAAMjiB,KAAK+jC,WAAWv7B,EAAW,wBAEvC,OADAxI,KAAKmI,MAAM+R,OAASwtB,EACbzlB,IApuBW,yCAuuBpB,SAA4BrvB,EAAM65C,EAAUY,EAAYtB,EAAU31C,EAAM80C,EAAaE,GACnF,GAAIprC,KAAKylB,IAAI9kB,EAAQ4B,UAGnB,OAFuBvC,KAAKwU,MAAM7T,EAAQoB,QAAU/B,KAAKwU,MAAM7T,EAAQqB,OAAShC,KAAKwU,MAAM7T,EAAQgB,SAAW3B,KAAKwU,MAAM7T,EAAQiB,YAG1HspC,EAEOE,GACVprC,KAAKuY,MAAMvY,KAAKmI,MAAM+L,aAAcgV,GAAWoB,oBAF/CtqB,KAAKuY,MAAMvY,KAAKmI,MAAM+L,aAAcgV,GAAWqB,wBAK7CwhB,GACF/rC,KAAKuY,MAAMwzB,EAAS5kC,MAAO+hB,GAAWsB,iBAGjC,OAGJ0gB,GACHlrC,KAAKuY,MAAMvY,KAAKmI,MAAM+L,aAAcgV,GAAWyC,sBAG/B,MAAd0hB,GACFrtC,KAAKmlB,WAAWkoB,GAGdtB,GACF/rC,KAAKuY,MAAMwzB,EAAS5kC,MAAO+hB,GAAW6B,gBAGxCn4B,EAAKyG,SAAW2G,KAAK2nC,gBACd3nC,KAAK+jC,WAAWnxC,EAAM,6BAE7BA,EAAKoH,IAAMgG,KAAK2sC,6BAChB/5C,EAAKyB,OAASo4C,EACd75C,EAAKi7C,MAAsB,MAAdR,EACbz6C,EAAKwD,KAAOA,EACZ,IAAIquC,GAAW,EAmCf,OAjCIzkC,KAAKklB,aAAa,MAAQllB,KAAKwU,MAAM7T,EAAQkB,SAC/CjP,EAAK2K,QAAS,EAEI,MAAd8vC,GACFrtC,KAAKmlB,WAAWkoB,GAGdtB,GACF/rC,KAAKmlB,WAAW4mB,EAAS5kC,OAG3BvU,EAAKvB,MAAQ2O,KAAK4sC,6BAA6B5sC,KAAK4oB,YAAYh2B,EAAKuU,MAAOvU,EAAKsV,IAAIf,QAExE,QAAT/Q,GAA2B,QAATA,GACpB4J,KAAK8tC,4BAA4Bl7C,IAG9Bs4C,GAAiC,gBAAlBt4C,EAAKoH,IAAIkB,MAA0BtI,EAAKvB,MAAM2O,MAChEA,KAAKuY,MAAM3lB,EAAKvB,MAAM2O,KAAKmH,MAAO+hB,GAAW+B,gCAGlC,SAAT70B,GAAiB4J,KAAKmlB,aAC1BvyB,EAAK2K,QAAS,EAEVyC,KAAKylB,IAAI9kB,EAAQyB,YACnBqiC,GAAW,GAGb7xC,EAAKvB,MAAQ2O,KAAK0rC,2BAClB94C,EAAKm5C,SAAWA,GAGlBn5C,EAAK6xC,SAAWA,EACTzkC,KAAK+jC,WAAWnxC,EAAM,wBA/yBb,yCAmzBpB,SAA4Bm0B,GAC1B,IAAMgnB,EAA+B,QAAlBhnB,EAAS3wB,KAAiB,EAAI,EAC3C+Q,EAAQ4f,EAAS5f,MACjBpO,EAASguB,EAAS11B,MAAMgE,OAAO0D,QAAUguB,EAAS11B,MAAMk3C,KAAO,EAAI,GAErExhB,EAAS11B,MAAM2O,MACjBA,KAAKuY,MAAMwO,EAAS11B,MAAM2O,KAAKmH,MAAyB,QAAlB4f,EAAS3wB,KAAiB8yB,GAAWkB,0BAA4BlB,GAAW4B,2BAGhH/xB,IAAWg1C,IACS,QAAlBhnB,EAAS3wB,KACX4J,KAAKuY,MAAMpR,EAAO0C,EAAcU,gBAEhCvK,KAAKuY,MAAMpR,EAAO0C,EAAcW,iBAId,QAAlBuc,EAAS3wB,MAAkB2wB,EAAS11B,MAAMk3C,MAC5CvoC,KAAKuY,MAAMpR,EAAO0C,EAAcY,0BAr0BhB,qCAy0BpB,WACOzK,KAAKylB,IAAI9kB,EAAQqB,OAAUhC,KAAKylB,IAAI9kB,EAAQoB,QAAW/B,KAAKwU,MAAM7T,EAAQgB,SAAY3B,KAAKwU,MAAM7T,EAAQiB,YAC5G5B,KAAKmlB,eA30BW,8CA+0BpB,SAAiCif,EAAUnwB,EAAUxX,GACnD2nC,EAAWA,GAAYpkC,KAAKmI,MAAMhB,MAClC8M,EAAWA,GAAYjU,KAAKmI,MAAM8L,SAGlC,IAFA,IAAIrhB,EAAO6J,GAAMuD,KAAK0qC,+BAA8B,GAE7C1qC,KAAKylB,IAAI9kB,EAAQwB,MAAM,CAC5B,IAAM6rC,EAAQhuC,KAAK4oB,YAAYwb,EAAUnwB,GACzC+5B,EAAMC,cAAgBr7C,EACtBo7C,EAAMvxC,GAAKuD,KAAK0qC,+BAA8B,GAC9C93C,EAAOoN,KAAK+jC,WAAWiK,EAAO,2BAGhC,OAAOp7C,IA31BW,kCA81BpB,SAAqBwxC,EAAUnwB,EAAUxX,GACvC,IAAM7J,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GAQxC,OAPArhB,EAAK2wC,eAAiB,KACtB3wC,EAAK6J,GAAKuD,KAAKqrC,iCAAiCjH,EAAUnwB,EAAUxX,GAEhEuD,KAAKklB,aAAa,OACpBtyB,EAAK2wC,eAAiBvjC,KAAKsrC,uCAGtBtrC,KAAK+jC,WAAWnxC,EAAM,2BAv2BX,iCA02BpB,WACE,IAAMA,EAAOoN,KAAK8jC,YAGlB,OAFA9jC,KAAK+lC,OAAOplC,EAAQsF,SACpBrT,EAAKyG,SAAW2G,KAAKkuC,uBACdluC,KAAK+jC,WAAWnxC,EAAM,0BA92BX,gCAi3BpB,WACE,IAAMA,EAAOoN,KAAK8jC,YAIlB,IAHAlxC,EAAK4C,MAAQ,GACbwK,KAAK+lC,OAAOplC,EAAQQ,UAEbnB,KAAKmI,MAAM6L,IAAMhU,KAAKjH,SAAWiH,KAAKwU,MAAM7T,EAAQW,YACzD1O,EAAK4C,MAAMR,KAAKgL,KAAK2nC,kBACjB3nC,KAAKwU,MAAM7T,EAAQW,YACvBtB,KAAK+lC,OAAOplC,EAAQoB,OAItB,OADA/B,KAAK+lC,OAAOplC,EAAQW,UACbtB,KAAK+jC,WAAWnxC,EAAM,yBA73BX,wCAg4BpB,SAA2Bu7C,GACzB,IAAIjzC,EAAO,KACPupC,GAAW,EACXiE,EAAiB,KACf91C,EAAOoN,KAAK8jC,YACZsK,EAAKpuC,KAAK0sC,YACV2B,EAASruC,KAAKmI,MAAMe,OAASvI,EAAQ2E,MAyB3C,OAvBI8oC,EAAGllC,OAASvI,EAAQsB,OAASmsC,EAAGllC,OAASvI,EAAQyB,UAC/CisC,IAAWF,GACbnuC,KAAKuY,MAAM3lB,EAAKuU,MAAO+hB,GAAWiC,sBAGpCjwB,EAAO8E,KAAKioC,gBAAgBoG,GAExBruC,KAAKylB,IAAI9kB,EAAQyB,YACnBqiC,GAAW,EAEP4J,GACFruC,KAAKuY,MAAM3lB,EAAKuU,MAAO+hB,GAAWgC,4BAItCwd,EAAiB1oC,KAAK0rC,4BAEtBhD,EAAiB1oC,KAAK2nC,gBAGxB/0C,EAAKsI,KAAOA,EACZtI,EAAK6xC,SAAWA,EAChB7xC,EAAK81C,eAAiBA,EACf1oC,KAAK+jC,WAAWnxC,EAAM,uBA/5BX,gDAk6BpB,SAAmCsW,GACjC,IAAMtW,EAAOoN,KAAK4oB,YAAY1f,EAAK/B,MAAO+B,EAAKhB,IAAIf,OAInD,OAHAvU,EAAKsI,KAAO,KACZtI,EAAK6xC,UAAW,EAChB7xC,EAAK81C,eAAiBx/B,EACflJ,KAAK+jC,WAAWnxC,EAAM,uBAv6BX,yCA06BpB,WAAyC,IAAbyC,EAAa,uDAAJ,GAC/BkzC,EAAO,KACPjjC,EAAQ,KAWZ,IATItF,KAAKwU,MAAM7T,EAAQ2E,UACrBA,EAAQtF,KAAK6sC,4BAA2B,IAClC3xC,KAAO,KAER8E,KAAKwU,MAAM7T,EAAQmB,SACtB9B,KAAK+lC,OAAOplC,EAAQoB,SAIhB/B,KAAKwU,MAAM7T,EAAQmB,UAAY9B,KAAKwU,MAAM7T,EAAQ4B,WACxDlN,EAAOL,KAAKgL,KAAK6sC,4BAA2B,IAEvC7sC,KAAKwU,MAAM7T,EAAQmB,SACtB9B,KAAK+lC,OAAOplC,EAAQoB,OAQxB,OAJI/B,KAAKylB,IAAI9kB,EAAQ4B,YACnBgmC,EAAOvoC,KAAK6sC,4BAA2B,IAGlC,CACLx3C,SACAkzC,OACAjjC,WAt8BgB,uCA08BpB,SAA0B8+B,EAAUnwB,EAAUrhB,EAAM6J,GAClD,OAAQA,EAAGvB,MACT,IAAK,MACH,OAAO8E,KAAK+jC,WAAWnxC,EAAM,qBAE/B,IAAK,OACL,IAAK,UACH,OAAOoN,KAAK+jC,WAAWnxC,EAAM,yBAE/B,IAAK,QACH,OAAOoN,KAAK+jC,WAAWnxC,EAAM,uBAE/B,IAAK,QACH,OAAOoN,KAAK+jC,WAAWnxC,EAAM,uBAE/B,IAAK,SACH,OAAOoN,KAAK+jC,WAAWnxC,EAAM,wBAE/B,IAAK,SACH,OAAOoN,KAAK+jC,WAAWnxC,EAAM,wBAE/B,IAAK,SACH,OAAOoN,KAAK+jC,WAAWnxC,EAAM,wBAE/B,QAEE,OADAoN,KAAKsuC,mBAAmB7xC,EAAGvB,MACpB8E,KAAKuuC,qBAAqBnK,EAAUnwB,EAAUxX,MAp+BvC,kCAw+BpB,WACE,IAGI4rC,EACAn/B,EAJEk7B,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SACtBrhB,EAAOoN,KAAK8jC,YAGd0K,GAAgB,EACdjC,EAAwBvsC,KAAKmI,MAAMgS,mBAEzC,OAAQna,KAAKmI,MAAMe,MACjB,KAAKvI,EAAQzF,KACX,OAAI8E,KAAKwlB,aAAa,aACbxlB,KAAKyuC,yBAGPzuC,KAAK0uC,0BAA0BtK,EAAUnwB,EAAUrhB,EAAMoN,KAAKioC,mBAEvE,KAAKtnC,EAAQa,OACX,OAAOxB,KAAK+qC,oBAAoB,CAC9BC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAGlB,KAAKzqC,EAAQc,UACX,OAAOzB,KAAK+qC,oBAAoB,CAC9BC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAGlB,KAAKzqC,EAAQQ,SAIX,OAHAnB,KAAKmI,MAAMgS,oBAAqB,EAChCjR,EAAOlJ,KAAK2uC,qBACZ3uC,KAAKmI,MAAMgS,mBAAqBoyB,EACzBrjC,EAET,KAAKvI,EAAQgD,WACX,GAAyB,MAArB3D,KAAKmI,MAAM9W,MAUb,OATAuB,EAAK2wC,eAAiBvjC,KAAKooC,oCAC3BpoC,KAAK+lC,OAAOplC,EAAQkB,QACpBwmC,EAAMroC,KAAKsoC,8BACX11C,EAAKyC,OAASgzC,EAAIhzC,OAClBzC,EAAK21C,KAAOF,EAAIE,KAChB31C,EAAKoN,KAAOqoC,EAAI/iC,MAChBtF,KAAK+lC,OAAOplC,EAAQmB,QACpB9B,KAAK+lC,OAAOplC,EAAQ2B,OACpB1P,EAAK61C,WAAazoC,KAAK2nC,gBAChB3nC,KAAK+jC,WAAWnxC,EAAM,0BAG/B,MAEF,KAAK+N,EAAQkB,OAGX,GAFA7B,KAAKsZ,QAEAtZ,KAAKwU,MAAM7T,EAAQmB,UAAY9B,KAAKwU,MAAM7T,EAAQ4B,UACrD,GAAIvC,KAAKwU,MAAM7T,EAAQzF,OAAS8E,KAAKwU,MAAM7T,EAAQ2E,OAAQ,CACzD,IAAM7E,EAAQT,KAAK0sC,YAAYxjC,KAC/BslC,EAAgB/tC,IAAUE,EAAQyB,UAAY3B,IAAUE,EAAQsB,WAEhEusC,GAAgB,EAIpB,GAAIA,EAAe,CAKjB,GAJAxuC,KAAKmI,MAAMgS,oBAAqB,EAChCjR,EAAOlJ,KAAK2nC,gBACZ3nC,KAAKmI,MAAMgS,mBAAqBoyB,EAE5BvsC,KAAKmI,MAAMgS,sBAAwBna,KAAKwU,MAAM7T,EAAQoB,QAAU/B,KAAKwU,MAAM7T,EAAQmB,SAAW9B,KAAK0sC,YAAYxjC,OAASvI,EAAQ2B,OAElI,OADAtC,KAAK+lC,OAAOplC,EAAQmB,QACboH,EAEPlJ,KAAKylB,IAAI9kB,EAAQoB,OAiBrB,OAZEsmC,EADEn/B,EACIlJ,KAAKsoC,4BAA4B,CAACtoC,KAAK4uC,mCAAmC1lC,KAE1ElJ,KAAKsoC,8BAGb11C,EAAKyC,OAASgzC,EAAIhzC,OAClBzC,EAAK21C,KAAOF,EAAIE,KAChB31C,EAAKoN,KAAOqoC,EAAI/iC,MAChBtF,KAAK+lC,OAAOplC,EAAQmB,QACpB9B,KAAK+lC,OAAOplC,EAAQ2B,OACpB1P,EAAK61C,WAAazoC,KAAK2nC,gBACvB/0C,EAAK2wC,eAAiB,KACfvjC,KAAK+jC,WAAWnxC,EAAM,0BAE/B,KAAK+N,EAAQK,OACX,OAAOhB,KAAKwiC,aAAaxiC,KAAKmI,MAAM9W,MAAO,+BAE7C,KAAKsP,EAAQkF,MACb,KAAKlF,EAAQmF,OAGX,OAFAlT,EAAKvB,MAAQ2O,KAAKwU,MAAM7T,EAAQkF,OAChC7F,KAAKsZ,OACEtZ,KAAK+jC,WAAWnxC,EAAM,gCAE/B,KAAK+N,EAAQkD,QACX,GAAyB,MAArB7D,KAAKmI,MAAM9W,MAAe,CAG5B,GAFA2O,KAAKsZ,OAEDtZ,KAAKwU,MAAM7T,EAAQC,KACrB,OAAOZ,KAAK6uC,oBAAoB7uC,KAAKmI,MAAM9W,MAAO,8BAA+BuB,GAGnF,GAAIoN,KAAKwU,MAAM7T,EAAQE,QACrB,OAAOb,KAAK6uC,oBAAoB7uC,KAAKmI,MAAM9W,MAAO,8BAA+BuB,GAGnF,MAAMoN,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO+hB,GAAW0C,8BAGhD,MAAM5rB,KAAKmlB,aAEb,KAAKxkB,EAAQC,IACX,OAAOZ,KAAKwiC,aAAaxiC,KAAKmI,MAAM9W,MAAO,+BAE7C,KAAKsP,EAAQE,OACX,OAAOb,KAAKwiC,aAAaxiC,KAAKmI,MAAM9W,MAAO,+BAE7C,KAAKsP,EAAQuF,MAEX,OADAlG,KAAKsZ,OACEtZ,KAAK+jC,WAAWnxC,EAAM,sBAE/B,KAAK+N,EAAQiF,MAEX,OADA5F,KAAKsZ,OACEtZ,KAAK+jC,WAAWnxC,EAAM,6BAE/B,KAAK+N,EAAQ2E,MAEX,OADAtF,KAAKsZ,OACEtZ,KAAK+jC,WAAWnxC,EAAM,sBAE/B,KAAK+N,EAAQoD,KAEX,OADA/D,KAAKsZ,OACEtZ,KAAK+jC,WAAWnxC,EAAM,wBAE/B,QACE,GAAgC,WAA5BoN,KAAKmI,MAAMe,KAAKjJ,QAClB,OAAOD,KAAK8uC,sBACP,GAAI9uC,KAAKmI,MAAMe,KAAKjJ,QAAS,CAClC,IAAMH,EAAQE,KAAKmI,MAAMe,KAAKpJ,MAE9B,OADAE,KAAKsZ,OACL,oDAA8B1mB,EAAMkN,IAK1C,MAAME,KAAKmlB,eApoCO,kCAuoCpB,WAME,IALA,IAAMif,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SACxB/K,EAAOlJ,KAAKkuC,uBACZa,GAA4B,GAExB/uC,KAAKwU,MAAM7T,EAAQQ,WAAanB,KAAKwU,MAAM7T,EAAQ0B,gBAAkBrC,KAAK4lB,sBAAsB,CACtG,IAAMhzB,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GAClCwwB,EAAWzkC,KAAKylB,IAAI9kB,EAAQ0B,aAClC0sC,EAA4BA,GAA6BtK,EACzDzkC,KAAK+lC,OAAOplC,EAAQQ,WAEfsjC,GAAYzkC,KAAKwU,MAAM7T,EAAQW,WAClC1O,EAAK8wB,YAAcxa,EACnBlJ,KAAKsZ,OACLpQ,EAAOlJ,KAAK+jC,WAAWnxC,EAAM,yBAE7BA,EAAKo8C,WAAa9lC,EAClBtW,EAAKq8C,UAAYjvC,KAAK2nC,gBACtB3nC,KAAK+lC,OAAOplC,EAAQW,UAEhBytC,GACFn8C,EAAK6xC,SAAWA,EAChBv7B,EAAOlJ,KAAK+jC,WAAWnxC,EAAM,8BAE7BsW,EAAOlJ,KAAK+jC,WAAWnxC,EAAM,sBAKnC,OAAOsW,IArqCW,iCAwqCpB,WACE,IAAMtW,EAAOoN,KAAK8jC,YAElB,OAAI9jC,KAAKylB,IAAI9kB,EAAQyB,WACnBxP,EAAK81C,eAAiB1oC,KAAKkvC,sBACpBlvC,KAAK+jC,WAAWnxC,EAAM,2BAEtBoN,KAAKmvC,yBA/qCI,gDAmrCpB,WACE,IAAM/wC,EAAQ4B,KAAKkvC,sBAEnB,IAAKlvC,KAAKmI,MAAMgS,oBAAsBna,KAAKylB,IAAI9kB,EAAQ2B,OAAQ,CAC7D,IAAM1P,EAAOoN,KAAK4oB,YAAYxqB,EAAM+I,MAAO/I,EAAM8J,IAAIf,OAMrD,OALAvU,EAAKyC,OAAS,CAAC2K,KAAK4uC,mCAAmCxwC,IACvDxL,EAAK21C,KAAO,KACZ31C,EAAKoN,KAAO,KACZpN,EAAK61C,WAAazoC,KAAK2nC,gBACvB/0C,EAAK2wC,eAAiB,KACfvjC,KAAK+jC,WAAWnxC,EAAM,0BAG/B,OAAOwL,IAhsCW,uCAmsCpB,WACE,IAAMxL,EAAOoN,KAAK8jC,YAClB9jC,KAAKylB,IAAI9kB,EAAQ8C,YACjB,IAAMyF,EAAOlJ,KAAKovC,qCAGlB,IAFAx8C,EAAK4C,MAAQ,CAAC0T,GAEPlJ,KAAKylB,IAAI9kB,EAAQ8C,aACtB7Q,EAAK4C,MAAMR,KAAKgL,KAAKovC,sCAGvB,OAA6B,IAAtBx8C,EAAK4C,MAAMuD,OAAemQ,EAAOlJ,KAAK+jC,WAAWnxC,EAAM,gCA7sC5C,gCAgtCpB,WACE,IAAMA,EAAOoN,KAAK8jC,YAClB9jC,KAAKylB,IAAI9kB,EAAQ4C,WACjB,IAAM2F,EAAOlJ,KAAKqvC,4BAGlB,IAFAz8C,EAAK4C,MAAQ,CAAC0T,GAEPlJ,KAAKylB,IAAI9kB,EAAQ4C,YACtB3Q,EAAK4C,MAAMR,KAAKgL,KAAKqvC,6BAGvB,OAA6B,IAAtBz8C,EAAK4C,MAAMuD,OAAemQ,EAAOlJ,KAAK+jC,WAAWnxC,EAAM,yBA1tC5C,2BA6tCpB,WACE,IAAM80C,EAAY1nC,KAAKmI,MAAM+R,OAC7Bla,KAAKmI,MAAM+R,QAAS,EACpB,IAAMhR,EAAOlJ,KAAKsvC,qBAElB,OADAtvC,KAAKmI,MAAM+R,OAASwtB,EACbx+B,IAluCW,kDAquCpB,WACE,GAAIlJ,KAAKmI,MAAMe,OAASvI,EAAQzF,MAA6B,MAArB8E,KAAKmI,MAAM9W,MAAe,CAChE,IAAM+yC,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SACtBrhB,EAAOoN,KAAKioC,kBAClB,OAAOjoC,KAAKuuC,qBAAqBnK,EAAUnwB,EAAUrhB,GAErD,OAAOoN,KAAK2nC,kBA5uCI,qCAgvCpB,WACE,IAAM/0C,EAAOoN,KAAK8jC,YAElB,OADAlxC,EAAK81C,eAAiB1oC,KAAK0rC,2BACpB1rC,KAAK+jC,WAAWnxC,EAAM,oBAnvCX,gDAsvCpB,SAAmC28C,GACjC,IAAMtD,EAAQsD,EAAyBvvC,KAAKioC,kBAAoBjoC,KAAK0qC,gCAOrE,OALI1qC,KAAKwU,MAAM7T,EAAQsB,SACrBgqC,EAAMvD,eAAiB1oC,KAAKsqC,0BAC5BtqC,KAAK2oC,iBAAiBsD,IAGjBA,IA9vCW,iCAiwCpB,SAAoBr5C,GAGlB,OAFAA,EAAKpB,WAAWk3C,eAAiB91C,EAAK81C,eACtC1oC,KAAK2oC,iBAAiB/1C,EAAKpB,WAAYoB,EAAK81C,eAAethC,IAAKxU,EAAK81C,eAAexgC,IAAId,KACjFxU,EAAKpB,aApwCM,+BAuwCpB,WACE,IAAIu6C,EAAW,KAef,OAbI/rC,KAAKwU,MAAM7T,EAAQkD,WACrBkoC,EAAW/rC,KAAK8jC,YAES,MAArB9jC,KAAKmI,MAAM9W,MACb06C,EAAS31C,KAAO,OAEhB21C,EAAS31C,KAAO,QAGlB4J,KAAKsZ,OACLtZ,KAAK+jC,WAAWgI,EAAU,aAGrBA,IAvxCW,+BA0xCpB,SAAkBn5C,EAAM48C,GAAuC,WAAlB9L,EAAkB,wDAC7D,OAAI8L,EACKxvC,KAAKyvC,iCAAiC78C,GAAM,iEAA8BA,GAAM,EAAM8wC,MAG/F,qDAA+B9wC,GAAM,EAAO8wC,KA/xC1B,wCAkyCpB,SAA2B9wC,EAAMsW,GAAwB,IAAlBw6B,EAAkB,wDACvD,GAAI1jC,KAAKwU,MAAM7T,EAAQsB,OAAQ,CAC7B,IAAMimC,EAAWloC,KAAK8jC,YADO,EAEe9jC,KAAKwoC,uCAFpB,SAE5BN,EAASQ,eAFmB,KAEH91C,EAAKk1C,UAFF,KAG7Bl1C,EAAK61C,WAAaP,EAASQ,eAAiB1oC,KAAK+jC,WAAWmE,EAAU,kBAAoB,KAG5F,8DAAiCt1C,EAAMsW,EAAMw6B,KAzyC3B,4BA4yCpB,SAAe5tB,EAAS45B,GACtB,GAAI1vC,KAAKmI,MAAMyR,QAAU5Z,KAAKwU,MAAM7T,EAAQzF,OAA8B,cAArB8E,KAAKmI,MAAM9W,MAAuB,CACrF,IAAMq7C,EAAY1sC,KAAK0sC,YAEvB,GAAIA,EAAUxjC,OAASvI,EAAQzF,MAAQkc,GAAUs1B,EAAUr7C,OAAQ,CACjE,IAAMuB,EAAOoN,KAAK8jC,YAElB,OADA9jC,KAAKsZ,OACEtZ,KAAK2vC,mBAAmB/8C,SAE5B,GAAIoN,KAAK4vC,oBAAsB5vC,KAAKwlB,aAAa,QAAS,CAC/D,IAAM5yB,EAAOoN,KAAK8jC,YAElB,OADA9jC,KAAKsZ,OACEtZ,KAAK6vC,yBAAyBj9C,GAGvC,IAAM6vC,EAAO,EAAH,gDAAwB3sB,EAAS45B,GAM3C,YAJwBx9C,IAApB8N,KAAKunC,YAA6BvnC,KAAK8vC,iBAAiBrN,KAC1DziC,KAAKunC,WAAa,MAGb9E,IAj0CW,sCAo0CpB,SAAyB7vC,EAAM8J,GAC7B,GAAkB,eAAdA,EAAKwM,KACP,GAAkB,YAAdxM,EAAKxB,MACP,GAAI8E,KAAKwU,MAAM7T,EAAQ6E,SAAWxF,KAAKwU,MAAM7T,EAAQzF,OAAS8E,KAAKwU,MAAM7T,EAAQgE,YAAc3E,KAAKwU,MAAM7T,EAAQsE,OAASjF,KAAKwU,MAAM7T,EAAQ+E,SAC5I,OAAO1F,KAAK4pC,iBAAiBh3C,QAE1B,GAAIoN,KAAKwU,MAAM7T,EAAQzF,MAAO,CACnC,GAAkB,cAAdwB,EAAKxB,KACP,OAAO8E,KAAK2vC,mBAAmB/8C,GAC1B,GAAkB,SAAd8J,EAAKxB,KACd,OAAO8E,KAAKuqC,mBAAmB33C,GAC1B,GAAkB,WAAd8J,EAAKxB,KACd,OAAO8E,KAAKwqC,oBAAoB53C,GAAM,GAK5C,mEAAsCA,EAAM8J,KAr1C1B,0CAw1CpB,WACE,OAAOsD,KAAKwlB,aAAa,SAAWxlB,KAAKwlB,aAAa,cAAgBxlB,KAAKwlB,aAAa,WAAaxlB,KAAK4vC,oBAAsB5vC,KAAKwlB,aAAa,SAA3I,gDAAAxlB,MAAA,KAAAA,QAz1CW,sCA41CpB,WACE,QAAIA,KAAKwU,MAAM7T,EAAQzF,SAA+B,SAArB8E,KAAKmI,MAAM9W,OAAyC,cAArB2O,KAAKmI,MAAM9W,OAA8C,WAArB2O,KAAKmI,MAAM9W,OAAsB2O,KAAK4vC,oBAA2C,SAArB5vC,KAAKmI,MAAM9W,SAI3K,+DAj2CkB,0CAo2CpB,WACE,GAAI2O,KAAK4vC,oBAAsB5vC,KAAKwlB,aAAa,QAAS,CACxD,IAAM5yB,EAAOoN,KAAK8jC,YAElB,OADA9jC,KAAKsZ,OACEtZ,KAAK6vC,yBAAyBj9C,GAGvC,0EA32CkB,8BA82CpB,SAAiB8J,EAAM0nC,EAAUnwB,EAAUwS,GAAqB,WAC9D,IAAKzmB,KAAKwU,MAAM7T,EAAQyB,UAAW,OAAO1F,EAE1C,GAAIsD,KAAKmI,MAAM8R,uBAAwB,CACrC,IAAMqL,EAAStlB,KAAK+vC,oBAEpB,GAAe,KAAXzqB,GAA4B,KAAXA,GAA4B,KAAXA,GAA4B,KAAXA,EAErD,OADAtlB,KAAKgwC,2BAA2BvpB,GACzB/pB,EAIXsD,KAAK+lC,OAAOplC,EAAQyB,UACpB,IAAM+F,EAAQnI,KAAKmI,MAAMlJ,QACnBgxC,EAAoBjwC,KAAKmI,MAAM4R,UAC/BnnB,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GACxC,EAGIjU,KAAKkwC,gCAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,OAEF,EAAuBpwC,KAAKqwC,wBAAwBF,GAApD,SAAKG,EAAL,KAAY7vB,EAAZ,KAEA,GAAI2vB,GAAU3vB,EAAQ1nB,OAAS,EAAG,CAChC,IAAMghB,EAAY,EAAIk2B,GAEtB,GAAIxvB,EAAQ1nB,OAAS,EAAG,CACtBiH,KAAKmI,MAAQA,EACbnI,KAAKmI,MAAM4R,UAAYA,EAEvB,IAAK,IAAIzf,EAAI,EAAGA,EAAImmB,EAAQ1nB,OAAQuB,IAClCyf,EAAU/kB,KAAKyrB,EAAQnmB,GAAG6M,OALN,MAWlBnH,KAAKkwC,gCAFPC,EAToB,EASpBA,WACAC,EAVoB,EAUpBA,OAVoB,MAYHpwC,KAAKqwC,wBAAwBF,GAZ1B,SAYrBG,EAZqB,KAYd7vB,EAZc,KAmBxB,GAJI2vB,GAAUE,EAAMv3C,OAAS,GAC3BiH,KAAKuY,MAAMpQ,EAAMhB,MAAO+hB,GAAWC,2BAGjCinB,GAA2B,IAAjBE,EAAMv3C,OAAc,CAChCiH,KAAKmI,MAAQA,EACbnI,KAAKmI,MAAM4R,UAAYA,EAAUlhB,OAAOy3C,EAAM,GAAGnpC,OAFjB,MAM5BnH,KAAKkwC,gCAFPC,EAJ8B,EAI9BA,WACAC,EAL8B,EAK9BA,QAWN,OANApwC,KAAKqwC,wBAAwBF,GAAY,GACzCnwC,KAAKmI,MAAM4R,UAAYk2B,EACvBjwC,KAAK+lC,OAAOplC,EAAQsB,OACpBrP,EAAK2jB,KAAO7Z,EACZ9J,EAAKu9C,WAAaA,EAClBv9C,EAAK29C,UAAYvwC,KAAKyvC,iCAAiC78C,GAAM,kBAAM,EAAK49C,sBAAiBt+C,OAAWA,MAC7F8N,KAAK+jC,WAAWnxC,EAAM,2BA16CX,2CA66CpB,WACEoN,KAAKmI,MAAM6R,0BAA0BhlB,KAAKgL,KAAKmI,MAAMhB,OACrD,IAAMgpC,EAAanwC,KAAKimC,0BAClBmK,GAAUpwC,KAAKwU,MAAM7T,EAAQsB,OAEnC,OADAjC,KAAKmI,MAAM6R,0BAA0BhhB,MAC9B,CACLm3C,aACAC,YAp7CgB,qCAw7CpB,SAAwBx9C,EAAM69C,GAI5B,IAJ6C,WACvCntB,EAAQ,CAAC1wB,GACT89C,EAAS,GAES,IAAjBptB,EAAMvqB,QAAc,CACzB,IAAMnG,EAAO0wB,EAAMtqB,MAED,4BAAdpG,EAAKsW,MACHtW,EAAK2wC,iBAAmB3wC,EAAK61C,WAC/BzoC,KAAK2wC,sBAAsB/9C,GAE3B89C,EAAO17C,KAAKpC,GAGd0wB,EAAMtuB,KAAKpC,EAAKc,OACO,0BAAdd,EAAKsW,OACdoa,EAAMtuB,KAAKpC,EAAKu9C,YAChB7sB,EAAMtuB,KAAKpC,EAAK29C,YAIpB,OAAIE,GACFC,EAAO78B,SAAQ,SAAAjhB,GAAI,OAAI,EAAK+9C,sBAAsB/9C,MAC3C,CAAC89C,EAAQ,KA39CtB,SAAmBx8C,EAAMqiB,GAIvB,IAHA,IAAMq6B,EAAQ,GACRC,EAAQ,GAELv2C,EAAI,EAAGA,EAAIpG,EAAK6E,OAAQuB,KAC9Bic,EAAKriB,EAAKoG,GAAIA,EAAGpG,GAAQ08C,EAAQC,GAAO77C,KAAKd,EAAKoG,IAGrD,MAAO,CAACs2C,EAAOC,GAs9CNC,CAAUJ,GAAQ,SAAA99C,GAAI,OAAIA,EAAKyC,OAAO07C,OAAM,SAAA3yC,GAAK,OAAI,EAAKkmC,aAAalmC,GAAO,WAl9CnE,mCAq9CpB,SAAsBxL,GACpB,IAAIo+C,EAEJhxC,KAAKixC,iBAAiBr+C,EAAKyC,OAAsC,OAA7B27C,EAAcp+C,EAAKoyB,YAAiB,EAASgsB,EAAYE,eAAe,GAC5GlxC,KAAKrN,MAAMg1B,MAAMwpB,GACjB,+CAAkBv+C,GAAM,GAAO,GAC/BoN,KAAKrN,MAAMk3C,SA39CO,8CA89CpB,SAAiCj3C,EAAMw+C,GACrC,IAAIC,EAUJ,OARkE,IAA9DrxC,KAAKmI,MAAM6R,0BAA0ByD,QAAQ7qB,EAAKuU,QACpDnH,KAAKmI,MAAM6R,0BAA0BhlB,KAAKgL,KAAKmI,MAAMhB,OACrDkqC,EAASD,IACTpxC,KAAKmI,MAAM6R,0BAA0BhhB,OAErCq4C,EAASD,IAGJC,IAz+CW,4BA4+CpB,SAAez+C,EAAMwxC,EAAUnwB,GAQ7B,GAPArhB,EAAO,EAAH,gDAAwBA,EAAMwxC,EAAUnwB,GAExCjU,KAAKylB,IAAI9kB,EAAQyB,YACnBxP,EAAK6xC,UAAW,EAChBzkC,KAAK2oC,iBAAiB/1C,IAGpBoN,KAAKwU,MAAM7T,EAAQsB,OAAQ,CAC7B,IAAMqvC,EAAetxC,KAAK4oB,YAAYwb,EAAUnwB,GAGhD,OAFAq9B,EAAa9/C,WAAaoB,EAC1B0+C,EAAa5I,eAAiB1oC,KAAKsqC,0BAC5BtqC,KAAK+jC,WAAWuN,EAAc,sBAGvC,OAAO1+C,IA3/CW,qCA8/CpB,SAAwBA,GACJ,sBAAdA,EAAKsW,OAAqD,SAApBtW,EAAKu5B,YAA6C,WAApBv5B,EAAKu5B,aAA0C,2BAAdv5B,EAAKsW,MAAyD,SAApBtW,EAAKy3C,YAAuC,yBAAdz3C,EAAKsW,MAAuD,SAApBtW,EAAKy3C,YAI9N,2DAA8Bz3C,KAngDZ,yBAsgDpB,SAAYA,GACV,IAAM2+C,EAAO,EAAH,6CAAqB3+C,GAM/B,MAJkB,2BAAd2+C,EAAKroC,MAAmD,yBAAdqoC,EAAKroC,OACjDqoC,EAAKlH,WAAakH,EAAKlH,YAAc,SAGhCkH,IA7gDW,oCAghDpB,SAAuB3+C,GACrB,GAAIoN,KAAKwlB,aAAa,QAAS,CAC7B5yB,EAAKy3C,WAAa,OAClB,IAAMmH,EAAkBxxC,KAAK8jC,YAG7B,OAFA9jC,KAAKsZ,OAEDtZ,KAAKwU,MAAM7T,EAAQa,SACrB5O,EAAKuW,WAAanJ,KAAKyxC,wBACvBzxC,KAAK0xC,gBAAgB9+C,GACd,MAEAoN,KAAKuqC,mBAAmBiH,GAE5B,GAAIxxC,KAAKwlB,aAAa,UAAW,CACtC5yB,EAAKy3C,WAAa,OAClB,IAAMmH,EAAkBxxC,KAAK8jC,YAE7B,OADA9jC,KAAKsZ,OACEtZ,KAAKwqC,oBAAoBgH,GAAiB,GAC5C,GAAIxxC,KAAKwlB,aAAa,aAAc,CACzC5yB,EAAKy3C,WAAa,OAClB,IAAMmH,EAAkBxxC,KAAK8jC,YAE7B,OADA9jC,KAAKsZ,OACEtZ,KAAK2vC,mBAAmB6B,GAC1B,GAAIxxC,KAAK4vC,oBAAsB5vC,KAAKwlB,aAAa,QAAS,CAC/D5yB,EAAKy3C,WAAa,QAClB,IAAMmH,EAAkBxxC,KAAK8jC,YAE7B,OADA9jC,KAAKsZ,OACEtZ,KAAK6vC,yBAAyB2B,GAErC,iEAAoC5+C,KA7iDpB,2BAijDpB,SAAcA,GACZ,0DAA2BiI,eAEvBmF,KAAKwlB,aAAa,SAAWxlB,KAAK0sC,YAAYxjC,OAASvI,EAAQoD,QACjEnR,EAAKy3C,WAAa,OAClBrqC,KAAKsZ,OACLtZ,KAAKsZ,QACE,KAxjDS,gDA8jDpB,SAAmC1mB,GACjC,IAAMohB,EAAMhU,KAAKmI,MAAMhB,MACjBwqC,EAAe,EAAH,oEAA4C/+C,GAM9D,OAJI++C,GAAoC,SAApB/+C,EAAKy3C,YACvBrqC,KAAKmlB,WAAWnR,GAGX29B,IAtkDW,0BAykDpB,SAAa/+C,EAAMg/C,EAAaC,GAC9B,gDAAmBj/C,EAAMg/C,EAAaC,GAElC7xC,KAAKklB,aAAa,OACpBtyB,EAAK2wC,eAAiBvjC,KAAKooC,uCA7kDX,8BAilDpB,SAAiBhF,EAAW0O,EAAQ3pC,GAClC,IAAM6L,EAAMhU,KAAKmI,MAAMhB,MAEvB,GAAInH,KAAKwlB,aAAa,WAAY,CAChC,GAAIxlB,KAAK+xC,6BAA6B3O,EAAW0O,GAC/C,OAGFA,EAAOnG,SAAU,EAGnB,oDAAuBvI,EAAW0O,EAAQ3pC,GAEtC2pC,EAAOnG,UACW,kBAAhBmG,EAAO5oC,MAA4C,yBAAhB4oC,EAAO5oC,MAAmD,uBAAhB4oC,EAAO5oC,KACtFlJ,KAAKuY,MAAMvE,EAAKkV,GAAWI,qBAClBwoB,EAAOzgD,OAChB2O,KAAKuY,MAAMu5B,EAAOzgD,MAAM8V,MAAO+hB,GAAWK,iCAlmD5B,wBAumDpB,SAAWxS,GACT,MAAgB,aAATA,GAAgC,kBAATA,IAxmDZ,0BA2mDpB,WACE,IAAMA,EAAO,EAAH,4CACJi7B,EAAW,KAAOj7B,EAEnB/W,KAAKiyC,WAAWl7B,IAAU/W,KAAKmI,MAAM+R,QACxCla,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAcsD,kBAAmB6kC,GAG9DhyC,KAAKqd,YAAY1c,EAAQzF,KAAM82C,KAnnDb,8BAsnDpB,SAAiBvrC,GACf,IAAM6S,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAEpD,OAAa,MAATvN,GAAyB,MAAT6S,EACXtZ,KAAKye,SAAS9d,EAAQc,UAAW,IAC/BzB,KAAKmI,MAAM+R,QAAoB,KAATzT,GAAwB,KAATA,EAErCzG,KAAKmI,MAAM+R,QAAmB,KAATzT,EACjB,KAAT6S,EACKtZ,KAAKye,SAAS9d,EAAQ0B,YAAa,GAGrCrC,KAAKye,SAAS9d,EAAQyB,SAAU,GAz9H7C,SAAyBohB,EAASlK,GAChC,OAAmB,KAAZkK,GAA2B,KAATlK,EAy9HZ44B,CAAgBzrC,EAAM6S,IAC/BtZ,KAAKmI,MAAM6L,KAAO,EACXhU,KAAKmyC,gBAEZ,oDAA8B1rC,GAXvBzG,KAAKye,SAAS9d,EAAQgD,WAAY,KA5nDzB,0BA2oDpB,SAAa/Q,EAAMyxC,GACjB,MAAkB,uBAAdzxC,EAAKsW,KACAlJ,KAAKskC,aAAa1xC,EAAKpB,WAAY6yC,GAE1C,gDAA0BzxC,EAAMyxC,KA/oDhB,0BAmpDpB,SAAazxC,GAAqB,IAAf2xC,EAAe,wDAChC,MAAkB,uBAAd3xC,EAAKsW,KACP,gDAA0BlJ,KAAKoyC,oBAAoBx/C,GAAO2xC,GAE1D,gDAA0B3xC,EAAM2xC,KAvpDhB,8BA2pDpB,SAAiB8N,EAAUC,EAAkB/N,GAC3C,IAAK,IAAIjqC,EAAI,EAAGA,EAAI+3C,EAASt5C,OAAQuB,IAAK,CACxC,IAAMoC,EAAO21C,EAAS/3C,GAEsB,wBAA/B,MAARoC,OAAe,EAASA,EAAKwM,QAChCmpC,EAAS/3C,GAAK0F,KAAKoyC,oBAAoB11C,IAI3C,2DAA8B21C,EAAUC,EAAkB/N,KApqDxC,8BAuqDpB,SAAiB8N,EAAUE,GACzB,IAAK,IAAIj4C,EAAI,EAAGA,EAAI+3C,EAASt5C,OAAQuB,IAAK,CACxC,IAAIk4C,EAEE91C,EAAO21C,EAAS/3C,IAElBoC,GAAsB,uBAAdA,EAAKwM,MAAiE,OAA7BspC,EAAc91C,EAAKsoB,QAAkBwtB,EAAYzP,iBAAmBsP,EAASt5C,OAAS,IAAMw5C,GAC/IvyC,KAAKuY,MAAM7b,EAAKgsC,eAAevhC,MAAO+hB,GAAWoC,mBAIrD,OAAO+mB,IAlrDW,4BAqrDpB,SAAeI,EAAOC,EAAcC,EAASlsB,GAC3C,IAAM7zB,EAAO,EAAH,gDAAwB6/C,EAAOC,EAAcC,EAASlsB,GAMhE,OAJIisB,IAAiB1yC,KAAKmI,MAAM8R,wBAC9Bja,KAAK4yC,iBAAiBhgD,EAAKiV,UAGtBjV,IA5rDW,uBA+rDpB,SAAU8J,GACR,GAAkB,uBAAdA,EAAKwM,KAA+B,8BADvBhP,EACuB,iCADvBA,EACuB,kBACtC,gEAAuBwC,GAAvB,OAAgCxC,OAjsDhB,gCAqsDpB,SAAmBtH,GAKjB,OAJIoN,KAAKwU,MAAM7T,EAAQsB,SACrBrP,EAAK81C,eAAiB1oC,KAAKsqC,2BAG7B,sDAAgC13C,KA1sDd,uCA6sDpB,SAA0BA,GAKxB,OAJIoN,KAAKwU,MAAM7T,EAAQsB,SACrBrP,EAAK81C,eAAiB1oC,KAAKsqC,2BAG7B,6DAAuC13C,KAltDrB,2BAqtDpB,WACE,OAAOoN,KAAKklB,aAAa,MAAlB,iCAAAllB,MAAA,KAAAA,QAttDW,6BAytDpB,WACE,OAAOA,KAAKwU,MAAM7T,EAAQsB,QAAnB,mCAAAjC,MAAA,KAAAA,QA1tDW,oCA6tDpB,SAAuBzC,GACrB,OAAQyC,KAAKwU,MAAM7T,EAAQsB,QAApB,0DAA2D1E,KA9tDhD,6BAiuDpB,SAAgB6lC,EAAW7lC,EAAQunB,EAAaD,EAAS1uB,EAAektC,GAatE,GAZI9lC,EAAOwuC,UACT/rC,KAAKmlB,WAAW5nB,EAAOwuC,SAAS5kC,cAG3B5J,EAAOwuC,SAEV/rC,KAAKklB,aAAa,OACpB3nB,EAAOgmC,eAAiBvjC,KAAKooC,qCAG/B,mDAAsBhF,EAAW7lC,EAAQunB,EAAaD,EAAS1uB,EAAektC,GAE1E9lC,EAAOlI,QAAUc,EAAe,CAClC,IAAMd,EAASkI,EAAOlI,OAElBA,EAAO0D,OAAS,GAAKiH,KAAK6yC,YAAYx9C,EAAO,KAC/C2K,KAAKuY,MAAMhb,EAAO4J,MAAO+hB,GAAW+B,mCAEjC,GAAoB,qBAAhB1tB,EAAO2L,MAA+B/S,GAAiBoH,EAAOlM,MAAMgE,OAAQ,CACrF,IAAMA,EAASkI,EAAOlM,MAAMgE,OAExBA,EAAO0D,OAAS,GAAKiH,KAAK6yC,YAAYx9C,EAAO,KAC/C2K,KAAKuY,MAAMhb,EAAO4J,MAAO+hB,GAAW+B,iCAxvDtB,oCA6vDpB,SAAuBmY,EAAW7lC,EAAQunB,EAAaD,GACjDtnB,EAAOwuC,UACT/rC,KAAKmlB,WAAW5nB,EAAOwuC,SAAS5kC,cAG3B5J,EAAOwuC,SAEV/rC,KAAKklB,aAAa,OACpB3nB,EAAOgmC,eAAiBvjC,KAAKooC,qCAG/B,0DAA6BhF,EAAW7lC,EAAQunB,EAAaD,KAxwD3C,6BA2wDpB,SAAgBjyB,GAOd,GANA,mDAAsBA,GAElBA,EAAKiL,YAAcmC,KAAKklB,aAAa,OACvCtyB,EAAKkgD,oBAAsB9yC,KAAKsrC,uCAG9BtrC,KAAKwlB,aAAa,cAAe,CACnCxlB,KAAKsZ,OACL,IAAMy5B,EAAcngD,EAAKg4C,WAAa,GAEtC,EAAG,CACD,IAAMh4C,EAAOoN,KAAK8jC,YAClBlxC,EAAK6J,GAAKuD,KAAK0qC,+BAA8B,GAEzC1qC,KAAKklB,aAAa,KACpBtyB,EAAK2wC,eAAiBvjC,KAAKsrC,sCAE3B14C,EAAK2wC,eAAiB,KAGxBwP,EAAY/9C,KAAKgL,KAAK+jC,WAAWnxC,EAAM,0BAChCoN,KAAKylB,IAAI9kB,EAAQoB,WAjyDV,qCAqyDpB,SAAwBxE,GACtB,2DAA8BA,GAC9B,IAAMlI,EAAS2K,KAAKgzC,6BAA6Bz1C,GAEjD,GAAIlI,EAAO0D,OAAS,EAAG,CACrB,IAAMqF,EAAQ/I,EAAO,GAEjB2K,KAAK6yC,YAAYz0C,IAA0B,QAAhBb,EAAOnH,KACpC4J,KAAKuY,MAAMna,EAAM+I,MAAO+hB,GAAWkB,2BAC1BpqB,KAAK6yC,YAAYz0C,IAC1B4B,KAAKuY,MAAMna,EAAM+I,MAAO+hB,GAAW4B,8BA/yDrB,+BAozDpB,SAAkBl4B,EAAMqgD,GACtB,IAAMlH,EAAW/rC,KAAKgsC,oBAChBhyC,EAAM,EAAH,mDAA2BpH,EAAMqgD,GAE1C,OADArgD,EAAKm5C,SAAWA,EACT/xC,IAxzDW,+BA2zDpB,SAAkBmgC,EAAMiK,EAAUnwB,EAAU6Q,EAAaD,EAASof,EAAWC,EAAYzd,GAMvF,IAAI8c,EALApJ,EAAK4R,UACP/rC,KAAKmlB,WAAWgV,EAAK4R,SAAS5kC,cAGzBgzB,EAAK4R,SAGR/rC,KAAKklB,aAAa,OAASgf,IAC7BX,EAAiBvjC,KAAKooC,oCACjBpoC,KAAKwU,MAAM7T,EAAQkB,SAAS7B,KAAKmlB,cAGxC,qDAAwBgV,EAAMiK,EAAUnwB,EAAU6Q,EAAaD,EAASof,EAAWC,EAAYzd,GAE3F8c,KACDpJ,EAAK9oC,OAAS8oC,GAAMoJ,eAAiBA,KA30DtB,0CA+0DpB,SAA6BnlC,GAwB3B,OAvBI4B,KAAKylB,IAAI9kB,EAAQyB,YACA,eAAfhE,EAAM8K,MACRlJ,KAAKuY,MAAMna,EAAM+I,MAAO+hB,GAAW2B,wBAGjC7qB,KAAK6yC,YAAYz0C,IACnB4B,KAAKuY,MAAMna,EAAM+I,MAAO+hB,GAAWgC,2BAGrC9sB,EAAMqmC,UAAW,GAGfzkC,KAAKwU,MAAM7T,EAAQsB,OACrB7D,EAAMsqC,eAAiB1oC,KAAKsqC,0BACnBtqC,KAAK6yC,YAAYz0C,IAC1B4B,KAAKuY,MAAMna,EAAM+I,MAAO+hB,GAAW8B,6BAGjChrB,KAAKwU,MAAM7T,EAAQkC,KAAO7C,KAAK6yC,YAAYz0C,IAC7C4B,KAAKuY,MAAMna,EAAM+I,MAAO+hB,GAAWkC,oBAGrCprB,KAAK2oC,iBAAiBvqC,GACfA,IAv2DW,+BA02DpB,SAAkBgmC,EAAUnwB,EAAUi/B,GACpC,IAAMtgD,EAAO,EAAH,mDAA2BwxC,EAAUnwB,EAAUi/B,GAMzD,MAJkB,sBAAdtgD,EAAKsW,MAAgCtW,EAAK81C,gBAAkB91C,EAAK64C,MAAMtkC,MAAQvU,EAAK81C,eAAevhC,OACrGnH,KAAKuY,MAAM3lB,EAAK81C,eAAevhC,MAAO+hB,GAAWmC,uBAG5Cz4B,IAj3DW,sCAo3DpB,SAAyBA,GACvB,OAAKs5B,GAAkBt5B,GAIhBw5B,GAAqBpsB,KAAKmI,OAH/B,4DAAsCvV,KAt3DtB,uCA43DpB,SAA0BA,EAAMugD,EAAWjqC,EAAMkqC,GAC/CD,EAAUE,MAAQnnB,GAAkBt5B,GAAQoN,KAAK0qC,+BAA8B,GAAM,GAAQ1qC,KAAKioC,kBAClGjoC,KAAKszC,UAAUH,EAAUE,MAAOD,EAtrIf3J,GAurIjB72C,EAAKuW,WAAWnU,KAAKgL,KAAK+jC,WAAWoP,EAAWjqC,MA/3D9B,8CAk4DpB,SAAiCtW,GAC/BA,EAAKu5B,WAAa,QAClB,IAAI/1B,EAAO,KAQX,GANI4J,KAAKwU,MAAM7T,EAAQsF,SACrB7P,EAAO,SACE4J,KAAKwlB,aAAa,UAC3BpvB,EAAO,QAGLA,EAAM,CACR,IAAMg4C,EAAKpuC,KAAK0sC,YAEH,SAATt2C,GAAmBg4C,EAAGllC,OAASvI,EAAQoD,MACzC/D,KAAKmlB,WAAWipB,EAAGjnC,QAGjBilB,GAAqBgiB,IAAOA,EAAGllC,OAASvI,EAAQa,QAAU4sC,EAAGllC,OAASvI,EAAQoD,QAChF/D,KAAKsZ,OACL1mB,EAAKu5B,WAAa/1B,GAItB,2EAA8CxD,KAz5D5B,kCA45DpB,SAAqBA,GACnB,IAAMugD,EAAYnzC,KAAK8jC,YACjByP,EAAqBvzC,KAAKwU,MAAM7T,EAAQK,QACxCwyC,EAAaxzC,KAAKyzC,wBACpBC,EAAoB,KAEA,eAApBF,EAAWtqC,OACW,SAApBsqC,EAAWt4C,KACbw4C,EAAoB,OACS,WAApBF,EAAWt4C,OACpBw4C,EAAoB,WAIxB,IAAIrP,GAAY,EAEhB,GAAIrkC,KAAKwlB,aAAa,QAAUxlB,KAAK2zC,sBAAsB,MAAO,CAChE,IAAMC,EAAW5zC,KAAKioC,iBAAgB,GAEZ,OAAtByL,GAA+B1zC,KAAKwU,MAAM7T,EAAQzF,OAAU8E,KAAKmI,MAAMe,KAAKjJ,SAK9EkzC,EAAUU,SAAWL,EACrBL,EAAUhnB,WAAa,KACvBgnB,EAAUE,MAAQrzC,KAAKioC,oBANvBkL,EAAUU,SAAWD,EACrBT,EAAUhnB,WAAaunB,EACvBP,EAAUE,MAAQlrB,GAAgByrB,QAM/B,CACL,GAA0B,OAAtBF,IAA+B1zC,KAAKwU,MAAM7T,EAAQzF,OAAS8E,KAAKmI,MAAMe,KAAKjJ,SAC7EkzC,EAAUU,SAAW7zC,KAAKioC,iBAAgB,GAC1CkL,EAAUhnB,WAAaunB,MAClB,CACL,GAAIH,EACF,MAAMvzC,KAAKuY,MAAM46B,EAAUhsC,MAAO0C,EAAc0C,sBAAuBinC,EAAWniD,OAGpF8hD,EAAUU,SAAWL,EACrBL,EAAUhnB,WAAa,KAGrBnsB,KAAK0lB,cAAc,MACrBytB,EAAUE,MAAQrzC,KAAKioC,mBAEvB5D,GAAY,EACZ8O,EAAUE,MAAQlrB,GAAgBgrB,EAAUU,WAIhD,IAAMC,EAAmB5nB,GAAkBt5B,GACrCmhD,EAAwB7nB,GAAkBinB,GAE5CW,GAAoBC,GACtB/zC,KAAKuY,MAAM46B,EAAUhsC,MAAO+hB,GAAWmB,sCAGrCypB,GAAoBC,IACtB/zC,KAAKwrC,kBAAkB2H,EAAUE,MAAMn4C,KAAMi4C,EAAUE,MAAMlsC,OAAO,IAGlEk9B,GAAcyP,GAAqBC,GACrC/zC,KAAKg0C,kBAAkBb,EAAUE,MAAMn4C,KAAMi4C,EAAUhsC,OAAO,GAAM,GAGtEnH,KAAKszC,UAAUH,EAAUE,MAAO,mBApxIf5J,GAqxIjB72C,EAAKuW,WAAWnU,KAAKgL,KAAK+jC,WAAWoP,EAAW,sBA79D9B,8BAg+DpB,WACE,OAAQnzC,KAAKmI,MAAMe,MACjB,KAAKvI,EAAQ2E,MACX,OAAOtF,KAAKioC,iBAAgB,GAE9B,QACE,+DAt+Dc,iCA0+DpB,SAAoBr1C,EAAMqhD,GACxB,IAAM79C,EAAOxD,EAAKwD,KAEL,QAATA,GAA2B,QAATA,GAAkB4J,KAAKklB,aAAa,OACxDtyB,EAAK2wC,eAAiBvjC,KAAKooC,qCAG7B,uDAA0Bx1C,EAAMqhD,KAj/Dd,wBAo/DpB,SAAW1C,EAAMn7C,GACf,8CAAiBm7C,EAAMn7C,GAEnB4J,KAAKwU,MAAM7T,EAAQsB,SACrBsvC,EAAK90C,GAAGisC,eAAiB1oC,KAAKsqC,0BAC9BtqC,KAAK2oC,iBAAiB4I,EAAK90C,OAz/DX,+CA6/DpB,SAAkC7J,EAAM8H,GACtC,GAAIsF,KAAKwU,MAAM7T,EAAQsB,OAAQ,CAC7B,IAAMsqC,EAAwBvsC,KAAKmI,MAAMgS,mBACzCna,KAAKmI,MAAMgS,oBAAqB,EAChCvnB,EAAK61C,WAAazoC,KAAKsqC,0BACvBtqC,KAAKmI,MAAMgS,mBAAqBoyB,EAGlC,4EAA+C35C,EAAM8H,KArgEnC,mCAwgEpB,WACE,OAAOsF,KAAKwU,MAAM7T,EAAQsB,QAAnB,yCAAAjC,MAAA,KAAAA,QAzgEW,8BA4gEpB,SAAiBymB,EAAqBytB,GAAgB,IAChDC,EAGA/O,EAJgD,OAGhDj9B,EAAQ,KAGZ,GAAInI,KAAKwJ,UAAU,SAAWxJ,KAAKwU,MAAM7T,EAAQ+8B,cAAgB19B,KAAKklB,aAAa,MAAO,CAGxF,GAFA/c,EAAQnI,KAAKmI,MAAMlJ,UACnBmmC,EAAMplC,KAAKo0C,UAAS,gEAA6B3tB,EAAqBytB,KAAiB/rC,IAC9EiN,MAAO,OAAOgwB,EAAIxyC,KAC3B,IACEkjB,EACE9V,KAAKmI,MADP2N,QAEI6G,EAAa7G,EAAQA,EAAQ/c,OAAS,GAExC4jB,IAAennB,EAAM6nC,OACvBvnB,EAAQ/c,QAAU,EACT4jB,IAAennB,EAAM+nC,SAC9BznB,EAAQ/c,QAAU,GAItB,GAAoB,OAAfo7C,EAAO/O,IAAgB+O,EAAK/+B,OAASpV,KAAKklB,aAAa,KAAM,CAChE,IAAImvB,EAAOC,EAGP/Q,EADJp7B,EAAQA,GAASnI,KAAKmI,MAAMlJ,QAE5B,IAAMqD,EAAQtC,KAAKo0C,UAAS,SAAAG,GAC1B,IAAIC,EAEJjR,EAAiB,EAAK6E,oCACtB,IAAMqM,EAAkB,EAAKhF,iCAAiClM,GAAgB,WAC5E,IAAM8N,EAAS,EAAH,4CAA0B5qB,EAAqBytB,GAE3D,OADA,EAAKQ,2BAA2BrD,EAAQ9N,GACjC8N,KAE8C,OAAlDmD,EAAwBC,EAAgBzvB,QAAkBwvB,EAAsBzR,eAAewR,IACpG,IAAM73C,EAAO,EAAKi4C,8BAA8BF,GAIhD,MAHkB,4BAAd/3C,EAAKwM,MAAoCqrC,IAC7C73C,EAAK6mC,eAAiBA,EACtB,EAAKmR,2BAA2Bh4C,EAAM6mC,GAC/BkR,IACNtsC,GACCssC,EAAkB,KAEtB,GAAInyC,EAAM1P,MAAgE,4BAAxDoN,KAAK20C,8BAA8BryC,EAAM1P,MAAMsW,KAAoC,CACnG,IAAK5G,EAAM8S,QAAU9S,EAAMkkB,QAKzB,OAJIlkB,EAAM1P,KAAKyJ,OACb2D,KAAKuY,MAAMgrB,EAAep8B,MAAO+hB,GAAW4C,iDAGvCxpB,EAAM1P,KAGf6hD,EAAkBnyC,EAAM1P,KAG1B,GAAqB,OAAhByhD,EAAQjP,IAAgBiP,EAAMzhD,KAEjC,OADAoN,KAAKmI,MAAQi9B,EAAI9e,UACV8e,EAAIxyC,KAGb,GAAI6hD,EAEF,OADAz0C,KAAKmI,MAAQ7F,EAAMgkB,UACZmuB,EAGT,GAAqB,OAAhBH,EAAQlP,IAAgBkP,EAAM/tB,OAAQ,MAAM6e,EAAIhwB,MACrD,GAAI9S,EAAMikB,OAAQ,MAAMjkB,EAAM8S,MAC9B,MAAMpV,KAAKuY,MAAMgrB,EAAep8B,MAAO+hB,GAAW2C,mCAGpD,2DAA8BpF,EAAqBytB,KAplEjC,wBAulEpB,SAAWthD,GAAM,WACf,GAAIoN,KAAKwU,MAAM7T,EAAQsB,OAAQ,CAC7B,IAAMovC,EAASrxC,KAAKo0C,UAAS,WAC3B,IAAM7H,EAAwB,EAAKpkC,MAAMgS,mBACzC,EAAKhS,MAAMgS,oBAAqB,EAChC,IAAM+tB,EAAW,EAAKpE,YAHW,EAIW,EAAK0E,uCAJhB,SAQjC,OAJCN,EAASQ,eAJuB,KAIP91C,EAAKk1C,UAJE,KAKjC,EAAK3/B,MAAMgS,mBAAqBoyB,EAC5B,EAAK3mB,sBAAsB,EAAKT,aAC/B,EAAK3Q,MAAM7T,EAAQ2B,QAAQ,EAAK6iB,aAC9B+iB,KAET,GAAImJ,EAAO9qB,OAAQ,OAAO,KACtB8qB,EAAOj8B,QAAOpV,KAAKmI,MAAQkpC,EAAO/qB,WACtC1zB,EAAK61C,WAAa4I,EAAOz+C,KAAK81C,eAAiB1oC,KAAK+jC,WAAWsN,EAAOz+C,KAAM,kBAAoB,KAGlG,qDAAwBA,KAxmEN,8BA2mEpB,SAAiByC,GACf,OAAO2K,KAAKwU,MAAM7T,EAAQsB,QAAnB,oCAAAjC,MAAA,KAAAA,KAAoD3K,KA5mEzC,wCA+mEpB,SAA2BzC,EAAMyC,IACmC,IAA9D2K,KAAKmI,MAAM6R,0BAA0ByD,QAAQ7qB,EAAKuU,OACpDvU,EAAKyC,OAASA,EAEd,8DAAiCzC,EAAMyC,KAnnEvB,yBAunEpB,SAAYzC,EAAMgiD,EAAiBC,GACjC,IAAIA,IAAiF,IAA9D70C,KAAKmI,MAAM6R,0BAA0ByD,QAAQ7qB,EAAKuU,OAAzE,CAIA,IAAK,IAAI7M,EAAI,EAAGA,EAAI1H,EAAKyC,OAAO0D,OAAQuB,IAClC0F,KAAK6yC,YAAYjgD,EAAKyC,OAAOiF,KAAOA,EAAI,GAC1C0F,KAAKuY,MAAM3lB,EAAKyC,OAAOiF,GAAG6M,MAAO+hB,GAAWiC,sBAIhD,uDAA4BtwB,cAloEV,gDAqoEpB,SAAmCi6C,GACjC,6EAAgDA,IAAkE,IAApD90C,KAAKmI,MAAM4R,UAAU0D,QAAQzd,KAAKmI,MAAMhB,UAtoEpF,6BAyoEpB,SAAgB09B,EAAMT,EAAUnwB,EAAU6wB,GAAS,WACjD,GAAkB,eAAdD,EAAK37B,MAAuC,UAAd27B,EAAK3pC,OAAgE,IAA5C8E,KAAKmI,MAAM4R,UAAU0D,QAAQ2mB,GAAkB,CACxGpkC,KAAKsZ,OACL,IAAM1mB,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GACxCrhB,EAAKoF,OAAS6sC,EACdjyC,EAAKiI,UAAYmF,KAAK+0C,6BAA6Bp0C,EAAQmB,QAAQ,GACnE+iC,EAAO7kC,KAAK+jC,WAAWnxC,EAAM,uBACxB,GAAkB,eAAdiyC,EAAK37B,MAAuC,UAAd27B,EAAK3pC,MAAoB8E,KAAKklB,aAAa,KAAM,CACxF,IAAM/c,EAAQnI,KAAKmI,MAAMlJ,QACnBqD,EAAQtC,KAAKo0C,UAAS,SAAAG,GAAK,OAAI,EAAKS,kCAAkC5Q,EAAUnwB,IAAasgC,MAASpsC,GAC5G,IAAK7F,EAAM8S,QAAU9S,EAAMkkB,QAAS,OAAOlkB,EAAM1P,KACjD,IAAMy+C,EAASrxC,KAAKo0C,UAAS,+DAA4BvP,EAAMT,EAAUnwB,EAAU6wB,KAAU38B,GAC7F,GAAIkpC,EAAOz+C,OAASy+C,EAAOj8B,MAAO,OAAOi8B,EAAOz+C,KAEhD,GAAI0P,EAAM1P,KAER,OADAoN,KAAKmI,MAAQ7F,EAAMgkB,UACZhkB,EAAM1P,KAGf,GAAIy+C,EAAOz+C,KAET,OADAoN,KAAKmI,MAAQkpC,EAAO/qB,UACb+qB,EAAOz+C,KAGhB,MAAM0P,EAAM8S,OAASi8B,EAAOj8B,MAG9B,0DAA6ByvB,EAAMT,EAAUnwB,EAAU6wB,KApqErC,4BAuqEpB,SAAeD,EAAMT,EAAUnwB,EAAU6wB,EAASmQ,GAAgB,WAChE,GAAIj1C,KAAKwU,MAAM7T,EAAQ0B,cAAgBrC,KAAKk1C,sBAAuB,CAGjE,GAFAD,EAAelQ,qBAAsB,EAEjCD,EAEF,OADAmQ,EAAehQ,MAAO,EACfJ,EAGT7kC,KAAKsZ,OACL,IAAM1mB,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GAMxC,OALArhB,EAAKoF,OAAS6sC,EACdjyC,EAAKuiD,cAAgBn1C,KAAKsrC,sCAC1BtrC,KAAK+lC,OAAOplC,EAAQkB,QACpBjP,EAAKiI,UAAYmF,KAAK+0C,6BAA6Bp0C,EAAQmB,QAAQ,GACnElP,EAAK6xC,UAAW,EACTzkC,KAAKo1C,qBAAqBxiD,GAAM,GAClC,IAAKkyC,GAAW9kC,KAAKq1C,oBAAsBr1C,KAAKklB,aAAa,KAAM,CACxE,IAAMtyB,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GACxCrhB,EAAKoF,OAAS6sC,EACd,IAAMwM,EAASrxC,KAAKo0C,UAAS,WAK3B,OAJAxhD,EAAKuiD,cAAgB,EAAKG,+CAC1B,EAAKvP,OAAOplC,EAAQkB,QACpBjP,EAAKiI,UAAY,EAAKk6C,6BAA6Bp0C,EAAQmB,QAAQ,GAC/DmzC,EAAelQ,sBAAqBnyC,EAAK6xC,UAAW,GACjD,EAAK2Q,qBAAqBxiD,EAAMqiD,EAAelQ,wBAGxD,GAAIsM,EAAOz+C,KAET,OADIy+C,EAAOj8B,QAAOpV,KAAKmI,MAAQkpC,EAAO/qB,WAC/B+qB,EAAOz+C,KAIlB,yDAA4BiyC,EAAMT,EAAUnwB,EAAU6wB,EAASmQ,KAzsE7C,+BA4sEpB,SAAkBriD,GAAM,WAClB2iD,EAAQ,KAERv1C,KAAKq1C,oBAAsBr1C,KAAKklB,aAAa,OAC/CqwB,EAAQv1C,KAAKo0C,UAAS,kBAAM,EAAKkB,kDAAgD1iD,MAGnFA,EAAKuiD,cAAgBI,EACrB,qDAAwB3iD,KAptEN,+CAutEpB,SAAkCwxC,EAAUnwB,GAC1C,IAAMrhB,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GAExC,GADAjU,KAAKw1C,oBAAoB5iD,GACpBoN,KAAKy1C,WAAW7iD,GACrB,OAAOoN,KAAK01C,qBAAqB9iD,OAAMV,GAAW,KA3tEhC,mCA8tEpB,SAAsBuU,GACpB,IAAM6S,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAEpD,GAAa,KAATvN,GAAwB,KAAT6S,GAAetZ,KAAKmI,MAAMkS,eAI3C,OAHAra,KAAKmI,MAAMkS,gBAAiB,EAC5Bra,KAAKmI,MAAM6L,KAAO,OAClBhU,KAAK0c,YAIP,yDAA4BjW,KAxuEV,gCA2uEpB,SAAmBA,GACjB,IAAM6S,EAAOtZ,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GAEvC,MAATvN,GAAyB,MAAT6S,EAKpB,sDAAyB7S,GAJvBzG,KAAKye,SAAS9d,EAAQiB,UAAW,KA/uEjB,2BAsvEpB,SAAcvP,EAAMd,GAClB,IAAMokD,EAAW,EAAH,+CAAuBtjD,EAAMd,GAM3C,OAJIyO,KAAKmI,MAAMkS,gBACbra,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKkV,GAAW+C,yBAGjC0pB,IA7vEW,8BAgwEpB,WACE,GAAI31C,KAAKwJ,UAAU,iBAAmBxJ,KAAK41C,kBAQzC,OAPI51C,KAAKmI,MAAMkS,gBACbra,KAAKmlB,WAAW,KAAM+D,GAAW0B,mBAGnC5qB,KAAK61C,2BACL71C,KAAKmI,MAAM6L,KAAOhU,KAAK41C,uBACvB51C,KAAKmI,MAAMkS,gBAAiB,GAI9B,IAAIra,KAAKmI,MAAMkS,eAWf,4DAVE,IAAMjT,EAAMpH,KAAKgJ,MAAMyU,QAAQ,MAAOzd,KAAKmI,MAAM6L,KAAO,GAExD,IAAa,IAAT5M,EACF,MAAMpH,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAM,EAAGnK,EAAckJ,qBAGrD/S,KAAKmI,MAAM6L,IAAM5M,EAAM,IAnxEP,6BA0xEpB,WAME,IALA,IACE4M,EACEhU,KAAKmI,MADP6L,IAEE8hC,EAA4B,EAEzB,CAAC,GAAI,GAAG71B,SAASjgB,KAAKgJ,MAAMC,WAAW+K,EAAM8hC,KAClDA,IAGF,IAAMC,EAAM/1C,KAAKgJ,MAAMC,WAAW6sC,EAA4B9hC,GACxDgiC,EAAMh2C,KAAKgJ,MAAMC,WAAW6sC,EAA4B9hC,EAAM,GAEpE,OAAY,KAAR+hC,GAAsB,KAARC,EACTF,EAA4B,EAG2D,iBAA5F91C,KAAKgJ,MAAMxO,MAAMs7C,EAA4B9hC,EAAK8hC,EAA4B9hC,EAAM,IAC/E8hC,EAA4B,GAGzB,KAARC,GAAsB,KAARC,GACTF,IAhzES,sCAszEpB,WAGE,IAAa,IAFD91C,KAAKgJ,MAAMyU,QAAQ,KAAMzd,KAAKmI,MAAM6L,KAG9C,MAAMhU,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAckJ,uBA1zE/B,sDA8zEpB,SAAyCiB,EAAzC,GAGG,IAFDiiC,EAEC,EAFDA,SACAC,EACC,EADDA,WAEAl2C,KAAKuY,MAAMvE,EAAKkV,GAAWO,gCAAiCysB,EAAYD,KAl0EtD,4CAq0EpB,SAA+BjiC,EAA/B,GAGG,IAFDiiC,EAEC,EAFDA,SACAC,EACC,EADDA,WAEM/L,EAAa+L,EAAW,GAAGC,cAAgBD,EAAW17C,MAAM,GAClEwF,KAAKuY,MAAMvE,EAAKkV,GAAWe,sBAAuBisB,EAAY/L,EAAY8L,KA10ExD,8CA60EpB,SAAiCjiC,EAAjC,GAGG,IAFDiiC,EAEC,EAFDA,SACAC,EACC,EADDA,WAEAl2C,KAAKuY,MAAMvE,EAAKkV,GAAWQ,wBAAyBwsB,EAAYD,KAj1E9C,mDAo1EpB,SAAsCjiC,EAAtC,GAEG,IADDiiC,EACC,EADDA,SAEAj2C,KAAKuY,MAAMvE,EAAKkV,GAAWS,6BAA8BssB,KAv1EvC,8CA01EpB,SAAiCjiC,EAAjC,GAGG,IAFDiiC,EAEC,EAFDA,SACAG,EACC,EADDA,aAEA,OAAOp2C,KAAKuY,MAAMvE,EAAsB,OAAjBoiC,EAAwBltB,GAAWW,uCAAyCX,GAAWU,wBAAyBqsB,EAAUG,KA91E/H,mDAi2EpB,SAAsCpiC,EAAtC,GAIG,IAHDiiC,EAGC,EAHDA,SACAI,EAEC,EAFDA,aACAH,EACC,EADDA,WAEIlhC,EAAU,KAEd,OAAQqhC,GACN,IAAK,UACL,IAAK,SACL,IAAK,SACHrhC,EAAUkU,GAAWY,wCACrB,MAEF,IAAK,SACH9U,EAAUkU,GAAWa,uCACrB,MAEF,QACE/U,EAAUkU,GAAWc,wCAGzB,OAAOhqB,KAAKuY,MAAMvE,EAAKgB,EAASihC,EAAUC,EAAYG,KAv3EpC,qDA03EpB,SAAwCriC,EAAxC,GAGG,IAFDiiC,EAEC,EAFDA,SACAC,EACC,EADDA,WAEAl2C,KAAKuY,MAAMvE,EAAKkV,GAAWgB,+BAAgC+rB,EAAUC,KA93EnD,gEAi4EpB,SAAmDliC,EAAnD,GAEG,IADDiiC,EACC,EADDA,SAEAj2C,KAAKuY,MAAMvE,EAAKkV,GAAWiB,0CAA2C8rB,KAp4EpD,gCAu4EpB,WAAqB,WACb7R,EAAWpkC,KAAKmI,MAAMhB,MAEtBmvC,EAAY,kBAAM,EAAK9hC,MAAM7T,EAAQoB,QAAU,EAAKyS,MAAM7T,EAAQgB,SAExE,OAAQ3B,KAAKmI,MAAMe,MACjB,KAAKvI,EAAQC,IAET,IAAM21C,EAAUv2C,KAAKw2C,oBAAoBx2C,KAAKmI,MAAM9W,OAEpD,OAAIilD,IACK,CACLptC,KAAM,SACN8K,IAAKuiC,EAAQpvC,MACb9V,MAAOklD,GAIJ,CACLrtC,KAAM,UACN8K,IAAKowB,GAIX,KAAKzjC,EAAQK,OAET,IAAMu1C,EAAUv2C,KAAKy2C,mBAAmBz2C,KAAKmI,MAAM9W,OAEnD,OAAIilD,IACK,CACLptC,KAAM,SACN8K,IAAKuiC,EAAQpvC,MACb9V,MAAOklD,GAIJ,CACLrtC,KAAM,UACN8K,IAAKowB,GAIX,KAAKzjC,EAAQkF,MACb,KAAKlF,EAAQmF,OAET,IAAMywC,EAAUv2C,KAAK02C,oBAAoB12C,KAAKwU,MAAM7T,EAAQkF,QAE5D,OAAIywC,IACK,CACLptC,KAAM,UACN8K,IAAKuiC,EAAQpvC,MACb9V,MAAOklD,GAIJ,CACLrtC,KAAM,UACN8K,IAAKowB,GAIX,QACE,MAAO,CACLl7B,KAAM,UACN8K,IAAKowB,MAv8EO,+BA48EpB,WACE,IAAMpwB,EAAMhU,KAAKmI,MAAMhB,MAMvB,MAAO,CACL1K,GANSuD,KAAKioC,iBAAgB,GAO9B1rB,KANWvc,KAAKylB,IAAI9kB,EAAQkC,IAAM7C,KAAK22C,qBAAuB,CAC9DztC,KAAM,OACN8K,UAj9EgB,+CAy9EpB,SAAkCA,EAAK8B,EAAS8gC,GAC9C,IACEP,EACEvgC,EADFugC,aAGmB,OAAjBA,GAIAA,IAAiBO,GACnB52C,KAAK62C,sCAAsC7iC,EAAK8B,KAn+EhC,6BAu+EpB,YAaE,IAVC,IAFDmgC,EAEC,EAFDA,SACAI,EACC,EADDA,aAEMS,EAAY,IAAIj/C,IAChBk/C,EAAU,CACdC,eAAgB,GAChBC,cAAe,GACfC,cAAe,GACfC,iBAAkB,IAEhBC,GAAoB,GAEhBp3C,KAAKwU,MAAM7T,EAAQgB,SAAS,CAClC,GAAI3B,KAAKylB,IAAI9kB,EAAQ4B,UAAW,CAC9B60C,GAAoB,EACpB,MAGF,IAAMC,EAAar3C,KAAK8jC,YACxB,EAGI9jC,KAAKs3C,oBAFP76C,EADF,EACEA,GACA8f,EAFF,EAEEA,KAEI25B,EAAaz5C,EAAGvB,KAEtB,GAAmB,KAAfg7C,EAAJ,CAII,SAAS3/B,KAAK2/B,IAChBl2C,KAAKu3C,+BAA+B96C,EAAG0K,MAAO,CAC5C8uC,WACAC,eAIAY,EAAUz5C,IAAI64C,IAChBl2C,KAAKw3C,iCAAiC/6C,EAAG0K,MAAO,CAC9C8uC,WACAC,eAIJY,EAAU7+C,IAAIi+C,GACd,IAAMpgC,EAAU,CACdmgC,WACAI,eACAH,cAIF,OAFAmB,EAAW56C,GAAKA,EAER8f,EAAKrT,MACX,IAAK,UAEDlJ,KAAKy3C,kCAAkCl7B,EAAKvI,IAAK8B,EAAS,WAC1DuhC,EAAW96B,KAAOA,EAAKlrB,MACvB0lD,EAAQC,eAAehiD,KAAKgL,KAAK+jC,WAAWsT,EAAY,sBACxD,MAGJ,IAAK,SAEDr3C,KAAKy3C,kCAAkCl7B,EAAKvI,IAAK8B,EAAS,UAC1DuhC,EAAW96B,KAAOA,EAAKlrB,MACvB0lD,EAAQE,cAAcjiD,KAAKgL,KAAK+jC,WAAWsT,EAAY,qBACvD,MAGJ,IAAK,SAEDr3C,KAAKy3C,kCAAkCl7B,EAAKvI,IAAK8B,EAAS,UAC1DuhC,EAAW96B,KAAOA,EAAKlrB,MACvB0lD,EAAQG,cAAcliD,KAAKgL,KAAK+jC,WAAWsT,EAAY,qBACvD,MAGJ,IAAK,UAED,MAAMr3C,KAAK62C,sCAAsCt6B,EAAKvI,IAAK8B,GAG/D,IAAK,OAED,OAAQugC,GACN,IAAK,UACHr2C,KAAK03C,yCAAyCn7B,EAAKvI,IAAK8B,GACxD,MAEF,IAAK,SACH9V,KAAK23C,wCAAwCp7B,EAAKvI,IAAK8B,GACvD,MAEF,QACEihC,EAAQI,iBAAiBniD,KAAKgL,KAAK+jC,WAAWsT,EAAY,yBAK/Dr3C,KAAKwU,MAAM7T,EAAQgB,SACtB3B,KAAK+lC,OAAOplC,EAAQoB,QAIxB,MAAO,CACLg1C,UACAK,uBAjlFgB,mCAqlFpB,SAAsBQ,EAAoBT,EAA1C,GAEG,IADDlB,EACC,EADDA,SAEA,GAAkC,IAA9B2B,EAAmB7+C,OACrB,OAAOo+C,EACF,GAAgC,IAA5BA,EAAiBp+C,OAC1B,OAAO6+C,EACF,GAAIT,EAAiBp+C,OAAS6+C,EAAmB7+C,OAAQ,WACzC6+C,GADyC,IAC9D,2BAAyC,KAA9B9F,EAA8B,QACvC9xC,KAAK63C,mDAAmD/F,EAAO3qC,MAAO,CACpE8uC,cAH0D,8BAO9D,OAAOkB,EACF,UACgBA,GADhB,IACL,2BAAuC,KAA5BrF,EAA4B,QACrC9xC,KAAK63C,mDAAmD/F,EAAO3qC,MAAO,CACpE8uC,cAHC,8BAOL,OAAO2B,IA3mFS,uCA+mFpB,YAEG,IADD3B,EACC,EADDA,SAEA,GAAIj2C,KAAK0lB,cAAc,MAAO,CAC5B,IAAK1lB,KAAKwU,MAAM7T,EAAQzF,MACtB,MAAM8E,KAAK83C,iCAAiC93C,KAAKmI,MAAMhB,MAAO,CAC5D8uC,WACAG,aAAc,OAIlB,IACE/kD,EACE2O,KAAKmI,MADP9W,MAWF,OATA2O,KAAKsZ,OAES,YAAVjoB,GAAiC,WAAVA,GAAgC,WAAVA,GAAgC,WAAVA,GACrE2O,KAAK83C,iCAAiC93C,KAAKmI,MAAMhB,MAAO,CACtD8uC,WACAG,aAAc/kD,IAIXA,EAGT,OAAO,OAzoFW,0BA4oFpB,SAAauB,EAAb,GAGG,WAFDqjD,EAEC,EAFDA,SACA8B,EACC,EADDA,QAEM1B,EAAer2C,KAAKg4C,0BAA0B,CAClD/B,aAEFj2C,KAAK+lC,OAAOplC,EAAQa,QACpB,MAGIxB,KAAKi4C,gBAAgB,CACvBhC,WACAI,iBAJAU,EADF,EACEA,QACAK,EAFF,EAEEA,kBAOF,OAFAxkD,EAAKwkD,kBAAoBA,EAEjBf,GACN,IAAK,UAIH,OAHAzjD,EAAKyjD,cAAe,EACpBzjD,EAAKmkD,QAAUA,EAAQC,eACvBh3C,KAAK+lC,OAAOplC,EAAQgB,QACb3B,KAAK+jC,WAAWnxC,EAAM,mBAE/B,IAAK,SAIH,OAHAA,EAAKyjD,cAAe,EACpBzjD,EAAKmkD,QAAUA,EAAQE,cACvBj3C,KAAK+lC,OAAOplC,EAAQgB,QACb3B,KAAK+jC,WAAWnxC,EAAM,kBAE/B,IAAK,SAMH,OALAA,EAAKyjD,cAAe,EACpBzjD,EAAKmkD,QAAU/2C,KAAKk4C,sBAAsBnB,EAAQG,cAAeH,EAAQI,iBAAkB,CACzFlB,aAEFj2C,KAAK+lC,OAAOplC,EAAQgB,QACb3B,KAAK+jC,WAAWnxC,EAAM,kBAE/B,IAAK,SAGH,OAFAA,EAAKmkD,QAAUA,EAAQI,iBACvBn3C,KAAK+lC,OAAOplC,EAAQgB,QACb3B,KAAK+jC,WAAWnxC,EAAM,kBAE/B,QAEI,IAAM6mC,EAAQ,WAGZ,OAFA7mC,EAAKmkD,QAAU,GACf,EAAKhR,OAAOplC,EAAQgB,QACb,EAAKoiC,WAAWnxC,EAAM,mBAG/BA,EAAKyjD,cAAe,EACpB,IAAM8B,EAAWpB,EAAQC,eAAej+C,OAClCq/C,EAAUrB,EAAQE,cAAcl+C,OAChCs/C,EAAUtB,EAAQG,cAAcn+C,OAChCu/C,EAAevB,EAAQI,iBAAiBp+C,OAE9C,GAAKo/C,GAAaC,GAAYC,GAAYC,EAEnC,IAAKH,GAAaC,EAMlB,KAAKA,IAAYC,GAAWF,GAAYG,EAAc,WACtCvB,EAAQI,kBAD8B,IAC3D,2BAA+C,KAApCrF,EAAoC,QAC7C9xC,KAAK03C,yCAAyC5F,EAAO3qC,MAAO,CAC1D8uC,WACAC,WAAYpE,EAAOr1C,GAAGvB,QAJiC,8BAU3D,OAFAtI,EAAKmkD,QAAUA,EAAQC,eACvBh3C,KAAK+lC,OAAOplC,EAAQgB,QACb3B,KAAK+jC,WAAWnxC,EAAM,mBACxB,IAAKulD,IAAaE,GAAWD,GAAWE,EAAc,WACtCvB,EAAQI,kBAD8B,IAC3D,2BAA+C,KAApCrF,EAAoC,QAC7C9xC,KAAK23C,wCAAwC7F,EAAO3qC,MAAO,CACzD8uC,WACAC,WAAYpE,EAAOr1C,GAAGvB,QAJiC,8BAU3D,OAFAtI,EAAKmkD,QAAUA,EAAQE,cACvBj3C,KAAK+lC,OAAOplC,EAAQgB,QACb3B,KAAK+jC,WAAWnxC,EAAM,kBAK7B,OAHAoN,KAAKu4C,sCAAsCR,EAAS,CAClD9B,aAEKxc,IA3BP,OAJA7mC,EAAKmkD,QAAU/2C,KAAKk4C,sBAAsBnB,EAAQG,cAAeH,EAAQI,iBAAkB,CACzFlB,aAEFj2C,KAAK+lC,OAAOplC,EAAQgB,QACb3B,KAAK+jC,WAAWnxC,EAAM,kBAN7B,OAAO6mC,OAtsFG,sCA6uFpB,SAAyB7mC,GACvB,IAAM6J,EAAKuD,KAAKioC,kBAMhB,OALAr1C,EAAK6J,GAAKA,EACV7J,EAAKc,KAAOsM,KAAKw4C,aAAax4C,KAAK8jC,YAAa,CAC9CmS,SAAUx5C,EAAGvB,KACb68C,QAASt7C,EAAG0K,QAEPnH,KAAK+jC,WAAWnxC,EAAM,qBApvFX,iCAuvFpB,WACE,IAAM0mB,EAAOtZ,KAAKgd,iBAElB,GAAoC,KAAhChd,KAAKgJ,MAAMC,WAAWqQ,GAAc,CACtC,IAAMm/B,EAAYz4C,KAAKgJ,MAAMC,WAAWqQ,EAAO,GAC/C,OAAqB,KAAdm/B,GAAkC,KAAdA,EAG7B,OAAO,IA/vFW,2CAkwFpB,SAA8B7lD,GAC5B,MAAqB,uBAAdA,EAAKsW,KAAgCtW,EAAKpB,WAAaoB,MAnwF5C,GAAkBiL,IA29MtC66C,WAnyFgB,SAAA76C,GAAU,oIAC1B,WACE,OAAOogC,KAFiB,4BAK1B,WACE,OAAOj+B,KAAKwU,MAAM7T,EAAQzF,QANF,sCAS1B,WACE,OAAQ8E,KAAKwU,MAAM7T,EAAQQ,WAAanB,KAAKwU,MAAM7T,EAAQa,SAAWxB,KAAKwU,MAAM7T,EAAQoD,OAAS/D,KAAKwU,MAAM7T,EAAQ4B,WAAavC,KAAKwU,MAAM7T,EAAQM,cAAgBjB,KAAK24C,2BAA6B34C,KAAK2lB,0BAVpL,0CAa1B,WAEE,OADA3lB,KAAKsZ,OACEtZ,KAAK44C,6BAfY,6BAkB1B,SAAgBC,GACd,GAAK74C,KAAKwU,MAAM7T,EAAQzF,MAAxB,CAIA,IAAMwmC,EAAW1hC,KAAKmI,MAAM9W,MAE5B,OAA4C,IAAxCwnD,EAAiBp7B,QAAQikB,IAAoB1hC,KAAK84C,WAAW94C,KAAK+4C,6BAA6B9mD,KAAK+N,OAC/F0hC,OADT,KAzBwB,8BAgC1B,SAAiBsX,EAAUH,EAAkBI,EAAqB1jC,GAahE,IAb+E,WACzE2jC,EAAe,SAACllC,EAAK0tB,EAAUyX,EAAQC,GACvC1X,IAAayX,GAAUH,EAASI,IAClC,EAAK7gC,MAAMvE,EAAKuqB,GAASyB,sBAAuBmZ,EAAQC,IAItDC,EAAe,SAACrlC,EAAK0tB,EAAU4X,EAAMC,IACrCP,EAASM,IAAS5X,IAAa6X,GAAQP,EAASO,IAAS7X,IAAa4X,IACxE,EAAK/gC,MAAMvE,EAAKuqB,GAASkB,sBAAuB6Z,EAAMC,MAIjD,CACP,IAAMnV,EAAWpkC,KAAKmI,MAAMhB,MACtBu6B,EAAW1hC,KAAKw5C,gBAAgBX,EAAiBhgD,OAA8B,MAAvBogD,EAA8BA,EAAsB,KAClH,IAAKvX,EAAU,MAEXD,GAAmBC,GACjBsX,EAASS,cACXz5C,KAAKuY,MAAM6rB,EAAU7F,GAASW,iCAE9Bga,EAAa9U,EAAU1C,EAAUA,EAAU,YAC3CwX,EAAa9U,EAAU1C,EAAUA,EAAU,UAC3CwX,EAAa9U,EAAU1C,EAAUA,EAAU,YAC3CsX,EAASS,cAAgB/X,IAGvBxwC,OAAOwoD,eAAeh/C,KAAKs+C,EAAUtX,GACvC1hC,KAAKuY,MAAM6rB,EAAU7F,GAASY,kBAAmBuC,IAEjDwX,EAAa9U,EAAU1C,EAAU,SAAU,YAC3CwX,EAAa9U,EAAU1C,EAAU,SAAU,YAC3CwX,EAAa9U,EAAU1C,EAAU,WAAY,YAC7CwX,EAAa9U,EAAU1C,EAAU,WAAY,YAC7C2X,EAAajV,EAAU1C,EAAU,UAAW,YAC5C2X,EAAajV,EAAU1C,EAAU,SAAU,aAG7CsX,EAAStX,IAAY,GAGI,MAAvBuX,GAA+BA,EAAoBh5B,SAASyhB,IAC9D1hC,KAAKuY,MAAM6rB,EAAU7uB,EAAemsB,MA3EhB,gCAgF1B,SAAmBtrC,GACjB,OAAQA,GACN,IAAK,cACL,IAAK,cACH,OAAO4J,KAAKwU,MAAM7T,EAAQgB,QAE5B,IAAK,wBACH,OAAO3B,KAAKwU,MAAM7T,EAAQa,QAE5B,IAAK,oBACH,OAAOxB,KAAKwU,MAAM7T,EAAQW,UAE5B,IAAK,4BACH,OAAOtB,KAAKklB,aAAa,KAG7B,MAAM,IAAIkY,MAAM,iBAhGQ,yBAmG1B,SAAYhnC,EAAMujD,GAGhB,IAFA,IAAMtI,EAAS,IAEPrxC,KAAK45C,mBAAmBxjD,IAC9Bi7C,EAAOr8C,KAAK2kD,KAGd,OAAOtI,IA1GiB,kCA6G1B,SAAqBj7C,EAAMujD,GACzB,OAAOvb,GAAQp+B,KAAK65C,2BAA2BzjD,EAAMujD,GAAc,MA9G3C,wCAiH1B,SAA2BvjD,EAAMujD,EAAcG,GAG7C,IAFA,IAAMzI,EAAS,IAGTrxC,KAAK45C,mBAAmBxjD,IADrB,CAKP,IAAM2jD,EAAUJ,IAEhB,GAAe,MAAXI,EACF,OAKF,GAFA1I,EAAOr8C,KAAK+kD,IAER/5C,KAAKylB,IAAI9kB,EAAQoB,OAArB,CAIA,GAAI/B,KAAK45C,mBAAmBxjD,GAC1B,MAOF,YAJI0jD,GACF95C,KAAK+lC,OAAOplC,EAAQoB,SAMxB,OAAOsvC,IAhJiB,kCAmJ1B,SAAqBj7C,EAAMujD,EAAcK,EAASC,GAC3CA,IACCD,EACFh6C,KAAK+lC,OAAOplC,EAAQQ,UAEpBnB,KAAKssC,iBAAiB,MAI1B,IAAM+E,EAASrxC,KAAKk6C,qBAAqB9jD,EAAMujD,GAQ/C,OANIK,EACFh6C,KAAK+lC,OAAOplC,EAAQW,UAEpBtB,KAAKssC,iBAAiB,KAGjB+E,IApKiB,+BAuK1B,WACE,IAAMz+C,EAAOoN,KAAK8jC,YAmBlB,OAlBA9jC,KAAK+lC,OAAOplC,EAAQgF,SACpB3F,KAAK+lC,OAAOplC,EAAQkB,QAEf7B,KAAKwU,MAAM7T,EAAQK,SACtBhB,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAOo3B,GAAS+C,+BAGxC1uC,EAAKyG,SAAW2G,KAAK6lC,gBACrB7lC,KAAK+lC,OAAOplC,EAAQmB,QAEhB9B,KAAKylB,IAAI9kB,EAAQwB,OACnBvP,EAAKunD,UAAYn6C,KAAKo6C,mBAAkB,IAGtCp6C,KAAKklB,aAAa,OACpBtyB,EAAK2wC,eAAiBvjC,KAAKq6C,wBAGtBr6C,KAAK+jC,WAAWnxC,EAAM,kBA3LL,+BA8L1B,SAAkB0nD,GAGhB,IAFA,IAAI9U,EAASxlC,KAAKioC,kBAEXjoC,KAAKylB,IAAI9kB,EAAQwB,MAAM,CAC5B,IAAMvP,EAAOoN,KAAKmlC,gBAAgBK,GAClC5yC,EAAKsgD,KAAO1N,EACZ5yC,EAAK64C,MAAQzrC,KAAKioC,gBAAgBqS,GAClC9U,EAASxlC,KAAK+jC,WAAWnxC,EAAM,mBAGjC,OAAO4yC,IAxMiB,kCA2M1B,WACE,IAAM5yC,EAAOoN,KAAK8jC,YAOlB,OANAlxC,EAAK2nD,SAAWv6C,KAAKo6C,mBAAkB,IAElCp6C,KAAK2lB,yBAA2B3lB,KAAKklB,aAAa,OACrDtyB,EAAK2wC,eAAiBvjC,KAAKq6C,wBAGtBr6C,KAAK+jC,WAAWnxC,EAAM,qBAnNL,sCAsN1B,SAAyB4nD,GACvBx6C,KAAKsZ,OACL,IAAM1mB,EAAOoN,KAAKmlC,gBAAgBqV,GAIlC,OAHA5nD,EAAK6nD,cAAgBD,EACrB5nD,EAAK81C,eAAiB1oC,KAAK06C,uBAAsB,GACjD9nD,EAAK+nD,SAAU,EACR36C,KAAK+jC,WAAWnxC,EAAM,qBA5NL,iCA+N1B,WACE,IAAMA,EAAOoN,KAAK8jC,YAElB,OADA9jC,KAAKsZ,OACEtZ,KAAK+jC,WAAWnxC,EAAM,gBAlOL,8BAqO1B,WACE,IAAMA,EAAOoN,KAAK8jC,YASlB,OARA9jC,KAAK+lC,OAAOplC,EAAQsF,SAEhBjG,KAAKwU,MAAM7T,EAAQgF,SACrB/S,EAAKgoD,SAAW56C,KAAK66C,oBAErBjoD,EAAKgoD,SAAW56C,KAAKo6C,mBAAkB,GAGlCp6C,KAAK+jC,WAAWnxC,EAAM,iBA/OL,kCAkP1B,WACE,IAAMA,EAAOoN,KAAK8jC,YAIlB,OAHAlxC,EAAKsI,KAAO8E,KAAK86C,2BACjBloD,EAAKmoD,WAAa/6C,KAAKg7C,mBAAmBr6C,EAAQ8E,UAClD7S,EAAKtB,QAAU0O,KAAKg7C,mBAAmBr6C,EAAQkC,IACxC7C,KAAK+jC,WAAWnxC,EAAM,qBAvPL,sCA0P1B,WACE,GAAIoN,KAAKklB,aAAa,KACpB,OAAOllB,KAAKi7C,0BA5PU,mCAgQ1B,WACE,IAAMroD,EAAOoN,KAAK8jC,YAclB,OAZI9jC,KAAKklB,aAAa,MAAQllB,KAAKwU,MAAM7T,EAAQ+8B,aAC/C19B,KAAKsZ,OAELtZ,KAAKmlB,aAGPvyB,EAAKyC,OAAS2K,KAAKk7C,qBAAqB,4BAA6Bl7C,KAAKm7C,qBAAqBlpD,KAAK+N,OAAO,GAAO,GAEvF,IAAvBpN,EAAKyC,OAAO0D,QACdiH,KAAKuY,MAAM3lB,EAAKuU,MAAOo3B,GAASe,qBAG3Bt/B,KAAK+jC,WAAWnxC,EAAM,gCA/QL,2CAkR1B,WACE,OAAIoN,KAAK0sC,YAAYxjC,OAASvI,EAAQuE,QACpClF,KAAKsZ,OACEtZ,KAAKo7C,wBAGP,OAxRiB,6BA2R1B,SAAgBC,EAAaC,GAC3B,IAAMC,EAAsBF,IAAgB16C,EAAQ2B,MACpDg5C,EAAU/X,eAAiBvjC,KAAKw7C,2BAChCx7C,KAAK+lC,OAAOplC,EAAQkB,QACpBy5C,EAAUG,WAAaz7C,KAAK07C,kCAExBH,GAEOv7C,KAAKwU,MAAM6mC,MADpBC,EAAU5S,eAAiB1oC,KAAK27C,qCAAqCN,MAlS/C,4CAwS1B,WAAiC,WAC/B,OAAOr7C,KAAK47C,iBAAiBj7C,EAAQmB,OAAQ,IAAI3N,KAAI,SAAA+rB,GAKnD,MAJqB,eAAjBA,EAAQhX,MAA0C,gBAAjBgX,EAAQhX,MAA2C,kBAAjBgX,EAAQhX,MAA6C,iBAAjBgX,EAAQhX,MACjH,EAAKqP,MAAM2H,EAAQ/Y,MAAOo3B,GAASiD,kCAAmCthB,EAAQhX,MAGzEgX,OA9Se,wCAkT1B,WACOlgB,KAAKylB,IAAI9kB,EAAQoB,QAAW/B,KAAK8lB,oBACpC9lB,KAAK+lC,OAAOplC,EAAQqB,QApTE,oCAwT1B,SAAuB5L,EAAMxD,GAG3B,OAFAoN,KAAK67C,gBAAgBl7C,EAAQsB,MAAOrP,GACpCoN,KAAK87C,6BACE97C,KAAK+jC,WAAWnxC,EAAMwD,KA3TL,6CA8T1B,WAEE,OADA4J,KAAKsZ,OACEtZ,KAAKylB,IAAI9kB,EAAQzF,OAAS8E,KAAKwU,MAAM7T,EAAQsB,SAhU5B,sCAmU1B,SAAyBrP,GACvB,GAAMoN,KAAKwU,MAAM7T,EAAQQ,WAAanB,KAAK+7C,YAAY/7C,KAAKg8C,gCAAgC/pD,KAAK+N,OAAjG,CAIAA,KAAK+lC,OAAOplC,EAAQQ,UACpB,IAAM1E,EAAKuD,KAAKioC,kBAChBxrC,EAAGisC,eAAiB1oC,KAAK06C,wBACzB16C,KAAK2oC,iBAAiBlsC,GACtBuD,KAAK+lC,OAAOplC,EAAQW,UACpB1O,EAAK6oD,WAAa,CAACh/C,GACnB,IAAMyM,EAAOlJ,KAAKi8C,2BAGlB,OAFI/yC,IAAMtW,EAAK81C,eAAiBx/B,GAChClJ,KAAK87C,6BACE97C,KAAK+jC,WAAWnxC,EAAM,uBAjVL,8CAoV1B,SAAiCA,EAAMspD,GACjCl8C,KAAKylB,IAAI9kB,EAAQyB,YAAWxP,EAAK6xC,UAAW,GAChD,IAAM0X,EAAUvpD,EAEhB,GAAIoN,KAAKwU,MAAM7T,EAAQkB,SAAW7B,KAAKklB,aAAa,KAAM,CACpDg3B,GACFl8C,KAAKuY,MAAM3lB,EAAKuU,MAAOo3B,GAASoC,4BAGlC,IAAMpjC,EAAS4+C,EASf,GAPI5+C,EAAOnH,MAAQ4J,KAAKklB,aAAa,MACnCllB,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKuqB,GAASI,iCAGtC3+B,KAAK67C,gBAAgBl7C,EAAQsB,MAAO1E,GACpCyC,KAAK87C,6BAEe,QAAhBv+C,EAAOnH,KACLmH,EAAOk+C,WAAW1iD,OAAS,IAC7BiH,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAcU,gBAErCvK,KAAK6yC,YAAYt1C,EAAOk+C,WAAW,KACrCz7C,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKuqB,GAASG,yCAGnC,GAAoB,QAAhBnhC,EAAOnH,KAAgB,CAChC,GAAiC,IAA7BmH,EAAOk+C,WAAW1iD,OACpBiH,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAcW,oBACpC,CACL,IAAM4xC,EAAiB7+C,EAAOk+C,WAAW,GAErCz7C,KAAK6yC,YAAYuJ,IACnBp8C,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKuqB,GAASG,mCAGV,eAAxB0d,EAAelzC,MAAyBkzC,EAAe3X,UACzDzkC,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKuqB,GAASqC,uCAGV,gBAAxBwb,EAAelzC,MACjBlJ,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKuqB,GAASsC,mCAIpCtjC,EAAOmrC,gBACT1oC,KAAKuY,MAAMhb,EAAOmrC,eAAevhC,MAAOo3B,GAASuC,qCAGnDvjC,EAAOnH,KAAO,SAGhB,OAAO4J,KAAK+jC,WAAWxmC,EAAQ,qBAE/B,IAAMwpB,EAAWo1B,EACbD,IAAUn1B,EAASm1B,UAAW,GAClC,IAAMhzC,EAAOlJ,KAAKi8C,2BAGlB,OAFI/yC,IAAM6d,EAAS2hB,eAAiBx/B,GACpClJ,KAAK87C,6BACE97C,KAAK+jC,WAAWhd,EAAU,yBA/YX,+BAmZ1B,WACE,IAAMn0B,EAAOoN,KAAK8jC,YAElB,GAAI9jC,KAAKwU,MAAM7T,EAAQkB,SAAW7B,KAAKklB,aAAa,KAClD,OAAOllB,KAAKq8C,uBAAuB,6BAA8BzpD,GAGnE,GAAIoN,KAAKwU,MAAM7T,EAAQ0E,MAAO,CAC5B,IAAM5I,EAAKuD,KAAK8jC,YAGhB,OAFA9jC,KAAKsZ,OAEDtZ,KAAKwU,MAAM7T,EAAQkB,SAAW7B,KAAKklB,aAAa,KAC3CllB,KAAKq8C,uBAAuB,kCAAmCzpD,IAEtEA,EAAKoH,IAAMgG,KAAKs8C,iBAAiB7/C,EAAI,OAC9BuD,KAAKu8C,iCAAiC3pD,GAAM,IAIvDoN,KAAKw8C,iBAAiB5pD,EAAM,CAAC,YAAa,CAAC,UAAW,WAAY,UAAW,YAAa,SAAU,SAAU,YAAa2rC,GAASwB,6BACpI,IAAM0c,EAAMz8C,KAAK08C,yBAAyB9pD,GAE1C,OAAI6pD,IAIJz8C,KAAK28C,kBAAkB/pD,GAAM,GAExBA,EAAKoJ,UAA8B,eAAlBpJ,EAAKoH,IAAIkP,MAA4C,QAAlBtW,EAAKoH,IAAIkB,MAAoC,QAAlBtI,EAAKoH,IAAIkB,OAAmB8E,KAAK44C,6BACnHhmD,EAAKwD,KAAOxD,EAAKoH,IAAIkB,KACrB8E,KAAK28C,kBAAkB/pD,GAAM,IAGxBoN,KAAKu8C,iCAAiC3pD,IAAQA,EAAKspD,aApblC,gCAub1B,WACE,IAAMtpD,EAAOoN,KAAK8jC,YAElB,OADAlxC,EAAKmkD,QAAU/2C,KAAK48C,2BACb58C,KAAK+jC,WAAWnxC,EAAM,mBA1bL,sCA6b1B,WACEoN,KAAK+lC,OAAOplC,EAAQa,QACpB,IAAMu1C,EAAU/2C,KAAK68C,YAAY,cAAe78C,KAAK88C,kBAAkB7qD,KAAK+N,OAE5E,OADAA,KAAK+lC,OAAOplC,EAAQgB,QACbo1C,IAjciB,mCAoc1B,WAGE,OAFA/2C,KAAKsZ,OAEDtZ,KAAKylB,IAAI9kB,EAAQkD,SACZ7D,KAAKwlB,aAAa,aAGvBxlB,KAAKwlB,aAAa,aACpBxlB,KAAKsZ,SAGFtZ,KAAKwU,MAAM7T,EAAQQ,YAIxBnB,KAAKsZ,SAEAtZ,KAAK+8C,mBAIV/8C,KAAKsZ,OACEtZ,KAAKwU,MAAM7T,EAAQoF,UA1dF,wCA6d1B,WACE,IAAMnT,EAAOoN,KAAK8jC,YAGlB,OAFAlxC,EAAKsI,KAAO8E,KAAK86C,2BACjBloD,EAAKmoD,WAAa/6C,KAAKg9C,sBAAsBr8C,EAAQoF,KAC9C/F,KAAK+jC,WAAWnxC,EAAM,qBAjeL,+BAoe1B,WACE,IAAMA,EAAOoN,KAAK8jC,YA2BlB,OA1BA9jC,KAAK+lC,OAAOplC,EAAQa,QAEhBxB,KAAKwU,MAAM7T,EAAQkD,UACrBjR,EAAKspD,SAAWl8C,KAAKmI,MAAM9W,MAC3B2O,KAAKsZ,OACLtZ,KAAK6nC,iBAAiB,aACb7nC,KAAK0lB,cAAc,cAC5B9yB,EAAKspD,UAAW,GAGlBl8C,KAAK+lC,OAAOplC,EAAQQ,UACpBvO,EAAKw5C,cAAgBpsC,KAAKi9C,6BAC1BrqD,EAAKsqD,SAAWl9C,KAAK0lB,cAAc,MAAQ1lB,KAAKm9C,cAAgB,KAChEn9C,KAAK+lC,OAAOplC,EAAQW,UAEhBtB,KAAKwU,MAAM7T,EAAQkD,UACrBjR,EAAK6xC,SAAWzkC,KAAKmI,MAAM9W,MAC3B2O,KAAKsZ,OACLtZ,KAAK+lC,OAAOplC,EAAQyB,WACXpC,KAAKylB,IAAI9kB,EAAQyB,YAC1BxP,EAAK6xC,UAAW,GAGlB7xC,EAAK81C,eAAiB1oC,KAAKo9C,iBAC3Bp9C,KAAK4oC,YACL5oC,KAAK+lC,OAAOplC,EAAQgB,QACb3B,KAAK+jC,WAAWnxC,EAAM,kBAhgBL,8BAmgB1B,WAAmB,WACXA,EAAOoN,KAAK8jC,YAClBlxC,EAAKyqD,aAAer9C,KAAKk7C,qBAAqB,oBAAqBl7C,KAAKs9C,wBAAwBrrD,KAAK+N,OAAO,GAAM,GAClH,IAAIu9C,GAAsB,EACtBC,EAAkB,KA0BtB,OAzBA5qD,EAAKyqD,aAAaxpC,SAAQ,SAAA4pC,GACxB,IAAIC,EAGFx0C,EACEu0C,EADFv0C,MAGEq0C,GAAgC,eAATr0C,GAAkC,mBAATA,GAAwC,uBAATA,GAAiCu0C,EAAYhZ,UAC9H,EAAKlsB,MAAMklC,EAAYt2C,MAAOo3B,GAAS+B,4BAGzCid,EAAsBA,GAAgC,uBAATr0C,GAAiCu0C,EAAYhZ,UAAqB,mBAATv7B,EAEzF,eAATA,IAEFA,GADAu0C,EAAcA,EAAY/U,gBACPx/B,MAGrB,IAAMy0C,EAAqB,uBAATz0C,GAClBs0C,EAA0D,OAAvCE,EAAmBF,GAA2BE,EAAmBC,KAE5DA,GACtB,EAAKplC,MAAMklC,EAAYt2C,MAAOo3B,GAAS4B,qCAGpCngC,KAAK+jC,WAAWnxC,EAAM,iBAjiBL,qCAoiB1B,WACE,MAGIoN,KAAKmI,MAFAi8B,EADT,EACEj9B,MACA8M,EAFF,EAEEA,SAEIs0B,EAAOvoC,KAAKylB,IAAI9kB,EAAQ4B,UAC1B2G,EAAOlJ,KAAKm9C,cACV1Y,EAAWzkC,KAAKylB,IAAI9kB,EAAQyB,UAGlC,GAFgBpC,KAAKylB,IAAI9kB,EAAQsB,OAEpB,CACX,IAAM27C,EAAc59C,KAAKmlC,gBAAgBj8B,GACzC00C,EAAYnZ,SAAWA,EAEL,oBAAdv7B,EAAKA,MAA+BA,EAAKq6B,gBAAyC,eAAvBr6B,EAAKqxC,SAASrxC,MAG3ElJ,KAAKuY,MAAMrP,EAAK/B,MAAOo3B,GAAS0B,yBAChC2d,EAAY99C,MAAQoJ,GAHpB00C,EAAY99C,MAAQoJ,EAAKqxC,SAM3BqD,EAAYl6B,YAAc1jB,KAAKm9C,cAC/Bj0C,EAAOlJ,KAAK+jC,WAAW6Z,EAAa,2BAC/B,GAAInZ,EAAU,CACnB,IAAMoZ,EAAmB79C,KAAKmlC,gBAAgBj8B,GAC9C20C,EAAiBnV,eAAiBx/B,EAClCA,EAAOlJ,KAAK+jC,WAAW8Z,EAAkB,kBAG3C,GAAItV,EAAM,CACR,IAAMuV,EAAW99C,KAAK4oB,YAAYwb,EAAUnwB,GAC5C6pC,EAASpV,eAAiBx/B,EAC1BA,EAAOlJ,KAAK+jC,WAAW+Z,EAAU,cAGnC,OAAO50C,IAvkBiB,sCA0kB1B,WACE,IAAMtW,EAAOoN,KAAK8jC,YAIlB,OAHA9jC,KAAK+lC,OAAOplC,EAAQkB,QACpBjP,EAAK81C,eAAiB1oC,KAAKm9C,cAC3Bn9C,KAAK+lC,OAAOplC,EAAQmB,QACb9B,KAAK+jC,WAAWnxC,EAAM,yBA/kBL,8CAklB1B,SAAiCsW,EAAM60C,GACrC,IAAMnrD,EAAOoN,KAAK8jC,YASlB,MAPa,sBAAT56B,IACFtW,EAAKmrD,WAAaA,EACdA,GAAU/9C,KAAKsZ,OACnBtZ,KAAKsZ,QAGPtZ,KAAK67C,gBAAgBl7C,EAAQ2B,MAAO1P,GAC7BoN,KAAK+jC,WAAWnxC,EAAMsW,KA5lBL,oCA+lB1B,WAAyB,WACjBtW,EAAOoN,KAAK8jC,YAgBlB,OAdAlxC,EAAK2jD,QAAW,WACd,OAAQ,EAAKpuC,MAAMe,MACjB,KAAKvI,EAAQC,IACb,KAAKD,EAAQE,OACb,KAAKF,EAAQK,OACb,KAAKL,EAAQkF,MACb,KAAKlF,EAAQmF,OACX,OAAO,EAAK+/B,gBAEd,QACE,MAAM,EAAK1gB,cAVD,GAcTnlB,KAAK+jC,WAAWnxC,EAAM,mBAhnBL,wCAmnB1B,WACE,IAAMA,EAAOoN,KAAK8jC,YAElB,OADAlxC,EAAK2jD,QAAUv2C,KAAKg+C,eAAc,GAC3Bh+C,KAAK+jC,WAAWnxC,EAAM,mBAtnBL,uCAynB1B,WACE,OAAIoN,KAAKmI,MAAM+R,OAAela,KAAKm9C,cACnC,gEA3nBwB,gDA8nB1B,WACE,IAAMc,EAAcj+C,KAAKk+C,sBAEzB,OAAIl+C,KAAKwlB,aAAa,QAAUxlB,KAAK2lB,wBAC5B3lB,KAAKm+C,yBAAyBF,GAE9BA,IApoBe,iCAwoB1B,WACE,OAAQj+C,KAAKmI,MAAMe,MACjB,KAAKvI,EAAQzF,KACb,KAAKyF,EAAQuF,MACb,KAAKvF,EAAQiF,MAET,IAAMsD,EAAOlJ,KAAKwU,MAAM7T,EAAQuF,OAAS,gBAAkBlG,KAAKwU,MAAM7T,EAAQiF,OAAS,gBAvrBjG,SAA6BvU,GAC3B,OAAQA,GACN,IAAK,MACH,MAAO,eAET,IAAK,UACH,MAAO,mBAET,IAAK,SACH,MAAO,kBAET,IAAK,QACH,MAAO,iBAET,IAAK,SACH,MAAO,kBAET,IAAK,SACH,MAAO,kBAET,IAAK,SACH,MAAO,kBAET,IAAK,SACH,MAAO,kBAET,IAAK,YACH,MAAO,qBAET,IAAK,UACH,MAAO,mBAET,QACE,QAspB6G+sD,CAAoBp+C,KAAKmI,MAAM9W,OAExI,QAAaa,IAATgX,GAAmD,KAA7BlJ,KAAK+vC,oBAA4B,CACzD,IAAMn9C,EAAOoN,KAAK8jC,YAElB,OADA9jC,KAAKsZ,OACEtZ,KAAK+jC,WAAWnxC,EAAMsW,GAG/B,OAAOlJ,KAAKo7C,uBAGhB,KAAKz6C,EAAQK,OACb,KAAKL,EAAQC,IACb,KAAKD,EAAQE,OACb,KAAKF,EAAQkF,MACb,KAAKlF,EAAQmF,OACX,OAAO9F,KAAKq+C,yBAEd,KAAK19C,EAAQkD,QACX,GAAyB,MAArB7D,KAAKmI,MAAM9W,MAAe,CAC5B,IAAMuB,EAAOoN,KAAK8jC,YACZpnB,EAAY1c,KAAK0sC,YAEvB,GAAIhwB,EAAUxT,OAASvI,EAAQC,KAAO8b,EAAUxT,OAASvI,EAAQE,OAC/D,MAAMb,KAAKmlB,aAIb,OADAvyB,EAAK2jD,QAAUv2C,KAAKs+C,kBACbt+C,KAAK+jC,WAAWnxC,EAAM,iBAG/B,MAEF,KAAK+N,EAAQ2E,MACX,OAAOtF,KAAKu+C,qCAEd,KAAK59C,EAAQsF,QACX,OAAOjG,KAAKw+C,mBAEd,KAAK79C,EAAQgF,QACX,OAAO3F,KAAK66C,oBAEd,KAAKl6C,EAAQa,OACX,OAAOxB,KAAK+7C,YAAY/7C,KAAKy+C,sBAAsBxsD,KAAK+N,OAASA,KAAK0+C,oBAAsB1+C,KAAK2+C,qBAEnG,KAAKh+C,EAAQQ,SACX,OAAOnB,KAAK4+C,mBAEd,KAAKj+C,EAAQkB,OACX,OAAO7B,KAAK6+C,2BAEd,KAAKl+C,EAAQ6B,UACX,OAAOxC,KAAK8+C,6BAGhB,MAAM9+C,KAAKmlB,eArsBa,sCAwsB1B,WAGE,IAFA,IAAIjc,EAAOlJ,KAAK++C,uBAER/+C,KAAK2lB,yBAA2B3lB,KAAKylB,IAAI9kB,EAAQQ,WACvD,GAAInB,KAAKwU,MAAM7T,EAAQW,UAAW,CAChC,IAAM1O,EAAOoN,KAAKmlC,gBAAgBj8B,GAClCtW,EAAK8wB,YAAcxa,EACnBlJ,KAAK+lC,OAAOplC,EAAQW,UACpB4H,EAAOlJ,KAAK+jC,WAAWnxC,EAAM,mBACxB,CACL,IAAMA,EAAOoN,KAAKmlC,gBAAgBj8B,GAClCtW,EAAKo8C,WAAa9lC,EAClBtW,EAAKq8C,UAAYjvC,KAAKm9C,cACtBn9C,KAAK+lC,OAAOplC,EAAQW,UACpB4H,EAAOlJ,KAAK+jC,WAAWnxC,EAAM,uBAIjC,OAAOsW,IA1tBiB,iCA6tB1B,SAAoB81C,GAClB,IAAMpsD,EAAOoN,KAAK8jC,YASlB,OARA9jC,KAAK6nC,iBAAiBmX,GACtBpsD,EAAKosD,SAAWA,EAChBpsD,EAAK81C,eAAiB1oC,KAAKi/C,8BAEV,aAAbD,GACFh/C,KAAKk/C,iCAAiCtsD,GAGjCoN,KAAK+jC,WAAWnxC,EAAM,oBAvuBL,8CA0uB1B,SAAiCA,GAC/B,OAAQA,EAAK81C,eAAex/B,MAC1B,IAAK,cACL,IAAK,cACH,OAEF,QACElJ,KAAKuY,MAAM3lB,EAAKuU,MAAOo3B,GAAS4C,uBAjvBZ,8BAqvB1B,WACE,IAAMvuC,EAAOoN,KAAK8jC,YAClB9jC,KAAK6nC,iBAAiB,SACtB,IAAMuE,EAAgBpsC,KAAK8jC,YAG3B,OAFAsI,EAAclxC,KAAO8E,KAAK86C,2BAC1BloD,EAAKw5C,cAAgBpsC,KAAK+jC,WAAWqI,EAAe,mBAC7CpsC,KAAK+jC,WAAWnxC,EAAM,iBA3vBL,yCA8vB1B,WAA8B,WACtBosD,EAAW,CAAC,QAAS,SAAU,YAAYzmD,MAAK,SAAAwqB,GAAE,OAAI,EAAKyC,aAAazC,MAC9E,OAAOi8B,EAAWh/C,KAAKm/C,oBAAoBH,GAAYh/C,KAAKwlB,aAAa,SAAWxlB,KAAKo/C,mBAAqBp/C,KAAKq/C,6BAhwB3F,4CAmwB1B,SAA+BjpD,EAAMkpD,EAAsBN,GACzD,IAAMpsD,EAAOoN,KAAK8jC,YACZyb,EAAqBv/C,KAAKylB,IAAIu5B,GAC9BxpD,EAAQ,GAEd,GACEA,EAAMR,KAAKsqD,WACJt/C,KAAKylB,IAAIu5B,IAElB,OAAqB,IAAjBxpD,EAAMuD,QAAiBwmD,GAI3B3sD,EAAK4C,MAAQA,EACNwK,KAAK+jC,WAAWnxC,EAAMwD,IAJpBZ,EAAM,KA7wBS,6CAoxB1B,WACE,OAAOwK,KAAKw/C,+BAA+B,qBAAsBx/C,KAAKi/C,4BAA4BhtD,KAAK+N,MAAOW,EAAQ8C,cArxB9F,sCAwxB1B,WACE,OAAOzD,KAAKw/C,+BAA+B,cAAex/C,KAAKy/C,gCAAgCxtD,KAAK+N,MAAOW,EAAQ4C,aAzxB3F,qCA4xB1B,WACE,QAAIvD,KAAKklB,aAAa,MAIfllB,KAAKwU,MAAM7T,EAAQkB,SAAW7B,KAAK+7C,YAAY/7C,KAAK0/C,qCAAqCztD,KAAK+N,SAjyB7E,kCAoyB1B,WACE,GAAIA,KAAKwU,MAAM7T,EAAQzF,OAAS8E,KAAKwU,MAAM7T,EAAQ2E,OAEjD,OADAtF,KAAKsZ,QACE,EAGT,GAAItZ,KAAKwU,MAAM7T,EAAQa,QAAS,CAC9B,IAAIm+C,EAAoB,EAGxB,IAFA3/C,KAAKsZ,OAEEqmC,EAAoB,GACrB3/C,KAAKwU,MAAM7T,EAAQa,UACnBm+C,EACO3/C,KAAKwU,MAAM7T,EAAQgB,WAC1Bg+C,EAGJ3/C,KAAKsZ,OAGP,OAAO,EAGT,GAAItZ,KAAKwU,MAAM7T,EAAQQ,UAAW,CAChC,IAAIw+C,EAAoB,EAGxB,IAFA3/C,KAAKsZ,OAEEqmC,EAAoB,GACrB3/C,KAAKwU,MAAM7T,EAAQQ,YACnBw+C,EACO3/C,KAAKwU,MAAM7T,EAAQW,aAC1Bq+C,EAGJ3/C,KAAKsZ,OAGP,OAAO,EAGT,OAAO,IA50BiB,kDA+0B1B,WAGE,GAFAtZ,KAAKsZ,OAEDtZ,KAAKwU,MAAM7T,EAAQmB,SAAW9B,KAAKwU,MAAM7T,EAAQ4B,UACnD,OAAO,EAGT,GAAIvC,KAAK4/C,uBAAwB,CAC/B,GAAI5/C,KAAKwU,MAAM7T,EAAQsB,QAAUjC,KAAKwU,MAAM7T,EAAQoB,QAAU/B,KAAKwU,MAAM7T,EAAQyB,WAAapC,KAAKwU,MAAM7T,EAAQkC,IAC/G,OAAO,EAGT,GAAI7C,KAAKwU,MAAM7T,EAAQmB,UACrB9B,KAAKsZ,OAEDtZ,KAAKwU,MAAM7T,EAAQ2B,QACrB,OAAO,EAKb,OAAO,IAp2BiB,kDAu2B1B,SAAqC+4C,GAAa,WAChD,OAAOr7C,KAAK6/C,UAAS,WACnB,IAAMC,EAAI,EAAKhc,YACf,EAAKiC,OAAOsV,GACZ,IAAMzoD,EAAO,EAAKkxC,YACZ6W,IAAY,EAAK7B,WAAW,EAAKiH,4BAA4B9tD,KAAK,IAExE,GAAI0oD,GAAW,EAAKnmC,MAAM7T,EAAQ2E,OAAQ,CACxC,IAAI06C,EAAoB,EAAKzB,qCAa7B,MAX+B,eAA3ByB,EAAkB92C,MACpBtW,EAAK6nD,cAAgBuF,EACrBptD,EAAK+nD,SAAU,EACf/nD,EAAK81C,eAAiB,KACtBsX,EAAoB,EAAKjc,WAAWnxC,EAAM,qBAE1C,EAAK8hD,2BAA2BsL,EAAmBptD,GACnDotD,EAAkBrF,SAAU,GAG9BmF,EAAEpX,eAAiBsX,EACZ,EAAKjc,WAAW+b,EAAG,oBAG5B,IAAMG,EAAwB,EAAKlD,kBAAoB,EAAKjE,WAAW,EAAKoH,2BAA2BjuD,KAAK,IAE5G,IAAKguD,EACH,OAAKtF,GAIL/nD,EAAK6nD,cAAgB,EAAKxS,kBAC1Br1C,EAAK+nD,QAAUA,EACf/nD,EAAK81C,eAAiB,KACtBoX,EAAEpX,eAAiB,EAAK3E,WAAWnxC,EAAM,mBAClC,EAAKmxC,WAAW+b,EAAG,qBAPjB,EAAKpF,uBAAsB,EAAOoF,GAU7C,IAAM52C,EAAO,EAAKwxC,uBAAsB,GAKxC,OAJA9nD,EAAK6nD,cAAgBwF,EACrBrtD,EAAK81C,eAAiBx/B,EACtBtW,EAAK+nD,QAAUA,EACfmF,EAAEpX,eAAiB,EAAK3E,WAAWnxC,EAAM,mBAClC,EAAKmxC,WAAW+b,EAAG,yBAl5BJ,qDAs5B1B,WACE,OAAO9/C,KAAKwU,MAAM7T,EAAQsB,OAASjC,KAAK27C,qCAAqCh7C,EAAQsB,YAAS/P,IAv5BtE,sCA05B1B,WACE,OAAO8N,KAAKwU,MAAM7T,EAAQsB,OAASjC,KAAK06C,6BAA0BxoD,IA35B1C,4BA85B1B,WACE,OAAO8N,KAAKg7C,mBAAmBr6C,EAAQsB,SA/5Bf,wCAk6B1B,WACE,IAAMxF,EAAKuD,KAAKioC,kBAEhB,GAAIjoC,KAAKwlB,aAAa,QAAUxlB,KAAK2lB,wBAEnC,OADA3lB,KAAKsZ,OACE7c,IAv6Be,yCA26B1B,WACE,IAAKuD,KAAKwU,MAAM7T,EAAQzF,OAA8B,YAArB8E,KAAKmI,MAAM9W,OAAuB2O,KAAK2lB,wBACtE,OAAO,EAGT,IAAM3K,EAAchb,KAAKmI,MAAM6S,YAG/B,OAFAhb,KAAKsZ,UAEAtZ,KAAKwU,MAAM7T,EAAQzF,QAAU8E,KAAKwU,MAAM7T,EAAQ2E,UAIjD0V,GACFhb,KAAKuY,MAAMvY,KAAKmI,MAAM+L,aAAcrK,EAAcqD,2BAA4B,YAGzE,KA37BiB,mCA87B1B,WAA6D,WAAvCizC,IAAuC,yDAAtBL,EAAsB,uDAAlB9/C,KAAK8jC,YAK9C,OAJA9jC,KAAK6/C,UAAS,WACRM,GAAU,EAAKpa,OAAOplC,EAAQsB,OAClC69C,EAAEpX,eAAiB,EAAKyU,iBAEnBn9C,KAAK+jC,WAAW+b,EAAG,sBAn8BF,yBAs8B1B,WACExhB,GAAOt+B,KAAKmI,MAAM+R,QAClB,IAAMhR,EAAOlJ,KAAKogD,4BAElB,GAAIpgD,KAAK2lB,0BAA4B3lB,KAAKylB,IAAI9kB,EAAQ8E,UACpD,OAAOyD,EAGT,IAAMtW,EAAOoN,KAAKmlC,gBAAgBj8B,GAOlC,OANAtW,EAAKytD,UAAYn3C,EACjBtW,EAAK0tD,YAActgD,KAAKogD,4BACxBpgD,KAAK+lC,OAAOplC,EAAQyB,UACpBxP,EAAK2tD,SAAWvgD,KAAKm9C,cACrBn9C,KAAK+lC,OAAOplC,EAAQsB,OACpBrP,EAAK4tD,UAAYxgD,KAAKm9C,cACfn9C,KAAK+jC,WAAWnxC,EAAM,uBAr9BL,4CAw9B1B,WACE,OAAOoN,KAAKwlB,aAAa,aAAexlB,KAAK0sC,YAAYxjC,OAASvI,EAAQ0E,OAz9BlD,uCA49B1B,WACE,OAAIrF,KAAKygD,0BACAzgD,KAAK0gD,iCAAiC,kBAG3C1gD,KAAKwU,MAAM7T,EAAQ0E,MACdrF,KAAK0gD,iCAAiC,qBACpC1gD,KAAK2gD,iCACP3gD,KAAK0gD,iCAAiC,qBAAqB,GAG7D1gD,KAAK4gD,6BAv+BY,kCA0+B1B,WACE,IAAMhuD,EAAOoN,KAAK8jC,YAEZ5+B,EAASlF,KAAK6gD,gCAKpB,OAHAjuD,EAAK81C,eAAiBxjC,GAAUlF,KAAK8gD,sBACrC9gD,KAAKssC,iBAAiB,KACtB15C,EAAKpB,WAAawO,KAAKs+C,kBAChBt+C,KAAK+jC,WAAWnxC,EAAM,qBAl/BL,mCAq/B1B,SAAsBiK,GACpB,IAAMkkD,EAAgB/gD,KAAKmI,MAAMhB,MAC3B65C,EAAgBhhD,KAAKk6C,qBAAqB,wBAAyBl6C,KAAKihD,mCAAmChvD,KAAK+N,OAMtH,OAJKghD,EAAcjoD,QACjBiH,KAAKuY,MAAMwoC,EAAexiB,GAASa,wBAAyBviC,GAGvDmkD,IA7/BiB,gDAggC1B,WACE,IAAMpuD,EAAOoN,KAAK8jC,YAOlB,OANAlxC,EAAKpB,WAAawO,KAAKo6C,mBAAkB,GAErCp6C,KAAKklB,aAAa,OACpBtyB,EAAK2wC,eAAiBvjC,KAAKq6C,wBAGtBr6C,KAAK+jC,WAAWnxC,EAAM,mCAxgCL,yCA2gC1B,SAA4BA,GACtBoN,KAAKwU,MAAM7T,EAAQzF,OACrBtI,EAAK6J,GAAKuD,KAAKioC,kBACfjoC,KAAKszC,UAAU1gD,EAAK6J,GAAI,mCA3/NJ,OA6/NpB7J,EAAK6J,GAAK,KACVuD,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAOo3B,GAAS2B,uBAGxCttC,EAAK2wC,eAAiBvjC,KAAKw7C,2BAEvBx7C,KAAKylB,IAAI9kB,EAAQ8E,YACnB7S,EAAK+3C,QAAU3qC,KAAKkhD,sBAAsB,YAG5C,IAAMxtD,EAAOsM,KAAK8jC,YAGlB,OAFApwC,EAAKA,KAAOsM,KAAK6/C,SAAS7/C,KAAK48C,yBAAyB3qD,KAAK+N,OAC7DpN,EAAKc,KAAOsM,KAAK+jC,WAAWrwC,EAAM,mBAC3BsM,KAAK+jC,WAAWnxC,EAAM,4BA7hCL,yCAgiC1B,SAA4BA,GAAM,WAgBhC,OAfAA,EAAK6J,GAAKuD,KAAKioC,kBACfjoC,KAAKszC,UAAU1gD,EAAK6J,GAAI,wBA9gOP,GA+gOjB7J,EAAK2wC,eAAiBvjC,KAAKw7C,2BAC3B5oD,EAAK81C,eAAiB1oC,KAAK6/C,UAAS,WAGlC,GAFA,EAAK9Z,OAAOplC,EAAQkC,IAEhB,EAAK2iB,aAAa,cAAgB,EAAKknB,YAAYxjC,OAASvI,EAAQwB,IAAK,CAC3E,IAAMvP,EAAO,EAAKkxC,YAElB,OADA,EAAKxqB,OACE,EAAKyqB,WAAWnxC,EAAM,sBAG/B,OAAO,EAAKuqD,iBAEdn9C,KAAK4oC,YACE5oC,KAAK+jC,WAAWnxC,EAAM,4BAhjCL,2BAmjC1B,SAAcuuD,GACZ,IAAMC,EAAaphD,KAAKmI,MAAM2N,QAC9B9V,KAAKmI,MAAM2N,QAAU,CAACsrC,EAAW,IAEjC,IACE,OAAOD,IADT,QAGEnhD,KAAKmI,MAAM2N,QAAUsrC,KA1jCC,sBA8jC1B,SAASD,GACP,IAAMzZ,EAAY1nC,KAAKmI,MAAM+R,OAC7Bla,KAAKmI,MAAM+R,QAAS,EAEpB,IACE,OAAOinC,IADT,QAGEnhD,KAAKmI,MAAM+R,OAASwtB,KArkCE,gCAykC1B,SAAmBjnC,GACjB,OAAQT,KAAKwU,MAAM/T,GAAqBT,KAAK8gD,2BAAjB5uD,IA1kCJ,mCA6kC1B,SAAsBuO,GAAO,WAC3B,OAAOT,KAAKqhD,mBAAkB,kBAAM,EAAKtb,OAAOtlC,QA9kCxB,iCAilC1B,WAAsB,WACpB,OAAOT,KAAKqhD,mBAAkB,kBAAM,EAAK/nC,YAllCjB,+BAqlC1B,SAAkB6nC,GAAI,WACpB,OAAOnhD,KAAK6/C,UAAS,WAEnB,OADAsB,IACO,EAAKhE,mBAxlCU,+BA4lC1B,WACE,IAAMvqD,EAAOoN,KAAK8jC,YAOlB,OANAlxC,EAAK6J,GAAKuD,KAAKwU,MAAM7T,EAAQK,QAAUhB,KAAK6lC,gBAAkB7lC,KAAKioC,iBAAgB,GAE/EjoC,KAAKylB,IAAI9kB,EAAQkC,MACnBjQ,EAAK0uD,YAActhD,KAAKimC,2BAGnBjmC,KAAK+jC,WAAWnxC,EAAM,kBApmCL,oCAumC1B,SAAuBA,EAAMsrC,GAO3B,OANIA,IAAStrC,EAAK05B,OAAQ,GAC1B15B,EAAK6J,GAAKuD,KAAKioC,kBACfjoC,KAAKszC,UAAU1gD,EAAK6J,GAAI,8BAA+ByhC,EAjlOhCqjB,IAJN9X,KAslOjBzpC,KAAK+lC,OAAOplC,EAAQa,QACpB5O,EAAKmkD,QAAU/2C,KAAKk6C,qBAAqB,cAAel6C,KAAKwhD,kBAAkBvvD,KAAK+N,OACpFA,KAAK+lC,OAAOplC,EAAQgB,QACb3B,KAAK+jC,WAAWnxC,EAAM,uBA9mCL,gCAinC1B,WACE,IAAMA,EAAOoN,KAAK8jC,YAKlB,OAJA9jC,KAAKrN,MAAMg1B,MA1nOK,GA2nOhB3nB,KAAK+lC,OAAOplC,EAAQa,QACpBxB,KAAKyhD,4BAA4B7uD,EAAKc,KAAO,QAAIxB,GAAW,EAAMyO,EAAQgB,QAC1E3B,KAAKrN,MAAMk3C,OACJ7pC,KAAK+jC,WAAWnxC,EAAM,mBAvnCL,iDA0nC1B,SAAoCA,GAAsB,IAAhB8uD,EAAgB,wDAOxD,GANA9uD,EAAK6J,GAAKuD,KAAKioC,kBAEVyZ,GACH1hD,KAAKszC,UAAU1gD,EAAK6J,GAAI,kCApmOJ,MAumOlBuD,KAAKylB,IAAI9kB,EAAQwB,KAAM,CACzB,IAAMw/C,EAAQ3hD,KAAK8jC,YACnB9jC,KAAK4hD,oCAAoCD,GAAO,GAChD/uD,EAAKc,KAAOiuD,OAEZ3hD,KAAKrN,MAAMg1B,MAAMpQ,IACjBvX,KAAKunB,UAAUI,MAj1KP,GAk1KR/0B,EAAKc,KAAOsM,KAAK6hD,qBACjB7hD,KAAKunB,UAAUsiB,OACf7pC,KAAKrN,MAAMk3C,OAGb,OAAO7pC,KAAK+jC,WAAWnxC,EAAM,yBA7oCL,qDAgpC1B,SAAwCA,GAoBtC,OAnBIoN,KAAKwlB,aAAa,WACpB5yB,EAAKkvD,QAAS,EACdlvD,EAAK6J,GAAKuD,KAAKioC,mBACNjoC,KAAKwU,MAAM7T,EAAQK,QAC5BpO,EAAK6J,GAAKuD,KAAK6lC,gBAEf7lC,KAAKmlB,aAGHnlB,KAAKwU,MAAM7T,EAAQa,SACrBxB,KAAKrN,MAAMg1B,MAAMpQ,IACjBvX,KAAKunB,UAAUI,MAt2KP,GAu2KR/0B,EAAKc,KAAOsM,KAAK6hD,qBACjB7hD,KAAKunB,UAAUsiB,OACf7pC,KAAKrN,MAAMk3C,QAEX7pC,KAAK4oC,YAGA5oC,KAAK+jC,WAAWnxC,EAAM,yBApqCL,4CAuqC1B,SAA+BA,EAAMmvD,GACnCnvD,EAAKmvD,SAAWA,IAAY,EAC5BnvD,EAAK6J,GAAKuD,KAAKioC,kBACfjoC,KAAKszC,UAAU1gD,EAAK6J,GAAI,4BA1pOPgtC,GA2pOjBzpC,KAAK+lC,OAAOplC,EAAQkC,IACpB,IAAMm/C,EAAkBhiD,KAAKiiD,yBAQ7B,MANwB,SAApBrvD,EAAKu5B,YAAkD,8BAAzB61B,EAAgB94C,MAChDlJ,KAAKuY,MAAMypC,EAAgB76C,MAAOo3B,GAASiB,0BAG7C5sC,EAAKovD,gBAAkBA,EACvBhiD,KAAK4oC,YACE5oC,KAAK+jC,WAAWnxC,EAAM,+BAprCL,yCAurC1B,WACE,OAAOoN,KAAKwlB,aAAa,YAA2C,KAA7BxlB,KAAK+vC,sBAxrCpB,oCA2rC1B,WACE,OAAO/vC,KAAKkiD,8BAAgCliD,KAAKmiD,iCAAmCniD,KAAKo6C,mBAAkB,KA5rCnF,4CA+rC1B,WACE,IAAMxnD,EAAOoN,KAAK8jC,YAIlB,GAHA9jC,KAAK6nC,iBAAiB,WACtB7nC,KAAK+lC,OAAOplC,EAAQkB,SAEf7B,KAAKwU,MAAM7T,EAAQK,QACtB,MAAMhB,KAAKmlB,aAKb,OAFAvyB,EAAKpB,WAAawO,KAAK6lC,gBACvB7lC,KAAK+lC,OAAOplC,EAAQmB,QACb9B,KAAK+jC,WAAWnxC,EAAM,+BA1sCL,yBA6sC1B,SAAYwvD,GACV,IAAMj6C,EAAQnI,KAAKmI,MAAMlJ,QACnBojD,EAAMD,IAEZ,OADApiD,KAAKmI,MAAQA,EACNk6C,IAjtCiB,gCAotC1B,SAAmBD,GACjB,IAAM/Q,EAASrxC,KAAKo0C,UAAS,SAAAG,GAAK,OAAI6N,KAAO7N,OAC7C,IAAIlD,EAAO7qB,SAAY6qB,EAAOz+C,KAE9B,OADIy+C,EAAOj8B,QAAOpV,KAAKmI,MAAQkpC,EAAO/qB,WAC/B+qB,EAAOz+C,OAxtCU,wBA2tC1B,SAAWwvD,GACT,IAAMj6C,EAAQnI,KAAKmI,MAAMlJ,QACnBoyC,EAAS+Q,IAEf,YAAelwD,IAAXm/C,IAAmC,IAAXA,EACnBA,OAEPrxC,KAAKmI,MAAQA,KAluCS,+BAuuC1B,SAAkBm6C,GAAM,WACtB,IAAItiD,KAAK8lB,mBAAT,CAIA,IACI1vB,EADAmsD,EAAYviD,KAAKmI,MAAMe,KAQ3B,OALIlJ,KAAKwlB,aAAa,SACpB+8B,EAAY5hD,EAAQsE,KACpB7O,EAAO,OAGF4J,KAAKwiD,oBAAmB,WAC7B,OAAQD,GACN,KAAK5hD,EAAQgE,UAEX,OADA29C,EAAK3W,SAAU,EACR,EAAK8W,uBAAuBH,GAAM,GAAO,GAElD,KAAK3hD,EAAQ6E,OAEX,OADA88C,EAAK3W,SAAU,EACR,EAAK+W,WAAWJ,GAAM,GAAM,GAErC,KAAK3hD,EAAQuE,OACX,GAAI,EAAKsP,MAAM7T,EAAQuE,SAAW,EAAKyuC,sBAAsB,QAG3D,OAFA,EAAK5N,OAAOplC,EAAQuE,QACpB,EAAK2iC,iBAAiB,QACf,EAAK8a,uBAAuBL,GAAM,GAG7C,KAAK3hD,EAAQsE,KAEX,OADA7O,EAAOA,GAAQ,EAAK+R,MAAM9W,MACnB,EAAKuxD,kBAAkBN,EAAMlsD,GAEtC,KAAKuK,EAAQzF,KAET,IAAM7J,EAAQ,EAAK8W,MAAM9W,MAEzB,MAAc,WAAVA,EACK,EAAKwxD,wCAAwCP,GAE7C,EAAKQ,mBAAmBR,EAAMjxD,GAAO,UAhxC9B,yCAuxC1B,WACE,OAAO2O,KAAK8iD,mBAAmB9iD,KAAK8jC,YAAa9jC,KAAKmI,MAAM9W,OAAO,KAxxC3C,wCA2xC1B,SAA2BuB,EAAM8J,GAC/B,OAAQA,EAAKxB,MACX,IAAK,UAED,IAAM8uC,EAAchqC,KAAK+iD,kBAAkBnwD,GAE3C,GAAIo3C,EAEF,OADAA,EAAY2B,SAAU,EACf3B,EAGT,MAGJ,IAAK,SACH,GAAIhqC,KAAKwU,MAAM7T,EAAQa,QAAS,CAC9BxB,KAAKrN,MAAMg1B,MAAMpQ,IACjBvX,KAAKunB,UAAUI,MAt/KX,GAu/KJ,IAAMq7B,EAAMpwD,EAMZ,OALAowD,EAAIlB,QAAS,EACbkB,EAAIvmD,GAAKC,EACTsmD,EAAItvD,KAAOsM,KAAK6hD,qBAChB7hD,KAAKrN,MAAMk3C,OACX7pC,KAAKunB,UAAUsiB,OACR7pC,KAAK+jC,WAAWif,EAAK,uBAG9B,MAEF,QACE,OAAOhjD,KAAK8iD,mBAAmBlwD,EAAM8J,EAAKxB,MAAM,MAzzC5B,gCA6zC1B,SAAmBtI,EAAMvB,EAAOioB,GAC9B,OAAQjoB,GACN,IAAK,WACH,GAAI2O,KAAKijD,sBAAsB3pC,KAAUtZ,KAAKwU,MAAM7T,EAAQ6E,SAAWxF,KAAKwU,MAAM7T,EAAQzF,OACxF,OAAO8E,KAAKkjD,2BAA2BtwD,GAGzC,MAEF,IAAK,OACH,GAAI0mB,GAAQtZ,KAAKwU,MAAM7T,EAAQzF,MAE7B,OADIoe,GAAMtZ,KAAKsZ,OACRtZ,KAAK2iD,uBAAuB/vD,GAAM,GAG3C,MAEF,IAAK,YACH,GAAIoN,KAAKijD,sBAAsB3pC,IAAStZ,KAAKwU,MAAM7T,EAAQzF,MACzD,OAAO8E,KAAKmjD,4BAA4BvwD,GAG1C,MAEF,IAAK,SACH,GAAIoN,KAAKijD,sBAAsB3pC,GAAO,CACpC,GAAItZ,KAAKwU,MAAM7T,EAAQK,QACrB,OAAOhB,KAAK6iD,wCAAwCjwD,GAC/C,GAAIoN,KAAKwU,MAAM7T,EAAQzF,MAC5B,OAAO8E,KAAK4hD,oCAAoChvD,GAIpD,MAEF,IAAK,YACH,GAAIoN,KAAKijD,sBAAsB3pC,IAAStZ,KAAKwU,MAAM7T,EAAQzF,MACzD,OAAO8E,KAAK4hD,oCAAoChvD,GAGlD,MAEF,IAAK,OACH,GAAIoN,KAAKijD,sBAAsB3pC,IAAStZ,KAAKwU,MAAM7T,EAAQzF,MACzD,OAAO8E,KAAKojD,4BAA4BxwD,MAz2CtB,mCAg3C1B,SAAsB0mB,GACpB,OAAIA,GACEtZ,KAAKqjD,0BACTrjD,KAAKsZ,QACE,IAGDtZ,KAAK8lB,qBAv3CW,iDA03C1B,SAAoCse,EAAUnwB,GAAU,WACtD,GAAKjU,KAAKklB,aAAa,KAAvB,CAIA,IAAMo+B,EAA4BtjD,KAAKmI,MAAM8R,uBAC7Cja,KAAKmI,MAAM8R,wBAAyB,EACpC,IAAMooC,EAAMriD,KAAKujD,oBAAmB,WAClC,IAAM3wD,EAAO,EAAKg2B,YAAYwb,EAAUnwB,GAKxC,OAJArhB,EAAK2wC,eAAiB,EAAK0X,wBAC3B,iDAA0BroD,GAC1BA,EAAK61C,WAAa,EAAK+a,0CACvB,EAAKzd,OAAOplC,EAAQ2B,OACb1P,KAIT,GAFAoN,KAAKmI,MAAM8R,uBAAyBqpC,EAE/BjB,EAIL,OAAOriD,KAAK01C,qBAAqB2M,EAAK,MAAM,MA/4CpB,kCAk5C1B,WAAuB,WACfzvD,EAAOoN,KAAK8jC,YAWlB,OAVAlxC,EAAKyC,OAAS2K,KAAK6/C,UAAS,kBAAM,EAAK4D,eAAc,WAEnD,OADA,EAAKnX,iBAAiB,KACf,EAAK4N,qBAAqB,4BAA6B,EAAKiD,YAAYlrD,KAAK,UAG3D,IAAvBW,EAAKyC,OAAO0D,QACdiH,KAAKuY,MAAM3lB,EAAKuU,MAAOo3B,GAASc,oBAGlCr/B,KAAKssC,iBAAiB,KACftsC,KAAK+jC,WAAWnxC,EAAM,kCA95CL,kCAi6C1B,WACE,GAAIoN,KAAKwU,MAAM7T,EAAQzF,MACrB,OAAQ8E,KAAKmI,MAAM9W,OACjB,IAAK,WACL,IAAK,UACL,IAAK,OACL,IAAK,YACL,IAAK,SACL,IAAK,YACL,IAAK,OACH,OAAO,EAIb,OAAO,IA/6CiB,sCAk7C1B,WACE,OAAI2O,KAAK0jD,wBACT,+DAp7CwB,qCAu7C1B,SAAwBzP,EAAgBh+C,GACtC,IAEIwjD,EAFErV,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SAExBioC,GAAW,EACXyH,GAAW,EAEf,QAAuBzxD,IAAnB+hD,EAA8B,CAChC,IAAM+E,EAAW,GACjBh5C,KAAKw8C,iBAAiBxD,EAAU,CAAC,SAAU,UAAW,YAAa,WAAY,aAC/ES,EAAgBT,EAASS,cACzBkK,EAAW3K,EAAS2K,SACpBzH,EAAWlD,EAASkD,UAEG,IAAnBjI,IAA6BwF,GAAiByC,GAAYyH,IAC5D3jD,KAAKuY,MAAM6rB,EAAU7F,GAAS2C,6BAIlC,IAAMgS,EAAOlzC,KAAK4jD,oBAClB5jD,KAAK6jD,6BAA6B3Q,GAClC,IAAM4Q,EAAM9jD,KAAK4jD,kBAAkB1Q,EAAK/rC,MAAO+rC,EAAKhrC,IAAIf,MAAO+rC,GAE/D,GAAIuG,GAAiByC,GAAYyH,EAAU,CACzC,IAAMI,EAAK/jD,KAAK4oB,YAAYwb,EAAUnwB,GAetC,OAbIhe,EAAW8C,SACbgrD,EAAG9tD,WAAaA,GAGdwjD,IAAesK,EAAGtK,cAAgBA,GAClCyC,IAAU6H,EAAG7H,SAAWA,GACxByH,IAAUI,EAAGJ,SAAWA,GAEX,eAAbG,EAAI56C,MAAsC,sBAAb46C,EAAI56C,MACnClJ,KAAKuY,MAAMwrC,EAAG58C,MAAOo3B,GAASgD,kCAGhCwiB,EAAGC,UAAYF,EACR9jD,KAAK+jC,WAAWggB,EAAI,uBAO7B,OAJI9tD,EAAW8C,SACbm6C,EAAKj9C,WAAaA,GAGb6tD,IAr+CiB,wCAw+C1B,SAA2BlxD,EAAMsW,GAAwB,IAAlBw6B,EAAkB,wDACnD1jC,KAAKwU,MAAM7T,EAAQsB,SACrBrP,EAAK61C,WAAazoC,KAAK27C,qCAAqCh7C,EAAQsB,QAGtE,IAAMgiD,EAAwB,wBAAT/6C,EAAiC,oBAA+B,gBAATA,EAAyB,uBAAoBhX,EAErH+xD,IAAiBjkD,KAAKwU,MAAM7T,EAAQa,SAAWxB,KAAK8lB,mBACtD9lB,KAAK+jC,WAAWnxC,EAAMqxD,GAIH,sBAAjBA,GAAwCjkD,KAAKmI,MAAMmS,mBACrDta,KAAKuY,MAAM3lB,EAAKuU,MAAOo3B,GAASU,kCAE5BrsC,EAAK+4C,SACP,8DAAiC/4C,EAAMqxD,EAAcvgB,GAKzD,8DAAiC9wC,EAAMsW,EAAMw6B,KA7/CrB,yCAggD1B,SAA4B9wC,IACrBA,EAAKc,MAAQd,EAAK6J,GACrBuD,KAAKszC,UAAU1gD,EAAK6J,GAAI,gBAAiBsb,IAEzC,gEAAqCld,aApgDf,wCAwgD1B,SAA2BqpD,GAAO,WAChCA,EAAMrwC,SAAQ,SAAAjhB,GACgC,0BAA/B,MAARA,OAAe,EAASA,EAAKsW,OAChC,EAAKqP,MAAM3lB,EAAK81C,eAAevhC,MAAOo3B,GAAS6C,+BA3gD3B,8BAghD1B,SAAiBiR,EAAU8R,GAEzB,OADAnkD,KAAKokD,2BAA2B/R,GACzBA,IAlhDiB,4BAqhD1B,WAAwB,6BAANn4C,EAAM,yBAANA,EAAM,gBACtB,IAAMtH,GAAI,sEAA2BsH,IAMrC,MAJkB,oBAAdtH,EAAKsW,MACPlJ,KAAKokD,2BAA2BxxD,EAAKiV,UAGhCjV,IA5hDiB,4BA+hD1B,SAAeiyC,EAAMT,EAAUnwB,EAAU6wB,EAAS38B,GAAO,WACvD,IAAKnI,KAAK2lB,yBAA2B3lB,KAAKwU,MAAM7T,EAAQsC,MAAO,CAC7DjD,KAAKmI,MAAM4S,aAAc,EACzB/a,KAAKsZ,OACL,IAAM+qC,EAAoBrkD,KAAK4oB,YAAYwb,EAAUnwB,GAErD,OADAowC,EAAkB7yD,WAAaqzC,EACxB7kC,KAAK+jC,WAAWsgB,EAAmB,uBAG5C,IAAIC,GAAiB,EAErB,GAAItkD,KAAKwU,MAAM7T,EAAQ0B,cAA6C,KAA7BrC,KAAK+vC,oBAA4B,CACtE,GAAIjL,EAEF,OADA38B,EAAM88B,MAAO,EACNJ,EAGT18B,EAAM48B,oBAAsBuf,GAAiB,EAC7CtkD,KAAKsZ,OAGP,GAAItZ,KAAKklB,aAAa,KAAM,CAC1B,IAAIq/B,EACElT,EAASrxC,KAAKujD,oBAAmB,WACrC,IAAKze,GAAW,EAAK0f,qBAAqB3f,GAAO,CAC/C,IAAM4f,EAAe,EAAKC,oCAAoCtgB,EAAUnwB,GAExE,GAAIwwC,EACF,OAAOA,EAIX,IAAM7xD,EAAO,EAAKg2B,YAAYwb,EAAUnwB,GACxCrhB,EAAKoF,OAAS6sC,EACd,IAAMsQ,EAAgB,EAAKkF,uBAE3B,GAAIlF,EAAe,CAMjB,GALImP,IAAmB,EAAK9vC,MAAM7T,EAAQkB,UACxC0iD,EAAuB,EAAKp8C,MAAM6L,IAClC,EAAKmR,eAGF2f,GAAW,EAAKrf,IAAI9kB,EAAQkB,QAS/B,OARAjP,EAAKiI,UAAY,EAAKk6C,6BAA6Bp0C,EAAQmB,QAAQ,GACnE,EAAKsiD,2BAA2BxxD,EAAKiI,WACrCjI,EAAK2wC,eAAiB4R,EAElBhtC,EAAM48B,sBACRnyC,EAAK6xC,SAAW6f,GAGX,EAAKlP,qBAAqBxiD,EAAMuV,EAAM48B,qBACxC,GAAI,EAAKvwB,MAAM7T,EAAQ6B,WAAY,CACxC,IAAM6uC,EAAS,EAAKsT,8BAA8B9f,EAAMT,EAAUnwB,EAAU9L,GAE5E,OADAkpC,EAAO9N,eAAiB4R,EACjB9D,GAIX,EAAKlsB,gBAOP,GAJIo/B,GACFvkD,KAAKmlB,WAAWo/B,EAAsB5jD,EAAQkB,QAG5CwvC,EAAQ,OAAOA,EAGrB,yDAA4BxM,EAAMT,EAAUnwB,EAAU6wB,EAAS38B,KApmDvC,+BAumD1B,SAAkBvV,GAAM,WACtB,GAAIoN,KAAKklB,aAAa,KAAM,CAC1B,IAAMqe,EAAiBvjC,KAAKujD,oBAAmB,WAC7C,IAAMrpD,EAAO,EAAKmgD,uBAElB,OADK,EAAK7lC,MAAM7T,EAAQkB,SAAS,EAAKsjB,aAC/BjrB,KAGLqpC,IACF3wC,EAAK2wC,eAAiBA,GAI1B,qDAAwB3wC,KApnDA,yBAunD1B,SAAYsgD,EAAM0R,EAAcC,EAAcC,GAC5C,GAAI1mB,GAAQz9B,EAAQoF,IAAI3F,OAAS0kD,IAAY9kD,KAAK2lB,yBAA2B3lB,KAAKwlB,aAAa,MAAO,CACpG,IAAM5yB,EAAOoN,KAAK4oB,YAAYg8B,EAAcC,GAC5CjyD,EAAKpB,WAAa0hD,EAElB,IAAMhuC,EAASlF,KAAK6gD,gCAUpB,OAPEjuD,EAAK81C,eADHxjC,GAGoBlF,KAAK8gD,sBAG7B9gD,KAAK+jC,WAAWnxC,EAAM,kBACtBoN,KAAK+kD,eACE/kD,KAAKglD,YAAYpyD,EAAMgyD,EAAcC,EAAcC,GAG5D,sDAAyB5R,EAAM0R,EAAcC,EAAcC,KAzoDnC,+BA4oD1B,SAAkB/tC,EAAM9C,EAAUgxC,EAAe5gB,MA5oDvB,mCA8oD1B,cA9oD0B,yBAgpD1B,SAAYzxC,GAGV,GAFAA,EAAKu5B,WAAa,QAEdnsB,KAAKwU,MAAM7T,EAAQzF,OAAS8E,KAAKwU,MAAM7T,EAAQoD,OAAS/D,KAAKwU,MAAM7T,EAAQa,QAAS,CACtF,IAAI0jD,EAAQllD,KAAK0sC,YAQjB,IANI1sC,KAAKwlB,aAAa,SAAW0/B,EAAMh8C,OAASvI,EAAQoB,OAAWmjD,EAAMh8C,OAASvI,EAAQzF,MAAwB,SAAhBgqD,EAAM7zD,OAAqB6zD,EAAMh8C,OAASvI,EAAQkC,KAClJjQ,EAAKu5B,WAAa,OAClBnsB,KAAKsZ,OACL4rC,EAAQllD,KAAK0sC,aAGX1sC,KAAKwU,MAAM7T,EAAQzF,OAASgqD,EAAMh8C,OAASvI,EAAQkC,GACrD,OAAO7C,KAAKmlD,+BAA+BvyD,GAI/C,IAAMwyD,EAAa,EAAH,6CAAqBxyD,GAMrC,MAJ8B,SAA1BwyD,EAAWj5B,YAAyBi5B,EAAWj8C,WAAWpQ,OAAS,GAAuC,2BAAlCqsD,EAAWj8C,WAAW,GAAGD,MACnGlJ,KAAKuY,MAAM6sC,EAAWj+C,MAAOo3B,GAAS0C,wCAGjCmkB,IAvqDiB,yBA0qD1B,SAAYxyD,GACV,GAAIoN,KAAKwU,MAAM7T,EAAQgF,SAUrB,OATA3F,KAAKsZ,OAEDtZ,KAAKwlB,aAAa,SAAwC,KAA7BxlB,KAAK+vC,qBACpCn9C,EAAKu5B,WAAa,OAClBnsB,KAAKsZ,QAEL1mB,EAAKu5B,WAAa,QAGbnsB,KAAKmlD,+BAA+BvyD,GAAM,GAC5C,GAAIoN,KAAKylB,IAAI9kB,EAAQkC,IAAK,CAC/B,IAAM7Q,EAASY,EAGf,OAFAZ,EAAOR,WAAawO,KAAK8lC,kBACzB9lC,KAAK4oC,YACE5oC,KAAK+jC,WAAW/xC,EAAQ,sBAC1B,GAAIgO,KAAK0lB,cAAc,MAAO,CACnC,IAAM6rB,EAAO3+C,EAIb,OAHAoN,KAAK6nC,iBAAiB,aACtB0J,EAAK90C,GAAKuD,KAAKioC,kBACfjoC,KAAK4oC,YACE5oC,KAAK+jC,WAAWwN,EAAM,gCAS7B,OAPIvxC,KAAKwlB,aAAa,SAAWxlB,KAAK0sC,YAAYxjC,OAASvI,EAAQa,QACjExB,KAAKsZ,OACL1mB,EAAKy3C,WAAa,QAElBz3C,EAAKy3C,WAAa,QAGpB,+CAAyBz3C,KAzsDH,6BA6sD1B,WACE,OAAOoN,KAAKwlB,aAAa,aAAexlB,KAAK0sC,YAAYxjC,OAASvI,EAAQ6E,SA9sDlD,0CAitD1B,WACE,GAAIxF,KAAKqlD,kBAAmB,CAC1B,IAAMC,EAAMtlD,KAAK8jC,YAIjB,OAHA9jC,KAAKsZ,OACLgsC,EAAIvH,UAAW,EACf/9C,KAAK0iD,WAAW4C,GAAK,GAAM,GACpBA,EAGT,GAAyB,cAArBtlD,KAAKmI,MAAM9W,MAAuB,CACpC,IAAMk0D,EAAgBvlD,KAAK8jC,YAC3B9jC,KAAKsZ,OACL,IAAM+3B,EAASrxC,KAAKmjD,4BAA4BoC,GAChD,GAAIlU,EAAQ,OAAOA,EAGrB,0EAjuDwB,mCAouD1B,SAAsBv7B,EAAS45B,GAC7B,GAAI1vC,KAAKmI,MAAMe,OAASvI,EAAQuE,OAAQ,CACtC,IAAMggD,EAAQllD,KAAK0sC,YAEnB,GAAIwY,EAAMh8C,OAASvI,EAAQzF,MAAwB,SAAhBgqD,EAAM7zD,MAAkB,CACzD,IAAMuB,EAAOoN,KAAK8jC,YAGlB,OAFA9jC,KAAK+lC,OAAOplC,EAAQuE,QACpBlF,KAAK6nC,iBAAiB,QACf7nC,KAAK2iD,uBAAuB/vD,GAAM,IAI7C,gEAAmCkjB,EAAS45B,KAhvDpB,iCAmvD1B,WACE,OAAO1vC,KAAKw5C,gBAAgB,CAAC,SAAU,YAAa,cApvD5B,gCAuvD1B,SAAmB1H,EAAQ0T,GACzB,OAAOA,EAAUt/B,MAAK,SAAAwb,GACpB,OAAID,GAAmBC,GACdoQ,EAAO2H,gBAAkB/X,IAGzBoQ,EAAOpQ,QA7vDM,8BAiwD1B,SAAiB0B,EAAW0O,EAAQ3pC,GAAO,WACnCs9C,EAAiC,CAAC,UAAW,UAAW,SAAU,YAAa,WAAY,WAAY,YAC7GzlD,KAAKw8C,iBAAiB1K,EAAQ2T,EAA+B5sD,OAAO,CAAC,YAErE,IAAM6sD,EAAmC,WACvC,IAAMjZ,IAAaqF,EAAOz9C,OAEtBo4C,GAAY,EAAKhnB,IAAI9kB,EAAQa,SAC3B,EAAKmkD,mBAAmB7T,EAAQ2T,IAClC,EAAKltC,MAAM,EAAKpQ,MAAM6L,IAAKuqB,GAASwC,+BAGtC,EAAK6kB,sBAAsBxiB,EAAW0O,IAEtC,EAAK+T,6BAA6BziB,EAAW0O,EAAQ3pC,EAAOskC,IAI5DqF,EAAOnG,QACT3rC,KAAKwiD,mBAAmBkD,GAExBA,MAtxDsB,0CA0xD1B,SAA6BtiB,EAAW0O,EAAQ3pC,EAAOskC,GACrD,IAAMgQ,EAAMz8C,KAAK08C,yBAAyB5K,GAE1C,GAAI2K,EAmBF,OAlBArZ,EAAU1vC,KAAKsB,KAAKynD,GAEhB3K,EAAOiM,UACT/9C,KAAKuY,MAAMu5B,EAAO3qC,MAAOo3B,GAASmB,2BAGhCoS,EAAO2H,eACTz5C,KAAKuY,MAAMu5B,EAAO3qC,MAAOo3B,GAASoB,+BAAgCmS,EAAO2H,eAGvE3H,EAAOnG,SACT3rC,KAAKuY,MAAMu5B,EAAO3qC,MAAOo3B,GAASqB,+BAGhCkS,EAAO6R,UACT3jD,KAAKuY,MAAMu5B,EAAO3qC,MAAOo3B,GAASsB,6BAMjC7/B,KAAKmI,MAAMoS,iBAAmBu3B,EAAOiM,UACxC/9C,KAAKuY,MAAMu5B,EAAO3qC,MAAOo3B,GAAS6B,mCAGhC0R,EAAO6R,WACJx7C,EAAM29C,eACT9lD,KAAKuY,MAAMu5B,EAAO3qC,MAAOo3B,GAASgC,wBAItC,gEAAmC6C,EAAW0O,EAAQ3pC,EAAOskC,KA7zDrC,0CAg0D1B,SAA6BsZ,GACV/lD,KAAKylB,IAAI9kB,EAAQyB,YACpB2jD,EAAathB,UAAW,GAElCshB,EAAa7J,UAAYl8C,KAAKwU,MAAM7T,EAAQkB,SAC9C7B,KAAKuY,MAAMwtC,EAAa5+C,MAAOo3B,GAASM,wBAGtCknB,EAAapa,SAAW3rC,KAAKwU,MAAM7T,EAAQkB,SAC7C7B,KAAKuY,MAAMwtC,EAAa5+C,MAAOo3B,GAASK,yBAz0DlB,sCA60D1B,SAAyBhsC,EAAM8J,GAE7B,OAD2B,eAAdA,EAAKwM,KAAwBlJ,KAAKgmD,2BAA2BpzD,EAAM8J,QAAQxK,IACzE,EAAJ,0DAAmCU,EAAM8J,KA/0D5B,0CAk1D1B,WACE,QAAIsD,KAAK0jD,wBACT,mEAp1DwB,8BAu1D1B,SAAiBhnD,EAAM0nC,EAAUnwB,EAAUwS,GAAqB,WAC9D,IAAKzmB,KAAKmI,MAAM8R,yBAA2Bja,KAAKwU,MAAM7T,EAAQyB,UAC5D,2DAA8B1F,EAAM0nC,EAAUnwB,EAAUwS,GAG1D,IAAM4qB,EAASrxC,KAAKo0C,UAAS,gEAA6B13C,EAAM0nC,EAAUnwB,MAE1E,OAAKo9B,EAAOz+C,MAQRy+C,EAAOj8B,QAAOpV,KAAKmI,MAAQkpC,EAAO/qB,WAC/B+qB,EAAOz+C,OARRy+C,EAAOj8B,OACT,8DAAiCqR,EAAqB4qB,EAAOj8B,OAGxD1Y,KAn2De,4BA02D1B,SAAe9J,EAAMwxC,EAAUnwB,GAQ7B,GAPArhB,EAAO,EAAH,gDAAwBA,EAAMwxC,EAAUnwB,GAExCjU,KAAKylB,IAAI9kB,EAAQyB,YACnBxP,EAAK6xC,UAAW,EAChBzkC,KAAK2oC,iBAAiB/1C,IAGpBoN,KAAKwU,MAAM7T,EAAQsB,OAAQ,CAC7B,IAAMqvC,EAAetxC,KAAK4oB,YAAYwb,EAAUnwB,GAGhD,OAFAq9B,EAAa9/C,WAAaoB,EAC1B0+C,EAAa5I,eAAiB1oC,KAAK06C,wBAC5B16C,KAAK+jC,WAAWuN,EAAc,wBAGvC,OAAO1+C,IAz3DiB,oCA43D1B,SAAuBA,GACrB,IAQIo3C,EARE5F,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SACtBgyC,EAAYjmD,KAAK0lB,cAAc,WAErC,GAAIugC,IAAcjmD,KAAKwlB,aAAa,aAAexlB,KAAKkmD,gCACtD,MAAMlmD,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAOo3B,GAASgB,mCAsB9C,OAjBIv/B,KAAKwU,MAAM7T,EAAQzF,QACrB8uC,EAAchqC,KAAKmmD,+BAGhBnc,IACHA,EAAc,EAAH,wDAAgCp3C,IAGzCo3C,IAAqC,2BAArBA,EAAY9gC,MAA0D,2BAArB8gC,EAAY9gC,MAAqC+8C,KACpHrzD,EAAKy3C,WAAa,QAGhBL,GAAeic,IACjBjmD,KAAKgpB,mBAAmBghB,EAAa5F,EAAUnwB,GAC/C+1B,EAAY2B,SAAU,GAGjB3B,IAx5DiB,0BA25D1B,SAAap3C,EAAMg/C,EAAaC,GAC9B,GAAMD,IAAeC,IAAe7xC,KAAKwlB,aAAa,cAAtD,CAIA,gDAAmB5yB,EAAMg/C,EAAaC,EAAYj/C,EAAK+4C,QAAU5zB,GAj5PlD0xB,KAk5Pf,IAAMlG,EAAiBvjC,KAAKw7C,2BACxBjY,IAAgB3wC,EAAK2wC,eAAiBA,MAl6DlB,0CAq6D1B,SAA6B3wC,IACtBA,EAAK6xC,UAAYzkC,KAAKylB,IAAI9kB,EAAQsC,QACrCrQ,EAAKwzD,UAAW,GAGlB,IAAMl9C,EAAOlJ,KAAKi8C,2BACd/yC,IAAMtW,EAAK81C,eAAiBx/B,KA36DR,gCA86D1B,SAAmBtW,GAOjB,GANAoN,KAAKqmD,6BAA6BzzD,GAE9BoN,KAAKmI,MAAMmS,kBAAoBta,KAAKwU,MAAM7T,EAAQkC,KACpD7C,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAOo3B,GAASS,iCAGpCpsC,EAAKmrD,UAAY/9C,KAAKwU,MAAM7T,EAAQkC,IAAK,CAC3C,IACE7I,EACEpH,EADFoH,IAEFgG,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAOo3B,GAASE,+BAA6C,eAAbzkC,EAAIkP,MAA0BtW,EAAKoJ,SAAnC,WAA6DgE,KAAKgJ,MAAMxO,MAAMR,EAAImN,MAAOnN,EAAIoN,KAA7F,KAA8CpN,EAAIkB,MAG1H,6DAAgCtI,KA57DR,uCA+7D1B,SAA0BA,GAUxB,OATIA,EAAKmrD,UACP/9C,KAAKuY,MAAM3lB,EAAKuU,MAAOo3B,GAASkC,2BAG9B7tC,EAAK6mD,eACPz5C,KAAKuY,MAAM3lB,EAAKuU,MAAOo3B,GAASmC,+BAAgC9tC,EAAK6mD,eAGvEz5C,KAAKqmD,6BAA6BzzD,GAClC,6DAAuCA,KAz8Df,6BA48D1B,SAAgBwwC,EAAW7lC,EAAQunB,EAAaD,EAAS1uB,EAAektC,GACtE,IAAME,EAAiBvjC,KAAKw7C,2BAExBjY,GAAkBptC,GACpB6J,KAAKuY,MAAMgrB,EAAep8B,MAAOo3B,GAASO,+BAGxCvhC,EAAOouC,SAA4B,QAAhBpuC,EAAOnH,MAAkC,QAAhBmH,EAAOnH,MACrD4J,KAAKuY,MAAMhb,EAAO4J,MAAOo3B,GAASQ,gBAAiBxhC,EAAOnH,MAGxDmtC,IAAgBhmC,EAAOgmC,eAAiBA,GAC5C,mDAAsBH,EAAW7lC,EAAQunB,EAAaD,EAAS1uB,EAAektC,KAx9DtD,oCA29D1B,SAAuBD,EAAW7lC,EAAQunB,EAAaD,GACrD,IAAM0e,EAAiBvjC,KAAKw7C,2BACxBjY,IAAgBhmC,EAAOgmC,eAAiBA,GAC5C,0DAA6BH,EAAW7lC,EAAQunB,EAAaD,KA99DrC,6BAi+D1B,SAAgBjyB,GACd,mDAAsBA,GAElBA,EAAKiL,YAAcmC,KAAKklB,aAAa,OACvCtyB,EAAKkgD,oBAAsB9yC,KAAKq6C,wBAG9Br6C,KAAK0lB,cAAc,gBACrB9yB,EAAKg4C,WAAa5qC,KAAKkhD,sBAAsB,iBAz+DvB,+BA6+D1B,SAAkB/mB,GAAe,MACzBoJ,EAAiBvjC,KAAKw7C,2BACxBjY,IAAgBpJ,EAAKoJ,eAAiBA,GAFX,2BAANrpC,EAAM,iCAANA,EAAM,mBAG/B,iEAAwBigC,GAAxB,OAAiCjgC,MAh/DT,iCAm/D1B,SAAoBtH,EAAMqhD,GACxB,IAAM1Q,EAAiBvjC,KAAKw7C,2BACxBjY,IAAgB3wC,EAAK2wC,eAAiBA,GAC1C,uDAA0B3wC,EAAMqhD,KAt/DR,wBAy/D1B,SAAW1C,EAAMn7C,GACf,8CAAiBm7C,EAAMn7C,GAEF,eAAjBm7C,EAAK90C,GAAGyM,MAAyBlJ,KAAKylB,IAAI9kB,EAAQsC,QACpDsuC,EAAK6U,UAAW,GAGlB,IAAMl9C,EAAOlJ,KAAKi8C,2BAEd/yC,IACFqoC,EAAK90C,GAAGisC,eAAiBx/B,EACzBlJ,KAAK2oC,iBAAiB4I,EAAK90C,OApgEL,+CAwgE1B,SAAkC7J,EAAM8H,GAKtC,OAJIsF,KAAKwU,MAAM7T,EAAQsB,SACrBrP,EAAK61C,WAAazoC,KAAK06C,yBAGzB,qEAA+C9nD,EAAM8H,KA7gE7B,8BAghE1B,WAA0B,QACpBy5C,EAAME,EAAOiS,EAAWhS,EAAOiS,EAAYC,EAAOC,EAElDt+C,EACAi9B,EACAshB,EAiBkE,EAIlEnjB,EA1BoB,0BAANrpC,EAAM,yBAANA,EAAM,gBAOxB,GAAI8F,KAAKwJ,UAAU,SAAWxJ,KAAKwU,MAAM7T,EAAQ+8B,cAAgB19B,KAAKklB,aAAa,MAAO,CAGxF,GAFA/c,EAAQnI,KAAKmI,MAAMlJ,UACnBmmC,EAAMplC,KAAKo0C,UAAS,0FAAgCl6C,MAAOiO,IAClDiN,MAAO,OAAOgwB,EAAIxyC,KAC3B,IACEkjB,EACE9V,KAAKmI,MADP2N,QAGEA,EAAQA,EAAQ/c,OAAS,KAAOvD,EAAM6nC,OACxCvnB,EAAQ/c,QAAU,EACT+c,EAAQA,EAAQ/c,OAAS,KAAOvD,EAAM+nC,SAC/CznB,EAAQ/c,QAAU,GAItB,IAAsB,OAAfo7C,EAAO/O,KAAgB+O,EAAK/+B,SAAWpV,KAAKklB,aAAa,KAC9D,+EAAiChrB,IAInCiO,EAAQA,GAASnI,KAAKmI,MAAMlJ,QAC5B,IAAMqD,EAAQtC,KAAKo0C,UAAS,SAAAG,GAAS,MAC/B/B,EAAamU,EAEjBpjB,EAAiB,EAAK0X,wBACtB,IAAMv+C,GAAI,kEAA6BxC,IAWvC,OATkB,4BAAdwC,EAAKwM,MAAoE,OAA7BspC,EAAc91C,EAAKsoB,QAAkBwtB,EAAYzP,gBAC/FwR,IAG4F,KAAnD,OAArCoS,EAAkBpjB,QAA0B,EAASojB,EAAgBtxD,OAAO0D,SAChF,EAAK27C,2BAA2Bh4C,EAAM6mC,GAGxC7mC,EAAK6mC,eAAiBA,EACf7mC,IACNyL,GACH,IAAK7F,EAAM8S,QAAU9S,EAAMkkB,QAAS,OAAOlkB,EAAM1P,KAEjD,IAAKwyC,IACH9G,IAAQt+B,KAAKwJ,UAAU,UACvBk9C,EAAW1mD,KAAKo0C,UAAS,0FAAgCl6C,MAAOiO,IAClDiN,OAAO,OAAOsxC,EAAS9zD,KAGvC,GAAqB,OAAhByhD,EAAQjP,IAAgBiP,EAAMzhD,KAEjC,OADAoN,KAAKmI,MAAQi9B,EAAI9e,UACV8e,EAAIxyC,KAGb,GAAI0P,EAAM1P,KAER,OADAoN,KAAKmI,MAAQ7F,EAAMgkB,UACZhkB,EAAM1P,KAGf,GAA8B,OAAzB0zD,EAAYI,IAAqBJ,EAAU1zD,KAE9C,OADAoN,KAAKmI,MAAQu+C,EAASpgC,UACfogC,EAAS9zD,KAGlB,GAAqB,OAAhB0hD,EAAQlP,IAAgBkP,EAAM/tB,OAAQ,MAAM6e,EAAIhwB,MACrD,GAAI9S,EAAMikB,OAAQ,MAAMjkB,EAAM8S,MAC9B,GAA+B,OAA1BmxC,EAAaG,IAAqBH,EAAWhgC,OAAQ,MAAMmgC,EAAStxC,MACzE,MAAwB,OAAhBoxC,EAAQphB,QAAe,EAASohB,EAAMpxC,QAAU9S,EAAM8S,QAAqC,OAA1BqxC,EAAaC,QAAoB,EAASD,EAAWrxC,SAvlEtG,6BA0lE1B,SAAgBqR,GACd,OAAKzmB,KAAKwJ,UAAU,QAAUxJ,KAAKklB,aAAa,KACvCllB,KAAK4mD,uBAEZ,mDAA6BngC,KA9lEP,wBAkmE1B,SAAW7zB,GAAM,WACf,GAAIoN,KAAKwU,MAAM7T,EAAQsB,OAAQ,CAC7B,IAAMovC,EAASrxC,KAAKo0C,UAAS,SAAAG,GAC3B,IAAM9L,EAAa,EAAKkT,qCAAqCh7C,EAAQsB,OAErE,OADI,EAAK2jB,sBAAyB,EAAKpR,MAAM7T,EAAQ2B,QAAQiyC,IACtD9L,KAET,GAAI4I,EAAO7qB,QAAS,OAEf6qB,EAAO9qB,SACN8qB,EAAOj8B,QAAOpV,KAAKmI,MAAQkpC,EAAO/qB,WACtC1zB,EAAK61C,WAAa4I,EAAOz+C,MAI7B,qDAAwBA,KAjnEA,0CAonE1B,SAA6BwL,GACvB4B,KAAKylB,IAAI9kB,EAAQyB,YACA,eAAfhE,EAAM8K,MAA0BlJ,KAAKmI,MAAMmS,kBAAqBta,KAAKmI,MAAM+R,QAC7Ela,KAAKuY,MAAMna,EAAM+I,MAAOo3B,GAASiC,mBAGnCpiC,EAAMqmC,UAAW,GAGnB,IAAMv7B,EAAOlJ,KAAKi8C,2BAGlB,OAFI/yC,IAAM9K,EAAMsqC,eAAiBx/B,GACjClJ,KAAK2oC,iBAAiBvqC,GACfA,IAhoEiB,0BAmoE1B,SAAaxL,EAAMyxC,GACjB,OAAQzxC,EAAKsW,MACX,IAAK,uBACH,OAAOlJ,KAAKskC,aAAa1xC,EAAKpB,WAAY6yC,GAE5C,IAAK,sBACH,OAAO,EAET,QACE,uDAA0BzxC,EAAMyxC,MA5oEZ,0BAgpE1B,SAAazxC,GAAqB,IAAf2xC,EAAe,wDAChC,OAAQ3xC,EAAKsW,MACX,IAAK,uBACH,uDAA0BlJ,KAAKoyC,oBAAoBx/C,GAAO2xC,GAE5D,IAAK,sBACH,uDAA0B3xC,EAAM2xC,GAElC,IAAK,0BACH,OAAOvkC,KAAK6mD,oCAAoCj0D,EAAM2xC,GAExD,IAAK,iBACL,IAAK,sBACL,IAAK,kBAEH,OADA3xC,EAAKpB,WAAawO,KAAKwkC,aAAa5xC,EAAKpB,WAAY+yC,GAC9C3xC,EAET,QACE,uDAA0BA,EAAM2xC,MAlqEZ,iDAsqE1B,SAAoC3xC,EAAM2xC,GACxC,OAAQ3xC,EAAKpB,WAAW0X,MACtB,IAAK,iBACL,IAAK,sBACL,IAAK,kBACL,IAAK,0BAEH,OADAtW,EAAKpB,WAAawO,KAAKwkC,aAAa5xC,EAAKpB,WAAY+yC,GAC9C3xC,EAET,QACE,uDAA0BA,EAAM2xC,MAhrEZ,uBAorE1B,SAAU7nC,EAAM02C,GAA6B,UACvC0T,EADuC,mBAAN5sD,EAAM,iCAANA,EAAM,kBAG3C,OAAQwC,EAAKwM,MACX,IAAK,uBACH,OAEF,IAAK,sBAEH,YADAlJ,KAAKszC,UAAL,MAAAtzC,KAAA,CAAetD,EAAKsnD,UAAW,sBAA/B,OAAwD9pD,IAG1D,IAAK,iBACL,IAAK,kBACH,IAAKA,EAAK,IAA6B,6BAAvBk5C,IAAsF,OAA9B0T,EAAepqD,EAAKsoB,SAAkB8hC,EAAa/jB,eAAgB,CACzI/iC,KAAKuY,MAAM7b,EAAKyK,MAAO0C,EAAcuD,WAAYgmC,GACjD,MAIF,YADApzC,KAAKszC,UAAL,MAAAtzC,KAAA,CAAetD,EAAKlL,WAAY,4BAAhC,OAA+D0I,IAGjE,IAAK,sBAEH,YADA8F,KAAKszC,UAAL,MAAAtzC,KAAA,CAAetD,EAAKlL,WAAY4hD,GAAhC,OAAuDl5C,IAGzD,QAEE,YADA,yDAAgBwC,EAAM02C,GAAtB,OAA6Cl5C,OA9sEzB,8BAmtE1B,WACE,OAAQ8F,KAAKmI,MAAMe,MACjB,KAAKvI,EAAQ2E,MACX,OAAOtF,KAAKioC,iBAAgB,GAE9B,QACE,+DAztEoB,0CA6tE1B,SAA6BvrC,GAC3B,GAAIsD,KAAKklB,aAAa,KAAM,CAC1B,IAAMiwB,EAAgBn1C,KAAKq6C,uBAE3B,GAAIr6C,KAAKwU,MAAM7T,EAAQkB,QAAS,CAC9B,IAAMnH,EAAO,EAAH,8DAAsCgC,GAEhD,OADAhC,EAAK6oC,eAAiB4R,EACfz6C,EAGTsF,KAAKmlB,WAAWnlB,KAAKmI,MAAMhB,MAAOxG,EAAQkB,QAG5C,uEAA0CnF,KA1uElB,iCA6uE1B,SAAoB+1C,GACdzyC,KAAKmI,MAAMmS,kBAAoBta,KAAKwU,MAAM7T,EAAQoB,QAAU/B,KAAK+vC,sBAAwB0C,EAC3FzyC,KAAKsZ,OAEL,uDAA0Bm5B,KAjvEJ,2BAqvE1B,WACE,OAAOzyC,KAAKklB,aAAa,MAAlB,iCAAAllB,MAAA,KAAAA,QAtvEiB,6BAyvE1B,WACE,OAAOA,KAAKwU,MAAM7T,EAAQsC,OAASjD,KAAKwU,MAAM7T,EAAQsB,QAA/C,mCAAAjC,MAAA,KAAAA,QA1vEiB,+BA6vE1B,WAA2B,6BAAN9F,EAAM,yBAANA,EAAM,gBACzB,IAAMtH,GAAI,yEAA8BsH,IAMxC,MAJkB,sBAAdtH,EAAKsW,MAAgCtW,EAAK81C,gBAAkB91C,EAAK64C,MAAMtkC,MAAQvU,EAAK81C,eAAevhC,OACrGnH,KAAKuY,MAAM3lB,EAAK81C,eAAevhC,MAAOo3B,GAASyC,2BAG1CpuC,IApwEiB,8BAuwE1B,SAAiB6T,GACf,OAAIzG,KAAKmI,MAAM+R,QAAoB,KAATzT,GAAwB,KAATA,EAGvC,oDAA8BA,GAFvBzG,KAAKye,SAAS9d,EAAQgD,WAAY,KAzwEnB,0BA+wE1B,WACE,GAAI3D,KAAKwU,MAAM7T,EAAQgD,YAAa,CAClC,IAAM8C,EAAOzG,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAMhB,OAEjC,KAATV,GAAwB,KAATA,IACjBzG,KAAKmI,MAAM6L,KAAO,EAClBhU,KAAKsf,gBAAgB7Y,OArxED,8BA0xE1B,SAAiB4rC,GACf,IAAK,IAAI/3C,EAAI,EAAGA,EAAI+3C,EAASt5C,OAAQuB,IAAK,CACxC,IAAMoC,EAAO21C,EAAS/3C,GACtB,GAAKoC,EAEL,OAAQA,EAAKwM,MACX,IAAK,uBACHmpC,EAAS/3C,GAAK0F,KAAKoyC,oBAAoB11C,GACvC,MAEF,IAAK,iBACL,IAAK,kBACEsD,KAAKmI,MAAM8R,uBAGdja,KAAKuY,MAAM7b,EAAKyK,MAAOo3B,GAAS8C,+BAFhCgR,EAAS/3C,GAAK0F,KAAKoyC,oBAAoB11C,IAS/C,4DAAiC7B,aAhzET,iCAmzE1B,SAAoBjI,GAGlB,OAFAA,EAAKpB,WAAWk3C,eAAiB91C,EAAK81C,eACtC1oC,KAAK2oC,iBAAiB/1C,EAAKpB,WAAYoB,EAAK81C,eAAethC,IAAKxU,EAAK81C,eAAexgC,IAAId,KACjFxU,EAAKpB,aAtzEY,8BAyzE1B,SAAiB6D,GAAQ,WACvB,OAAI2K,KAAKwU,MAAM7T,EAAQsB,OACd5M,EAAO07C,OAAM,SAAAr0C,GAAI,OAAI,EAAK4nC,aAAa5nC,GAAM,MAGtD,oDAA8BrH,KA9zEN,mCAi0E1B,WACE,OAAO2K,KAAKwU,MAAM7T,EAAQsB,QAAnB,yCAAAjC,MAAA,KAAAA,QAl0EiB,qCAq0E1B,WACE,OAAO,6DAAmCA,KAAKqlD,oBAt0EvB,6CAy0E1B,SAAgCzyD,GAAM,WACpC,GAAIoN,KAAKklB,aAAa,KAAM,CAC1B,IAAMiwB,EAAgBn1C,KAAKujD,oBAAmB,kBAAM,EAAKlJ,0BACrDlF,IAAeviD,EAAK2wC,eAAiB4R,GAG3C,0EAA6CviD,KA/0ErB,+CAk1E1B,SAAkC2K,GAChC,IAAMwpD,EAAY,EAAH,mEAA2CxpD,GAEpDypD,EADShnD,KAAKgzC,6BAA6Bz1C,GACvB,GAE1B,OADwBypD,GAAchnD,KAAK6yC,YAAYmU,GAC9BD,EAAY,EAAIA,IAv1EjB,mCA01E1B,WACE,IAAM3oD,EAAQ,EAAH,wDACL8K,EAAOlJ,KAAKi8C,2BAOlB,OALI/yC,IACF9K,EAAMsqC,eAAiBx/B,EACvBlJ,KAAK2oC,iBAAiBvqC,IAGjBA,IAn2EiB,gCAs2E1B,SAAmB+iD,GACjB,IAAM8F,EAAsBjnD,KAAKmI,MAAMmS,iBACvCta,KAAKmI,MAAMmS,kBAAmB,EAE9B,IACE,OAAO6mC,IADT,QAGEnhD,KAAKmI,MAAMmS,iBAAmB2sC,KA72ER,wBAi3E1B,SAAWr0D,GACT,IAAMs0D,EAAqBlnD,KAAKmI,MAAMoS,gBACtCva,KAAKmI,MAAMoS,kBAAoB3nB,EAAKmrD,SAEpC,IAAI,6BAJc7jD,EAId,iCAJcA,EAId,kBACF,iEAAwBtH,GAAxB,OAAiCsH,IADnC,QAGE8F,KAAKmI,MAAMoS,gBAAkB2sC,KAx3EP,wCA43E1B,SAA2Bt0D,GACzB,GAAIoN,KAAKwU,MAAM7T,EAAQ6E,QAErB,OADA5S,EAAKmrD,UAAW,EACT/9C,KAAK0iD,WAAW9vD,GAAM,GAAM,GAC9B,GAAIoN,KAAKwlB,aAAa,cAC3B,IAAKxlB,KAAKqjD,wBAIR,OAHAzwD,EAAKmrD,UAAW,EAChB/9C,KAAKuY,MAAM3lB,EAAKuU,MAAOo3B,GAAS8B,0CAChCrgC,KAAKsZ,OACEtZ,KAAKmjD,4BAA4BvwD,QAG1CoN,KAAKmlB,WAAW,KAAMxkB,EAAQ6E,UAx4ER,yBA44E1B,WAAqB,6BAANtL,EAAM,yBAANA,EAAM,gBACnB,IAAMqD,GAAM,mEAAwBrD,IAEpC,GAAIqD,EAAOwgD,SAAU,CACnB,IAAMoJ,EAAUnnD,KAAKwJ,UAAU,YAAcjM,EAAOlM,MAAMqC,OAAS6J,EAAO7J,KAE1E,GAAIyzD,EAAS,CACX,IACEntD,EACEuD,EADFvD,IAEFgG,KAAKuY,MAAMhb,EAAO4J,MAAOo3B,GAASC,gCAA8C,eAAbxkC,EAAIkP,MAA0B3L,EAAOvB,SAArC,WAA+DgE,KAAKgJ,MAAMxO,MAAMR,EAAImN,MAAOnN,EAAIoN,KAA/F,KAAgDpN,EAAIkB,OAI3H,OAAOqC,IA15EiB,sCA65E1B,WAEE,OADiByC,KAAKioC,kBACN/sC,OA/5EQ,yCAk6E1B,WACE,QAAS8E,KAAKue,gBAAgB,aAAc,SAn6EpB,mBAs6E1B,WAKE,OAJIve,KAAKonD,gCACPpnD,KAAKmI,MAAMmS,kBAAmB,GAGhC,4CA36EwB,2BA86E1B,WAKE,OAJIta,KAAKonD,gCACPpnD,KAAKmI,MAAMmS,kBAAmB,GAGhC,sDAn7EwB,GAAkBzc,IAoyF5CwpD,YA5IiB,SAAAxpD,GAAU,qIAC3B,WACE,GAAImC,KAAKwU,MAAM7T,EAAQmD,QAAS,CAC9B,IAAMwjD,EAAmBtnD,KAAKmI,MAAMhB,MAC9BvU,EAAOoN,KAAK8jC,YAGlB,GAFA9jC,KAAKylB,IAAI9kB,EAAQmD,QAEb9D,KAAKwU,MAAM7T,EAAQzF,MAAO,CAC5B,IAAMA,EAAO8E,KAAKunD,oBAAoBvnD,KAAKmI,MAAMhB,OAC3CvR,EAAaoK,KAAKs8C,iBAAiB1pD,EAAMsI,GAG/C,GAFAtF,EAAWsT,KAAO,wBAEdlJ,KAAKwU,MAAM7T,EAAQkB,QACrB,OAAOjM,EAIXoK,KAAKmlB,WAAWmiC,MAjBO,2BAqB3B,WACE,OAAOtnD,KAAKwnD,oBAAL,iCAAAxnD,MAAA,MAAAA,KAAkDnF,eAtBhC,GAAkBgD,IA6I7C4pD,aAvWkB,SAAA5pD,GAAU,qIAC5B,SAAiByqB,GACf,GAAItoB,KAAKwU,MAAM7T,EAAQghC,aAAc,CACnC,IAAM/uC,EAAOoN,KAAK8jC,YAMlB,OALA9jC,KAAKsZ,OACLtZ,KAAK0nD,cAAc,oCACnB90D,EAAKsI,KAAL,oDAAkC,GAClC8E,KAAK0nD,cAAc,oCACnB1nD,KAAK+lC,OAAOplC,EAAQghC,aACb3hC,KAAK2nD,kBAAkB/0D,EAAM01B,MATZ,+BAa5B,SAAkB11B,EAAM01B,GACtB,IAAMs/B,KAAgBh1D,EAAK01B,cAA8B,gBAAd11B,EAAKsW,MAEhD,OADAtW,EAAK01B,aAAeA,EACbs/B,EAAah1D,EAAOoN,KAAK+jC,WAAWnxC,EAAM,iBAhBvB,8BAmB5B,SAAiB6T,GACf,OAAa,KAATA,GAA6D,KAA9CzG,KAAKgJ,MAAMC,WAAWjJ,KAAKmI,MAAM6L,IAAM,GACjDhU,KAAKye,SAAS9d,EAAQghC,YAAa,GAG5C,qDAAiC9mC,aAxBP,2BA2B5B,WACE,OAAOmF,KAAK6nD,iBAAiB,eAAtB,iCAAA7nD,MAAA,MAAAA,KAA8DnF,aA5B3C,6BA+B5B,WACE,OAAOmF,KAAK6nD,iBAAiB,eAAtB,mCAAA7nD,MAAA,MAAAA,KAAgEnF,aAhC7C,+BAmC5B,SAAkBkc,QACH7kB,IAAT6kB,GAAoB,sDAA2Blc,aApCzB,8BAuC5B,WACE,OAAOmF,KAAK6nD,iBAAiB,YAAtB,oCAAA7nD,MAAA,MAAAA,KAA8DnF,aAxC3C,uBA2C5B,SAAU6B,GACU,gBAAdA,EAAKwM,MAAwB,8CAAmBrO,aA5C1B,0BA+C5B,SAAajI,GACX,OAAIA,GAAsB,gBAAdA,EAAKsW,MAAgD,eAAtBtW,EAAK01B,cAC9C11B,EAAK01B,aAAe,UACb11B,GAGT,iDAA6BiI,aArDH,mBAwD5B,SAAMib,GACJ,iDAAgBA,MAIX9V,KAAKwlB,aAAa,UAInB1P,GACc9V,KAAK0sC,YAETxjC,OAASvI,EAAQghC,eApEL,iCA2E5B,SAAoB/uC,GACdA,EAAKkN,OAA6B,gBAApBlN,EAAKkN,MAAMoJ,MAC7B,wDAA6BrO,aA7EH,sCAgF5B,SAAyBjI,EAAM8J,GAC7B,GAAkB,gBAAdA,EAAKwM,MAA0BxM,EAAKsoB,OAAStoB,EAAKsoB,MAAM+d,cAC1D,oEAAyCloC,WAG3C,GAAImF,KAAKwU,MAAM7T,EAAQsB,OAAQ,CAC7B,IAAMwgC,EAAO7vC,EAIb,OAHA6vC,EAAK3iC,MAAQE,KAAK2nD,kBAAkBjrD,EAAM,cAC1CsD,KAAKsZ,OACLmpB,EAAK/uC,KAAOsM,KAAK8nD,eAAe,SACzB9nD,KAAK+jC,WAAWtB,EAAM,oBAK/B,OAFAziC,KAAK4oC,YACLh2C,EAAKsI,KAAOwB,EAAKxB,KACV8E,KAAK2nD,kBAAkB/0D,EAAM,eA/FV,wBAkG5B,WACE,OAAOoN,KAAK6nD,iBAAiB,mBAAtB,8BAAA7nD,MAAA,MAAAA,KAA+DnF,aAnG5C,6BAsG5B,WACE,OAAOmF,KAAK6nD,iBAAiB,eAAtB,mCAAA7nD,MAAA,MAAAA,KAAgEnF,aAvG7C,wBA0G5B,SAAWjI,EAAMg/C,EAAaC,GAC5B,IAAM3oC,EAAO0oC,EAAc,mBAAqB,kBAChD5xC,KAAKsZ,OACLtZ,KAAK+nD,eAAen1D,GACpB,IAAMo1D,EAAYhoD,KAAKmI,MAAMyR,OACvB+nB,EAAc3hC,KAAK6nD,iBAAiB,cAE1C,GAAIlmB,EACF,GAAI3hC,KAAKwU,MAAM7T,EAAQ8E,WAAazF,KAAKwU,MAAM7T,EAAQghC,cAAgB3hC,KAAKwU,MAAM7T,EAAQa,QACxF5O,EAAK6J,GAAKklC,MACL,IAAIkQ,IAAeD,EAGxB,OAFAh/C,EAAK6J,GAAK,KACV7J,EAAKc,KAAOsM,KAAK2nD,kBAAkBhmB,EAAa,aACzC3hC,KAAK+jC,WAAWnxC,EAAMsW,GAE7BlJ,KAAKmlB,WAAW,KAAMyc,GAAkBC,0BAG1C7hC,KAAKioD,aAAar1D,EAAMg/C,EAAaC,GAKvC,OAFA7xC,KAAKkoD,gBAAgBt1D,GACrBA,EAAKc,KAAOsM,KAAK6nD,iBAAiB,cAAgB7nD,KAAKmoD,iBAAiBv1D,EAAKiL,WAAYmqD,GAClFhoD,KAAK+jC,WAAWnxC,EAAMsW,KAjIH,yBAoI5B,SAAYtW,GACV,IAAM+uC,EAAc3hC,KAAK6nD,iBAAiB,cAC1C,IAAKlmB,EAAa,OAAO,EAAP,8CAA4B9mC,WAE9C,IAAKmF,KAAKwlB,aAAa,UAAYxlB,KAAKwU,MAAM7T,EAAQoB,OAIpD,OAHAnP,EAAKuW,WAAa,GAClBvW,EAAK2T,OAAS,KACd3T,EAAKo3C,YAAchqC,KAAK2nD,kBAAkBhmB,EAAa,eAChD3hC,KAAK+jC,WAAWnxC,EAAM,0BAG/BoN,KAAKse,aAAa,qBAClB,IAAM60B,EAAYnzC,KAAK8jC,YAGvB,OAFAqP,EAAUvO,SAAWjD,EACrB/uC,EAAKuW,WAAa,CAACnJ,KAAK+jC,WAAWoP,EAAW,2BAC9C,+CAAyBvgD,KAnJC,sCAsJ5B,WACE,GAAIoN,KAAKwU,MAAM7T,EAAQ5O,UAAW,CAChC,IAAMunB,EAAOtZ,KAAKgd,iBAElB,GAAIhd,KAAKulB,qBAAqBjM,EAAM,SAC9BtZ,KAAKgJ,MAAMo/C,WAAWznD,EAAQghC,YAAY7hC,MAAOE,KAAK+c,oBAAoBzD,EAAO,IACnF,OAAO,EAKb,sEAjK0B,8CAoK5B,SAAiC1mB,GAC/B,SAAIA,EAAKuW,YAAcvW,EAAKuW,WAAWpQ,OAAS,IAIhD,qEAAiD8B,aAzKvB,yBA4K5B,SAAYjI,GACV,IACEuW,EACEvW,EADFuW,WAGgB,MAAdA,GAAsBA,EAAWpQ,SACnCnG,EAAKuW,WAAaA,EAAWk/C,QAAO,SAAAz1D,GAAI,MAA2B,gBAAvBA,EAAKgyC,SAAS17B,SAG5D,+CAAkBtW,GAClBA,EAAKuW,WAAaA,IAtLQ,yBAyL5B,SAAYvW,GACV,IAAM+uC,EAAc3hC,KAAK6nD,iBAAiB,cAC1C,IAAKlmB,EAAa,OAAO,EAAP,8CAA4B9mC,WAG9C,GAFAjI,EAAKuW,WAAa,IAEbnJ,KAAKwlB,aAAa,UAAYxlB,KAAKwU,MAAM7T,EAAQoB,OAGpD,OAFAnP,EAAK2T,OAASvG,KAAK2nD,kBAAkBhmB,EAAa,iBAClD3hC,KAAK4oC,YACE5oC,KAAK+jC,WAAWnxC,EAAM,qBAG/B,IAAMugD,EAAYnzC,KAAKmlC,gBAAgBxD,GAKvC,GAJAwR,EAAUE,MAAQ1R,EAClB3hC,KAAK+jC,WAAWoP,EAAW,0BAC3BvgD,EAAKuW,WAAWnU,KAAKm+C,GAEjBnzC,KAAKylB,IAAI9kB,EAAQoB,OAAQ,CAC3B,IAAMumD,EAAgBtoD,KAAKuoD,8BAA8B31D,GACpD01D,GAAetoD,KAAKwoD,2BAA2B51D,GAMtD,OAHAoN,KAAK6nC,iBAAiB,QACtBj1C,EAAK2T,OAASvG,KAAKyoD,oBACnBzoD,KAAK4oC,YACE5oC,KAAK+jC,WAAWnxC,EAAM,uBAjNH,+BAoN5B,WACE,OAAOoN,KAAK6nD,iBAAiB,kBAAtB,qCAAA7nD,MAAA,MAAAA,KAAqEnF,eArNlD,GAAkBgD,KAyW1C6qD,GAAmBx3D,OAAO0iB,KAAKsuB,IAE/BymB,GAAiB,CACrBvtC,WAAY,SACZwtC,oBAAgB12D,EAChBmpB,UAAW,EACXwtC,2BAA2B,EAC3BC,4BAA4B,EAC5BC,6BAA6B,EAC7BC,yBAAyB,EACzBC,wBAAwB,EACxB3/C,QAAS,GACT6R,WAAY,KACZ4M,QAAQ,EACRzL,QAAQ,EACR4sC,gCAAgC,EAChCh0C,eAAe,EACf8I,eAAe,GAYjB,IAAMmrC,GAAgC,SAAhCA,EAAgCv2D,GACpC,MAAqB,4BAAdA,EAAKsW,KAAqCigD,EAA8Bv2D,EAAKpB,YAAcoB,GAqY9Fw2D,G,wHACJ,SAAWjvB,EAAMkvB,EAAUC,EAAU7iC,GACnC,KAAkB,kBAAd0T,EAAKjxB,MAA4BlJ,KAAKupD,eAAepvB,IAASA,EAAKn+B,UAAYm+B,EAAKgK,WAAxF,CAIA,IAAMnqC,EAAMmgC,EAAKngC,IAGjB,GAAa,eAFa,eAAbA,EAAIkP,KAAwBlP,EAAIkB,KAAOlB,EAAI3I,OAE9B,CACxB,GAAIg4D,EAEF,YADArpD,KAAKuY,MAAMve,EAAImN,MAAO0C,EAAc2G,eAIlC84C,EAASE,OACP/iC,GACuC,IAArCA,EAAoBG,cACtBH,EAAoBG,YAAc5sB,EAAImN,OAGxCnH,KAAKuY,MAAMve,EAAImN,MAAO0C,EAAc6B,iBAIxC49C,EAASE,MAAO,M,kCAIpB,SAAqB9sD,EAAMod,GACzB,MAAqB,4BAAdpd,EAAKwM,MAAsCxM,EAAKyK,QAAU2S,I,2BAGnE,WACE9Z,KAAKypD,qBACLzpD,KAAK0c,YACL,IAAMhgB,EAAOsD,KAAK8lC,kBAclB,OAZK9lC,KAAKwU,MAAM7T,EAAQO,MACtBlB,KAAKmlB,aAGPnlB,KAAK0pD,4BACLhtD,EAAK8K,SAAWxH,KAAKmI,MAAMX,SAC3B9K,EAAKyY,OAASnV,KAAKmI,MAAMgN,OAErBnV,KAAKQ,QAAQ8b,SACf5f,EAAK4f,OAAStc,KAAKsc,QAGd5f,I,6BAGT,SAAgBitD,EAAYljC,GAAqB,WAC/C,OAAIkjC,EACK3pD,KAAK4pD,eAAc,kBAAM,EAAKC,oBAAoBpjC,MAGpDzmB,KAAK8pD,YAAW,kBAAM,EAAKD,oBAAoBpjC,Q,iCAGxD,SAAoBA,GAClB,IAAM2d,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SACtBvX,EAAOsD,KAAKwwC,iBAAiB/pB,GAEnC,GAAIzmB,KAAKwU,MAAM7T,EAAQoB,OAAQ,CAC7B,IAAMnP,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GAGxC,IAFArhB,EAAKm3D,YAAc,CAACrtD,GAEbsD,KAAKylB,IAAI9kB,EAAQoB,QACtBnP,EAAKm3D,YAAY/0D,KAAKgL,KAAKwwC,iBAAiB/pB,IAI9C,OADAzmB,KAAK4yC,iBAAiBhgD,EAAKm3D,aACpB/pD,KAAK+jC,WAAWnxC,EAAM,sBAG/B,OAAO8J,I,wCAGT,SAA2B+pB,EAAqBytB,GAAgB,WAC9D,OAAOl0C,KAAK4pD,eAAc,kBAAM,EAAKpZ,iBAAiB/pB,EAAqBytB,Q,qCAG7E,SAAwBztB,EAAqBytB,GAAgB,WAC3D,OAAOl0C,KAAK8pD,YAAW,kBAAM,EAAKtZ,iBAAiB/pB,EAAqBytB,Q,wCAG1E,SAA2BztB,EAAqBujC,GAC9C,IAAIC,EAEJxjC,EAAoBI,mBAA4F,OAAtEojC,EAAkC,MAAfD,OAAsB,EAASA,EAAYh2C,KAAei2C,EAAmBjqD,KAAKmI,MAAMhB,Q,8BAGvJ,SAAiBsf,EAAqBytB,GACpC,IAeIgW,EAfE9lB,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SAE5B,GAAIjU,KAAKwlB,aAAa,UAChBxlB,KAAKunB,UAAU4iC,SAAU,CAC3B,IAAIjX,EAAOlzC,KAAKoqD,aAMhB,OAJIlW,IACFhB,EAAOgB,EAAex5C,KAAKsF,KAAMkzC,EAAM9O,EAAUnwB,IAG5Ci/B,EAMPzsB,EACFyjC,GAAsB,GAEtBzjC,EAAsB,IAAImB,GAC1BsiC,GAAsB,IAGpBlqD,KAAKwU,MAAM7T,EAAQkB,SAAW7B,KAAKwU,MAAM7T,EAAQzF,SACnD8E,KAAKmI,MAAM2R,iBAAmB9Z,KAAKmI,MAAMhB,OAG3C,IAAI+rC,EAAOlzC,KAAKqqD,sBAAsB5jC,GAMtC,GAJIytB,IACFhB,EAAOgB,EAAex5C,KAAKsF,KAAMkzC,EAAM9O,EAAUnwB,IAG/CjU,KAAKmI,MAAMe,KAAKvJ,SAAU,CAC5B,IAAM/M,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GAClC+qC,EAAWh/C,KAAKmI,MAAM9W,MAI5B,GAHAuB,EAAKosD,SAAWA,EAC+B,qBAAd9L,EAAKhqC,MAAiD,OAAlBgqC,EAAK8L,UAA8E,SAAzDh/C,KAAKue,gBAAgB,mBAAoB,YAGtI,MAAMve,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAc2F,kBAAmBwvC,GAiBtE,OAdIh/C,KAAKwU,MAAM7T,EAAQkC,KACrBjQ,EAAKsgD,KAAOlzC,KAAKwkC,aAAa0O,GAAM,GACpCzsB,EAAoBG,aAAe,GAEnCh0B,EAAKsgD,KAAOA,EAGVzsB,EAAoBE,iBAAmB/zB,EAAKsgD,KAAK/rC,QACnDsf,EAAoBE,iBAAmB,GAGzC3mB,KAAKszC,UAAUJ,EAAM,yBACrBlzC,KAAKsZ,OACL1mB,EAAK64C,MAAQzrC,KAAKwwC,mBACXxwC,KAAK+jC,WAAWnxC,EAAM,wBAK/B,OAJWs3D,GACTlqD,KAAKsqD,sBAAsB7jC,GAAqB,GAG3CysB,I,mCAGT,SAAsBzsB,GACpB,IAAM2d,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SACtB6F,EAAmB9Z,KAAKmI,MAAM2R,iBAC9Bpd,EAAOsD,KAAKuqD,aAAa9jC,GAE/B,OAAIzmB,KAAKwqD,qBAAqB9tD,EAAMod,GAC3Bpd,EAGFsD,KAAKyqD,iBAAiB/tD,EAAM0nC,EAAUnwB,EAAUwS,K,8BAGzD,SAAiB/pB,EAAM0nC,EAAUnwB,EAAUwS,GACzC,GAAIzmB,KAAKylB,IAAI9kB,EAAQyB,UAAW,CAC9B,IAAMxP,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GAKxC,OAJArhB,EAAK2jB,KAAO7Z,EACZ9J,EAAKu9C,WAAanwC,KAAKimC,0BACvBjmC,KAAK+lC,OAAOplC,EAAQsB,OACpBrP,EAAK29C,UAAYvwC,KAAKwwC,mBACfxwC,KAAK+jC,WAAWnxC,EAAM,yBAG/B,OAAO8J,I,0BAGT,SAAa+pB,GACX,IAAM2d,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SACtB6F,EAAmB9Z,KAAKmI,MAAM2R,iBAC9Bpd,EAAOsD,KAAKs+C,gBAAgB73B,GAElC,OAAIzmB,KAAKwqD,qBAAqB9tD,EAAMod,GAC3Bpd,EAGFsD,KAAKglD,YAAYtoD,EAAM0nC,EAAUnwB,GAAW,K,yBAGrD,SAAYi/B,EAAM0R,EAAcC,EAAcC,GAC5C,IAAI4F,EAAO1qD,KAAKmI,MAAMe,KAAK9I,MAE3B,GAAY,MAARsqD,IAAiB1qD,KAAKunB,UAAUojC,QAAU3qD,KAAKwU,MAAM7T,EAAQoF,OAC3D2kD,EAAO5F,EAAS,CAClB,IAAM7/B,EAAKjlB,KAAKmI,MAAMe,KAEtB,GAAI+b,IAAOtkB,EAAQwC,SAAU,CAG3B,GAFAnD,KAAKse,aAAa,oBAEdte,KAAKmI,MAAMyS,2BACb,OAAOs4B,EAGTlzC,KAAK4qD,6BAA6B1X,EAAM0R,GAG1C,IAAMhyD,EAAOoN,KAAK4oB,YAAYg8B,EAAcC,GAC5CjyD,EAAKsgD,KAAOA,EACZtgD,EAAKosD,SAAWh/C,KAAKmI,MAAM9W,MAC3B,IAAMw5D,EAAU5lC,IAAOtkB,EAAQ0C,WAAa4hB,IAAOtkB,EAAQ2C,WACrDwnD,EAAW7lC,IAAOtkB,EAAQyC,kBAQhC,GANI0nD,IACFJ,EAAO/pD,EAAQ2C,WAAWlD,OAG5BJ,KAAKsZ,OAED2L,IAAOtkB,EAAQwC,UAAqE,YAAzDnD,KAAKue,gBAAgB,mBAAoB,aAClEve,KAAKwU,MAAM7T,EAAQzF,OAA8B,UAArB8E,KAAKmI,MAAM9W,OAAqB2O,KAAKunB,UAAUwjC,SAC7E,MAAM/qD,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAc6H,kCAIrD9e,EAAK64C,MAAQzrC,KAAKgrD,qBAAqB/lC,EAAIylC,GAC3C1qD,KAAK+jC,WAAWnxC,EAAMi4D,GAAWC,EAAW,oBAAsB,oBAClE,IAAMG,EAASjrD,KAAKmI,MAAMe,KAE1B,GAAI4hD,IAAaG,IAAWtqD,EAAQ0C,WAAa4nD,IAAWtqD,EAAQ2C,aAAeunD,GAAWI,IAAWtqD,EAAQyC,kBAC/G,MAAMpD,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAcyE,2BAGnD,OAAOtO,KAAKglD,YAAYpyD,EAAMgyD,EAAcC,EAAcC,GAI9D,OAAO5R,I,kCAGT,SAAqBjuB,EAAIylC,GAAM,WACvBtmB,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SAE5B,OAAQgR,GACN,KAAKtkB,EAAQwC,SACX,OAAQnD,KAAKue,gBAAgB,mBAAoB,aAC/C,IAAK,OACH,OAAOve,KAAKkrD,yBAAwB,WAClC,IAAMC,EAAW,EAAKC,kBAAkBnmC,EAAIylC,GAE5C,OADA,EAAKW,6BAA6BjnB,GAC3B+mB,KAGX,IAAK,QACH,OAAOnrD,KAAKkrD,yBAAwB,WAClC,IAAMI,EAAY,EAAKF,kBAAkBnmC,EAAIylC,GAC7C,OAAO,EAAKa,8BAA8BD,EAAWlnB,EAAUnwB,MAGnE,IAAK,SACH,OAAOjU,KAAKwrD,gCAA+B,WACzC,OAAO,EAAKC,wBAAwBf,MAI5C,QACE,OAAO1qD,KAAK0rD,yBAAyBzmC,EAAIylC,M,sCAI/C,SAAyBzlC,EAAIylC,GAC3B,IAAMtmB,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SAC5B,OAAOjU,KAAKglD,YAAYhlD,KAAKs+C,kBAAmBla,EAAUnwB,EAAUgR,EAAG/kB,iBAAmBwqD,EAAO,EAAIA,K,+BAGvG,SAAkBzlC,EAAIylC,GAIpB,GAHiC1qD,KAAKunB,UAAU4iC,UACUnqD,KAAKwlB,aAAa,SAG1E,MAAMxlB,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAc2F,kBAAmBxP,KAAKmI,MAAM9W,OAE/E,OAAO2O,KAAK0rD,yBAAyBzmC,EAAIylC,K,wCAI7C,SAA2B93D,GACrBoN,KAAKwU,MAAM7T,EAAQsD,WACrBjE,KAAKuY,MAAM3lB,EAAKyG,SAAS8N,MAAO0C,EAAcyI,sC,6BAIlD,SAAgBmU,EAAqBklC,GACnC,IAAMvnB,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SACtB23C,EAAU5rD,KAAKwlB,aAAa,SAElC,GAAIomC,GAAW5rD,KAAK6rD,iBAAkB,CACpC7rD,KAAKsZ,OACL,IAAM5c,EAAOsD,KAAK8rD,WAAW1nB,EAAUnwB,GAEvC,OADK03C,GAAU3rD,KAAK+rD,2BAA2BrvD,GACxCA,EAGT,IAAMsvD,EAAShsD,KAAKwU,MAAM7T,EAAQqC,QAC5BpQ,EAAOoN,KAAK8jC,YAElB,GAAI9jC,KAAKmI,MAAMe,KAAKtJ,OAAQ,CAC1BhN,EAAKosD,SAAWh/C,KAAKmI,MAAM9W,MAC3BuB,EAAKgN,QAAS,EAEVI,KAAKwU,MAAM7T,EAAQoE,SACrB/E,KAAKse,aAAa,oBAGpB,IAAM2tC,EAAWjsD,KAAKwU,MAAM7T,EAAQwF,SAKpC,GAJAnG,KAAKsZ,OACL1mB,EAAKyG,SAAW2G,KAAKs+C,gBAAgB,MAAM,GAC3Ct+C,KAAKsqD,sBAAsB7jC,GAAqB,GAE5CzmB,KAAKmI,MAAMyR,QAAUqyC,EAAU,CACjC,IAAM/tD,EAAMtL,EAAKyG,SAEA,eAAb6E,EAAIgL,KACNlJ,KAAKuY,MAAM3lB,EAAKuU,MAAO0C,EAAc+G,cAC5B5Q,KAAKksD,yBAAyBhuD,IACvC8B,KAAKuY,MAAM3lB,EAAKuU,MAAO0C,EAAcwB,oBAIzC,IAAK2gD,EAEH,OADKL,GAAU3rD,KAAK+rD,2BAA2Bn5D,GACxCoN,KAAK+jC,WAAWnxC,EAAM,mBAIjC,IAAM8J,EAAOsD,KAAKmsD,YAAYv5D,EAAMo5D,EAAQvlC,GAE5C,GAAImlC,KACiB5rD,KAAKwJ,UAAU,eAAiBxJ,KAAKmI,MAAMe,KAAKxJ,WAAaM,KAAKmI,MAAMe,KAAKxJ,aAAeM,KAAKwU,MAAM7T,EAAQmD,WAE/G9D,KAAKosD,oBAEtB,OADApsD,KAAKqsD,eAAejoB,EAAUv6B,EAAcQ,wBACrCrK,KAAK8rD,WAAW1nB,EAAUnwB,GAIrC,OAAOvX,I,yBAGT,SAAY9J,EAAMo5D,EAAQvlC,GACxB,GAAIulC,EAEF,OADAhsD,KAAKszC,UAAU1gD,EAAKyG,SAAU,oBACvB2G,KAAK+jC,WAAWnxC,EAAM,oBAG/B,IAAMwxC,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SACxBvX,EAAOsD,KAAKssD,oBAAoB7lC,GACpC,GAAIzmB,KAAKsqD,sBAAsB7jC,GAAqB,GAAQ,OAAO/pB,EAEnE,KAAOsD,KAAKmI,MAAMe,KAAK/I,UAAYH,KAAK4lB,sBAAsB,CAC5D,IAAMhzB,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GACxCrhB,EAAKosD,SAAWh/C,KAAKmI,MAAM9W,MAC3BuB,EAAKgN,QAAS,EACdhN,EAAKyG,SAAWqD,EAChBsD,KAAKszC,UAAU52C,EAAM,qBACrBsD,KAAKsZ,OACL5c,EAAOsD,KAAK+jC,WAAWnxC,EAAM,oBAG/B,OAAO8J,I,iCAGT,SAAoB+pB,GAClB,IAAM2d,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SACtB6F,EAAmB9Z,KAAKmI,MAAM2R,iBAC9Bpd,EAAOsD,KAAK6lC,cAAcpf,GAEhC,OAAIzmB,KAAKwqD,qBAAqB9tD,EAAMod,GAC3Bpd,EAGFsD,KAAKusD,gBAAgB7vD,EAAM0nC,EAAUnwB,K,6BAG9C,SAAgB4wB,EAAMT,EAAUnwB,EAAU6wB,GACxC,IAAM38B,EAAQ,CACZ48B,qBAAqB,EACrBynB,gBAAiBxsD,KAAKwkD,qBAAqB3f,GAC3CI,MAAM,GAGR,GACEJ,EAAO7kC,KAAKysD,eAAe5nB,EAAMT,EAAUnwB,EAAU6wB,EAAS38B,GAC9DA,EAAMqkD,iBAAkB,SAChBrkD,EAAM88B,MAEhB,OAAOJ,I,4BAGT,SAAeA,EAAMT,EAAUnwB,EAAU6wB,EAAS38B,GAChD,IAAK28B,GAAW9kC,KAAKylB,IAAI9kB,EAAQuB,aAC/B,OAAOlC,KAAK0sD,UAAU7nB,EAAMT,EAAUnwB,EAAU6wB,EAAS38B,GACpD,GAAInI,KAAKwU,MAAM7T,EAAQ6B,WAC5B,OAAOxC,KAAK2kD,8BAA8B9f,EAAMT,EAAUnwB,EAAU9L,GAGtE,IAAIs8B,GAAW,EAEf,GAAIzkC,KAAKwU,MAAM7T,EAAQ0B,aAAc,CACnC,GAAIyiC,GAAwC,KAA7B9kC,KAAK+vC,oBAElB,OADA5nC,EAAM88B,MAAO,EACNJ,EAGT18B,EAAM48B,oBAAsBN,GAAW,EACvCzkC,KAAKsZ,OAGP,OAAKwrB,GAAW9kC,KAAKwU,MAAM7T,EAAQkB,QAC1B7B,KAAK2sD,gCAAgC9nB,EAAMT,EAAUnwB,EAAU9L,EAAOs8B,GACpEA,GAAYzkC,KAAKwU,MAAM7T,EAAQQ,WAAanB,KAAKylB,IAAI9kB,EAAQwB,KAC/DnC,KAAK4sD,YAAY/nB,EAAMT,EAAUnwB,EAAU9L,EAAOs8B,IAEzDt8B,EAAM88B,MAAO,EACNJ,K,yBAIX,SAAYA,EAAMT,EAAUnwB,EAAU9L,EAAOs8B,GAC3C,IAAM7xC,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GAClCjY,EAAWgE,KAAKylB,IAAI9kB,EAAQQ,UAClCvO,EAAK4E,OAASqtC,EACdjyC,EAAKoJ,SAAWA,EAChB,IAAMiF,GAAejF,GAAYgE,KAAKwU,MAAM7T,EAAQM,cAAgBjB,KAAKmI,MAAM9W,MACzE01B,EAAW/qB,EAAWgE,KAAK8lC,kBAAoB7kC,EAAcjB,KAAK6sD,mBAAqB7sD,KAAKioC,iBAAgB,GAgBlH,OAdoB,IAAhBhnC,IACuB,UAArBrO,EAAK4E,OAAO0R,MACdlJ,KAAKuY,MAAM6rB,EAAUv6B,EAAcuH,mBAGrCpR,KAAK2jB,WAAWmpC,eAAe7rD,EAAa8lB,EAAS5f,QAGvDvU,EAAKm0B,SAAWA,EAEZ/qB,GACFgE,KAAK+lC,OAAOplC,EAAQW,UAGlB6G,EAAM48B,qBACRnyC,EAAK6xC,SAAWA,EACTzkC,KAAK+jC,WAAWnxC,EAAM,6BAEtBoN,KAAK+jC,WAAWnxC,EAAM,sB,uBAIjC,SAAUiyC,EAAMT,EAAUnwB,EAAU6wB,EAAS38B,GAC3C,IAAMvV,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GAIxC,OAHArhB,EAAK4E,OAASqtC,EACdjyC,EAAKoF,OAASgI,KAAK+sD,kBACnB5kD,EAAM88B,MAAO,EACNjlC,KAAKusD,gBAAgBvsD,KAAK+jC,WAAWnxC,EAAM,kBAAmBwxC,EAAUnwB,EAAU6wB,K,6CAG3F,SAAgCD,EAAMT,EAAUnwB,EAAU9L,EAAOs8B,GAC/D,IAAM6e,EAA4BtjD,KAAKmI,MAAM8R,uBACzCwM,EAAsB,KAC1BzmB,KAAKmI,MAAM8R,wBAAyB,EACpCja,KAAKsZ,OACL,IAAI1mB,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GAmCtC,OAlCArhB,EAAKoF,OAAS6sC,EAEV18B,EAAMqkD,kBACRxsD,KAAKynB,gBAAgBE,MAr4PlB,IAAI3D,GAlIgC,IAwgQvCyC,EAAsB,IAAImB,IAGxBzf,EAAM48B,sBACRnyC,EAAK6xC,SAAWA,GAIhB7xC,EAAKiI,UADH4pC,EACezkC,KAAK+0C,6BAA6Bp0C,EAAQmB,QAE1C9B,KAAK+0C,6BAA6Bp0C,EAAQmB,OAAsB,WAAd+iC,EAAK37B,KAAiC,UAAd27B,EAAK37B,KAAkBtW,EAAM6zB,GAG1HzmB,KAAKo1C,qBAAqBxiD,EAAMuV,EAAM48B,qBAElC58B,EAAMqkD,iBAAmBxsD,KAAKgtD,0BAA4BvoB,GAC5Dt8B,EAAM88B,MAAO,EACbjlC,KAAKynB,gBAAgBwlC,oBACrBjtD,KAAKynB,gBAAgBoiB,OACrBj3C,EAAOoN,KAAKktD,kCAAkCltD,KAAK4oB,YAAYwb,EAAUnwB,GAAWrhB,KAEhFuV,EAAMqkD,kBACRxsD,KAAKsqD,sBAAsB7jC,GAAqB,GAChDzmB,KAAKynB,gBAAgBoiB,QAGvB7pC,KAAKmtD,sBAAsBv6D,IAG7BoN,KAAKmI,MAAM8R,uBAAyBqpC,EAC7B1wD,I,mCAGT,SAAsBA,EAAM2/C,GAC1BvyC,KAAKotD,qBAAqBx6D,EAAKiI,UAAW03C,K,2CAG5C,SAA8B1N,EAAMT,EAAUnwB,EAAU9L,GACtD,IAAMvV,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GAQxC,OAPArhB,EAAKy6D,IAAMxoB,EACXjyC,EAAK06D,MAAQttD,KAAKg+C,eAAc,GAE5B71C,EAAM48B,qBACR/kC,KAAKuY,MAAM6rB,EAAUv6B,EAAcsF,4BAG9BnP,KAAK+jC,WAAWnxC,EAAM,8B,kCAG/B,SAAqBiyC,GACnB,MAAqB,eAAdA,EAAK37B,MAAuC,UAAd27B,EAAK3pC,MAAoB8E,KAAKmI,MAAMkM,aAAewwB,EAAKz9B,MAAQpH,KAAK4lB,sBAAwBif,EAAKz9B,IAAMy9B,EAAK19B,QAAU,GAAK09B,EAAK19B,QAAUnH,KAAKmI,MAAM2R,mB,kCAG7L,SAAqBlnB,EAAM6xC,GACzB,GAAyB,WAArB7xC,EAAKoF,OAAOkR,KASd,GAR8B,IAA1BtW,EAAKiI,UAAU9B,SAEViH,KAAKwJ,UAAU,qBAClBxJ,KAAKse,aAAa,qBAKM,IAA1B1rB,EAAKiI,UAAU9B,QAAgBnG,EAAKiI,UAAU9B,OAAS,EACzDiH,KAAKuY,MAAM3lB,EAAKuU,MAAO0C,EAAc4C,gBAAiBzM,KAAKwJ,UAAU,qBAAuBxJ,KAAKwJ,UAAU,oBAAsB,uBAAyB,oBACrJ,WACa5W,EAAKiI,WADlB,IACL,2BAAkC,KAAvBqD,EAAuB,QACf,kBAAbA,EAAIgL,MACNlJ,KAAKuY,MAAMra,EAAIiJ,MAAO0C,EAAc8C,2BAHnC,+BAST,OAAO3M,KAAK+jC,WAAWnxC,EAAM6xC,EAAW,yBAA2B,oB,0CAGrE,SAA6BgO,EAAO8a,EAAeC,EAAkBC,EAAchnC,GACjF,IAAMinC,EAAO,GACTvf,GAAQ,EACNwf,EAAgC3tD,KAAKmI,MAAMyS,2BAGjD,IAFA5a,KAAKmI,MAAMyS,4BAA6B,GAEhC5a,KAAKylB,IAAIgtB,IAAQ,CACvB,GAAItE,EACFA,GAAQ,OAIR,GAFAnuC,KAAK+lC,OAAOplC,EAAQoB,OAEhB/B,KAAKwU,MAAMi+B,GAAQ,EACjB8a,GAAkBvtD,KAAKwJ,UAAU,qBAAwBxJ,KAAKwJ,UAAU,qBAC1ExJ,KAAKuY,MAAMvY,KAAKmI,MAAM+L,aAAcrK,EAAc2C,iCAGhDihD,GACFztD,KAAKgjC,SAASyqB,EAAc,gBAAiBztD,KAAKmI,MAAM+L,cAG1DlU,KAAKsZ,OACL,MAIJo0C,EAAK14D,KAAKgL,KAAK4tD,mBAAkB,EAAOnnC,EAAqB+mC,IAI/D,OADAxtD,KAAKmI,MAAMyS,2BAA6B+yC,EACjCD,I,mCAGT,WACE,OAAO1tD,KAAKwU,MAAM7T,EAAQ2B,SAAWtC,KAAK4lB,uB,+CAG5C,SAAkChzB,EAAM8H,GACtC,IAAImzD,EAOJ,OALA7tD,KAAK8tD,kCAAkCpzD,GACvCsF,KAAK+lC,OAAOplC,EAAQ2B,OACpBtC,KAAK01C,qBAAqB9iD,EAAM8H,EAAKG,WAAW,EAAoC,OAA7BgzD,EAAcnzD,EAAKsqB,YAAiB,EAAS6oC,EAAY3c,eAChHxpC,EAAiB9U,EAAM8H,EAAKiN,eAC5BD,EAAiB9U,EAAM8H,EAAK1C,OAAOyP,kBAC5B7U,I,6BAGT,WACE,IAAMwxC,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SAC5B,OAAOjU,KAAKusD,gBAAgBvsD,KAAK6lC,gBAAiBzB,EAAUnwB,GAAU,K,2BAGxE,SAAcwS,GACZ,IAAI7zB,EAEJ,OAAQoN,KAAKmI,MAAMe,MACjB,KAAKvI,EAAQ4E,OACX,OAAOvF,KAAK+tD,aAEd,KAAKptD,EAAQgF,QAIX,OAHA/S,EAAOoN,KAAK8jC,YACZ9jC,KAAKsZ,OAEDtZ,KAAKwU,MAAM7T,EAAQwB,KACdnC,KAAKguD,wBAAwBp7D,IAGjCoN,KAAKwU,MAAM7T,EAAQkB,SACtB7B,KAAKuY,MAAMvY,KAAKmI,MAAM+L,aAAcrK,EAAc6I,mBAG7C1S,KAAK+jC,WAAWnxC,EAAM,WAE/B,KAAK+N,EAAQ2E,MAGX,OAFA1S,EAAOoN,KAAK8jC,YACZ9jC,KAAKsZ,OACEtZ,KAAK+jC,WAAWnxC,EAAM,kBAE/B,KAAK+N,EAAQzF,KAET,GAAI8E,KAAKwlB,aAAa,WAA0C,MAA7BxlB,KAAK+vC,sBAAgC/vC,KAAKqjD,wBAC3E,OAAOrjD,KAAKiuD,wBAGd,IAAMnZ,EAAa90C,KAAKmI,MAAM2R,mBAAqB9Z,KAAKmI,MAAMhB,MACxD6T,EAAchb,KAAKmI,MAAM6S,YACzBve,EAAKuD,KAAKioC,kBAEhB,IAAKjtB,GAA2B,UAAZve,EAAGvB,OAAqB8E,KAAK4lB,qBAAsB,CACrE,GAAI5lB,KAAKwU,MAAM7T,EAAQgE,WAGrB,OAFA3E,KAAK8tD,kCAAkCrxD,GACvCuD,KAAKsZ,OACEtZ,KAAKkuD,cAAcluD,KAAKmlC,gBAAgB1oC,QAAKvK,GAAW,GAC1D,GAAI8N,KAAKwU,MAAM7T,EAAQzF,MAC5B,OAAiC,KAA7B8E,KAAK+vC,oBACA/vC,KAAKmuD,6BAA6BnuD,KAAKmlC,gBAAgB1oC,IAEvDA,EAEJ,GAAIuD,KAAKwU,MAAM7T,EAAQ4D,KAE5B,OADAvE,KAAK8tD,kCAAkCrxD,GAChCuD,KAAKouD,QAAQpuD,KAAKmlC,gBAAgB1oC,IAAK,GAIlD,OAAIq4C,GAAc90C,KAAKwU,MAAM7T,EAAQ2B,SAAWtC,KAAK4lB,sBACnD5lB,KAAKsZ,OACEtZ,KAAK01C,qBAAqB11C,KAAKmlC,gBAAgB1oC,GAAK,CAACA,IAAK,IAG5DA,EAGX,KAAKkE,EAAQ4D,IAET,OAAOvE,KAAKouD,QAAQpuD,KAAK8jC,aAAa,GAG1C,KAAKnjC,EAAQqD,MACb,KAAKrD,EAAQmC,YAGT,OADA9C,KAAKquD,aACEruD,KAAKsuD,mBAAmBtuD,KAAKmI,MAAM9W,OAG9C,KAAKsP,EAAQC,IACX,OAAOZ,KAAKw2C,oBAAoBx2C,KAAKmI,MAAM9W,OAE7C,KAAKsP,EAAQE,OACX,OAAOb,KAAKuuD,mBAAmBvuD,KAAKmI,MAAM9W,OAE5C,KAAKsP,EAAQG,QACX,OAAOd,KAAKwuD,oBAAoBxuD,KAAKmI,MAAM9W,OAE7C,KAAKsP,EAAQK,OACX,OAAOhB,KAAKy2C,mBAAmBz2C,KAAKmI,MAAM9W,OAE5C,KAAKsP,EAAQiF,MACX,OAAO5F,KAAKyuD,mBAEd,KAAK9tD,EAAQkF,MACX,OAAO7F,KAAK02C,qBAAoB,GAElC,KAAK/1C,EAAQmF,OACX,OAAO9F,KAAK02C,qBAAoB,GAElC,KAAK/1C,EAAQkB,OAET,IAAMizC,EAAa90C,KAAKmI,MAAM2R,mBAAqB9Z,KAAKmI,MAAMhB,MAC9D,OAAOnH,KAAK0uD,mCAAmC5Z,GAGnD,KAAKn0C,EAAQU,YACb,KAAKV,EAAQS,aAET,OAAOpB,KAAK2uD,eAAe3uD,KAAKmI,MAAMe,OAASvI,EAAQU,YAAcV,EAAQY,YAAcZ,EAAQW,UAAU,GAAO,EAAMmlB,GAG9H,KAAK9lB,EAAQQ,SAET,OAAOnB,KAAK2uD,eAAehuD,EAAQW,UAAU,GAAM,EAAOmlB,GAG9D,KAAK9lB,EAAQc,UACb,KAAKd,EAAQe,WAET,OAAO1B,KAAK4uD,gBAAgB5uD,KAAKmI,MAAMe,OAASvI,EAAQc,UAAYd,EAAQiB,UAAYjB,EAAQgB,QAAQ,GAAO,EAAM8kB,GAGzH,KAAK9lB,EAAQa,OAET,OAAOxB,KAAK4uD,gBAAgBjuD,EAAQgB,QAAQ,GAAO,EAAO8kB,GAG9D,KAAK9lB,EAAQgE,UACX,OAAO3E,KAAK6uD,8BAEd,KAAKluD,EAAQ+B,GACX1C,KAAK8uD,kBAEP,KAAKnuD,EAAQ6E,OAGX,OAFA5S,EAAOoN,KAAK8jC,YACZ9jC,KAAK+nD,eAAen1D,GACboN,KAAK0iD,WAAW9vD,GAAM,GAE/B,KAAK+N,EAAQ0E,KACX,OAAOrF,KAAK+uD,sBAEd,KAAKpuD,EAAQ6B,UACX,OAAOxC,KAAKg+C,eAAc,GAE5B,KAAKr9C,EAAQuB,YAETtP,EAAOoN,KAAK8jC,YACZ9jC,KAAKsZ,OACL1mB,EAAK4E,OAAS,KACd,IAAMQ,EAASpF,EAAKoF,OAASgI,KAAK+sD,kBAElC,GAAoB,qBAAhB/0D,EAAOkR,KACT,OAAOlJ,KAAK+jC,WAAWnxC,EAAM,kBAE7B,MAAMoN,KAAKuY,MAAMvgB,EAAOmP,MAAO0C,EAAc0I,iBAInD,KAAK5R,EAAQM,YAET,MAGIjB,KAAKmI,MAFP9W,EADF,EACEA,MACA8V,EAFF,EAEEA,MAUF,OARAvU,EAAOoN,KAAK6sD,mBAER7sD,KAAKwU,MAAM7T,EAAQoF,KACrB/F,KAAK2jB,WAAWmpC,eAAez7D,EAAO8V,GAEtCnH,KAAKuY,MAAMpR,EAAO0C,EAAcsG,oBAAqB9e,GAGhDuB,EAGX,KAAK+N,EAAQoC,aACX,GAA6D,SAAzD/C,KAAKue,gBAAgB,mBAAoB,aAAqF,MAA3Dve,KAAKue,gBAAgB,mBAAoB,cAO9G,MAAMve,KAAKmlB,aANXnlB,KAAKmI,MAAM9W,MAAQ,IACnB2O,KAAKmI,MAAMe,KAAOvI,EAAQmD,OAC1B9D,KAAKmI,MAAM6L,MACXhU,KAAKmI,MAAMf,MACXpH,KAAKmI,MAAMiM,OAAOnN,SAKtB,KAAKtG,EAAQmD,OACb,KAAKnD,EAAQgC,KAET,IAAMqsD,EAAehvD,KAAKue,gBAAgB,mBAAoB,YAE9D,GAAIywC,EAAc,CAChBp8D,EAAOoN,KAAK8jC,YACZ,IAAM38B,EAAQnH,KAAKmI,MAAMhB,MACnB8nD,EAAYjvD,KAAKmI,MAAMe,KAE7B,OADAlJ,KAAKsZ,OACEtZ,KAAKkvD,qBAAqBt8D,EAAMuU,EAAO6nD,EAAcC,GAIlE,KAAKtuD,EAAQgD,WAET,GAAyB,MAArB3D,KAAKmI,MAAM9W,MAAe,CAC5B,IAAM89D,EAAcnvD,KAAKgJ,MAAMomD,YAAYpvD,KAAKgd,mBAE5C1G,EAAkB64C,IAAgC,KAAhBA,IACpCnvD,KAAKqvD,gBAAgB,CAAC,MAAO,OAAQ,eAK7C,QACE,MAAMrvD,KAAKmlB,gB,kCAIjB,SAAqBvyB,EAAMuU,EAAO6nD,EAAcC,GAE5C,IAAIK,EADN,GAAItvD,KAAKuvD,gCAAgCP,EAAc7nD,EAAO8nD,GAkB5D,OAdEK,EADmB,UAAjBN,EACS,gCAEA,iBAGRhvD,KAAKwvD,4CACa,UAAjBR,EACFhvD,KAAKuY,MAAMpR,EAAO0C,EAAcoG,wBAEhCjQ,KAAKuY,MAAMpR,EAAO0C,EAAc6F,mBAIpC1P,KAAKyvD,yBACEzvD,KAAK+jC,WAAWnxC,EAAM08D,GAE7B,MAAMtvD,KAAKuY,MAAMpR,EAAO0C,EAAc8F,2BAA4Bs/C,EAAUnvD,S,6CAIhF,SAAgCkvD,EAAc7nD,EAAO8nD,GACnD,OAAQD,GACN,IAAK,OAED,IAAMU,EAAmB1vD,KAAKue,gBAAgB,mBAAoB,cAClE,OAAO0wC,EAAUnvD,QAAU4vD,EAG/B,IAAK,QACH,OAAOT,IAActuD,EAAQgC,KAE/B,QACE,MAAM3C,KAAKuY,MAAMpR,EAAO0C,EAAc4F,+B,0CAI5C,SAA6B7c,GAC3BoN,KAAKunB,UAAUI,MAAM/C,IAAc,EAAM5kB,KAAKunB,UAAU4iC,WACxD,IAAM90D,EAAS,CAAC2K,KAAKioC,mBASrB,OARAjoC,KAAKunB,UAAUsiB,OAEX7pC,KAAK2lB,yBACP3lB,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAcmE,2BAG3ChO,KAAK+lC,OAAOplC,EAAQ2B,OACpBtC,KAAK01C,qBAAqB9iD,EAAMyC,GAAQ,GACjCzC,I,qBAGT,SAAQA,EAAMiyB,GACZ7kB,KAAKse,aAAa,iBAEduG,GACF7kB,KAAKse,aAAa,sBAGpB1rB,EAAKyJ,MAAQwoB,EACb7kB,KAAKsZ,OACL,IAAM0N,EAAYhnB,KAAKmI,MAAM0S,OAY7B,OAXA7a,KAAKmI,MAAM0S,OAAS,GAEhBgK,GACF7kB,KAAKunB,UAAUI,MAxxQD,GAyxQd/0B,EAAKc,KAAOsM,KAAK2vD,aACjB3vD,KAAKunB,UAAUsiB,QAEfj3C,EAAKc,KAAOsM,KAAK2vD,aAGnB3vD,KAAKmI,MAAM0S,OAASmM,EACbhnB,KAAK+jC,WAAWnxC,EAAM,kB,wBAG/B,WACE,IAAMA,EAAOoN,KAAK8jC,YAalB,OAZA9jC,KAAKsZ,QAEDtZ,KAAKwU,MAAM7T,EAAQkB,SAAY7B,KAAKrN,MAAMgxC,kBAAqB3jC,KAAKQ,QAAQwoD,wBAEpEhpD,KAAKrN,MAAMi9D,YAAe5vD,KAAKQ,QAAQwoD,yBACjDhpD,KAAKuY,MAAM3lB,EAAKuU,MAAO0C,EAAcuI,iBAFrCpS,KAAKuY,MAAM3lB,EAAKuU,MAAO0C,EAAcsH,iBAKlCnR,KAAKwU,MAAM7T,EAAQkB,SAAY7B,KAAKwU,MAAM7T,EAAQQ,WAAcnB,KAAKwU,MAAM7T,EAAQwB,MACtFnC,KAAKuY,MAAM3lB,EAAKuU,MAAO0C,EAAciJ,kBAGhC9S,KAAK+jC,WAAWnxC,EAAM,W,mCAG/B,SAAsBqgD,GAGpB,OAFkBjzC,KAAKwU,MAAM7T,EAAQM,cAG9BgyC,GACHjzC,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAQ,EAAG0C,EAAcqI,wBAG1ClS,KAAK6sD,oBAEL7sD,KAAKioC,iBAAgB,K,8BAIhC,WACE,IAAMr1C,EAAOoN,KAAK8jC,YACZrnC,EAAKuD,KAAK4oB,YAAY5oB,KAAKmI,MAAMhB,MAAQ,EAAG,IAAIL,EAAS9G,KAAKmI,MAAM0R,QAAS7Z,KAAKmI,MAAMhB,MAAQ,EAAInH,KAAKmI,MAAMsM,YAC/GvZ,EAAO8E,KAAKmI,MAAM9W,MAGxB,OAFA2O,KAAKsZ,OACL1mB,EAAK6J,GAAKuD,KAAKs8C,iBAAiB7/C,EAAIvB,GAC7B8E,KAAK+jC,WAAWnxC,EAAM,iB,yCAG/B,WACE,IAAMA,EAAOoN,KAAK8jC,YAGlB,GAFA9jC,KAAKsZ,OAEDtZ,KAAKunB,UAAU4iC,UAAYnqD,KAAKwU,MAAM7T,EAAQwB,KAAM,CACtD,IAAM0tD,EAAO7vD,KAAKs8C,iBAAiBt8C,KAAKmlC,gBAAgBvyC,GAAO,YAE/D,OADAoN,KAAKsZ,OACEtZ,KAAK8vD,kBAAkBl9D,EAAMi9D,EAAM,QAG5C,OAAO7vD,KAAKkuD,cAAct7D,K,+BAG5B,SAAkBA,EAAMi9D,EAAME,GAC5Bn9D,EAAKi9D,KAAOA,EAEM,aAAdA,EAAK30D,MAAwC,SAAjB60D,IAC1B/vD,KAAKwlB,aAAauqC,GACpB/vD,KAAKse,aAAa,gBACRte,KAAKwJ,UAAU,iBACzBxJ,KAAKmlB,cAIT,IAAMnK,EAAchb,KAAKmI,MAAM6S,YAO/B,OANApoB,EAAKm0B,SAAW/mB,KAAKioC,iBAAgB,IAEjCr1C,EAAKm0B,SAAS7rB,OAAS60D,GAAgB/0C,IACzChb,KAAKuY,MAAM3lB,EAAKm0B,SAAS5f,MAAO0C,EAAc8I,wBAAyBk9C,EAAK30D,KAAM60D,GAG7E/vD,KAAK+jC,WAAWnxC,EAAM,kB,qCAG/B,SAAwBA,GACtB,IAAM6J,EAAKuD,KAAKs8C,iBAAiBt8C,KAAKmlC,gBAAgBvyC,GAAO,UAW7D,OAVAoN,KAAKsZ,OAEDtZ,KAAKwlB,aAAa,UACfxlB,KAAKgX,UACRhX,KAAKuY,MAAM9b,EAAG0K,MAAOoM,EAA8BC,yBAGrDxT,KAAKoJ,mBAAoB,GAGpBpJ,KAAK8vD,kBAAkBl9D,EAAM6J,EAAI,U,gCAG1C,SAAmBpL,EAAO6X,EAAMtW,GAK9B,OAJAoN,KAAKgjC,SAASpwC,EAAM,WAAYvB,GAChC2O,KAAKgjC,SAASpwC,EAAM,MAAOoN,KAAKgJ,MAAMxO,MAAM5H,EAAKuU,MAAOnH,KAAKmI,MAAMf,MACnExU,EAAKvB,MAAQA,EACb2O,KAAKsZ,OACEtZ,KAAK+jC,WAAWnxC,EAAMsW,K,0BAG/B,SAAa7X,EAAO6X,GAClB,IAAMtW,EAAOoN,KAAK8jC,YAClB,OAAO9jC,KAAK6uC,mBAAmBx9C,EAAO6X,EAAMtW,K,gCAG9C,SAAmBvB,GACjB,OAAO2O,KAAKwiC,aAAanxC,EAAO,mB,iCAGlC,SAAoBA,GAClB,OAAO2O,KAAKwiC,aAAanxC,EAAO,oB,gCAGlC,SAAmBA,GACjB,OAAO2O,KAAKwiC,aAAanxC,EAAO,mB,iCAGlC,SAAoBA,GAClB,OAAO2O,KAAKwiC,aAAanxC,EAAO,oB,gCAGlC,SAAmBA,GACjB,IAAMuB,EAAOoN,KAAKwiC,aAAanxC,EAAMA,MAAO,iBAG5C,OAFAuB,EAAKstB,QAAU7uB,EAAM6uB,QACrBttB,EAAKslB,MAAQ7mB,EAAM6mB,MACZtlB,I,iCAGT,SAAoBvB,GAClB,IAAMuB,EAAOoN,KAAK8jC,YAGlB,OAFAlxC,EAAKvB,MAAQA,EACb2O,KAAKsZ,OACEtZ,KAAK+jC,WAAWnxC,EAAM,oB,8BAG/B,WACE,IAAMA,EAAOoN,KAAK8jC,YAElB,OADA9jC,KAAKsZ,OACEtZ,KAAK+jC,WAAWnxC,EAAM,iB,gDAG/B,SAAmCkiD,GACjC,IAEIt5B,EAFE4oB,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SAE5BjU,KAAKsZ,OACLtZ,KAAKynB,gBAAgBE,MA77QhB,IAAI3D,GAhI2B,IA8jRpC,IAAMs/B,EAA4BtjD,KAAKmI,MAAM8R,uBACvC0zC,EAAgC3tD,KAAKmI,MAAMyS,2BACjD5a,KAAKmI,MAAM8R,wBAAyB,EACpCja,KAAKmI,MAAMyS,4BAA6B,EASxC,IARA,IAKIo1C,EACAC,EANEC,EAAgBlwD,KAAKmI,MAAMhB,MAC3BgpD,EAAgBnwD,KAAKmI,MAAM8L,SAC3Bo+B,EAAW,GACX5rB,EAAsB,IAAImB,GAC5BumB,GAAQ,GAIJnuC,KAAKwU,MAAM7T,EAAQmB,SAAS,CAClC,GAAIqsC,EACFA,GAAQ,OAIR,GAFAnuC,KAAK+lC,OAAOplC,EAAQoB,OAAmD,IAA5C0kB,EAAoBI,mBAA4B,KAAOJ,EAAoBI,oBAElG7mB,KAAKwU,MAAM7T,EAAQmB,QAAS,CAC9BmuD,EAAqBjwD,KAAKmI,MAAMhB,MAChC,MAIJ,GAAInH,KAAKwU,MAAM7T,EAAQ4B,UAAW,CAChC,IAAM6tD,EAAqBpwD,KAAKmI,MAAMhB,MAChCkpD,EAAqBrwD,KAAKmI,MAAM8L,SACtC+7C,EAAchwD,KAAKmI,MAAMhB,MACzBkrC,EAASr9C,KAAKgL,KAAKswD,eAAetwD,KAAKuwD,mBAAoBH,EAAoBC,IAC/ErwD,KAAKwwD,oBAAoB,IACzB,MAEAne,EAASr9C,KAAKgL,KAAKimC,wBAAwBxf,EAAqBzmB,KAAKswD,iBAIzE,IAAMG,EAAczwD,KAAKmI,MAAMkM,WACzBq8C,EAAc1wD,KAAKmI,MAAMmM,cAC/BtU,KAAK+lC,OAAOplC,EAAQmB,QACpB9B,KAAKmI,MAAM8R,uBAAyBqpC,EACpCtjD,KAAKmI,MAAMyS,2BAA6B+yC,EACxC,IAAIgD,EAAY3wD,KAAK4oB,YAAYwb,EAAUnwB,GAE3C,GAAI6gC,GAAc90C,KAAK4wD,iBAAiBve,KAAcse,EAAY3wD,KAAKy1C,WAAWkb,IAIhF,OAHA3wD,KAAKynB,gBAAgBwlC,oBACrBjtD,KAAKynB,gBAAgBoiB,OACrB7pC,KAAK01C,qBAAqBib,EAAWte,GAAU,GACxCse,EAwBT,GArBA3wD,KAAKynB,gBAAgBoiB,OAEhBwI,EAASt5C,QACZiH,KAAKmlB,WAAWnlB,KAAKmI,MAAM+L,cAGzB+7C,GAAoBjwD,KAAKmlB,WAAW8qC,GACpCD,GAAahwD,KAAKmlB,WAAW6qC,GACjChwD,KAAKsqD,sBAAsB7jC,GAAqB,GAChDzmB,KAAKotD,qBAAqB/a,GAAU,GAEhCA,EAASt5C,OAAS,IACpByiB,EAAMxb,KAAK4oB,YAAYsnC,EAAeC,IAClCpG,YAAc1X,EAClBryC,KAAK+jC,WAAWvoB,EAAK,sBACrBA,EAAIpU,IAAMqpD,EACVj1C,EAAItT,IAAId,IAAMspD,GAEdl1C,EAAM62B,EAAS,IAGZryC,KAAKQ,QAAQ0oD,+BAGhB,OAFAlpD,KAAKgjC,SAASxnB,EAAK,iBAAiB,GACpCxb,KAAKgjC,SAASxnB,EAAK,aAAc4oB,GAC1B5oB,EAGT,IAAMq1C,EAAkB7wD,KAAK4oB,YAAYwb,EAAUnwB,GAGnD,OAFA48C,EAAgBr/D,WAAagqB,EAC7Bxb,KAAK+jC,WAAW8sB,EAAiB,2BAC1BA,I,8BAGT,SAAiBx7D,GACf,OAAQ2K,KAAK4lB,uB,wBAGf,SAAWhzB,GACT,GAAIoN,KAAKylB,IAAI9kB,EAAQ2B,OACnB,OAAO1P,I,4BAIX,SAAeA,EAAMwxC,EAAUnwB,GAC7B,OAAOrhB,I,iCAGT,WACE,IAAMA,EAAOoN,KAAK8jC,YAGlB,GAFA9jC,KAAKsZ,OAEDtZ,KAAKwU,MAAM7T,EAAQwB,KAAM,CAC3B,IAAM0tD,EAAO7vD,KAAKs8C,iBAAiBt8C,KAAKmlC,gBAAgBvyC,GAAO,OAC/DoN,KAAKsZ,OACL,IAAMw3C,EAAW9wD,KAAK8vD,kBAAkBl9D,EAAMi9D,EAAM,UAMpD,OAJK7vD,KAAKrN,MAAMo+D,oBAAuB/wD,KAAKrN,MAAMktB,SAChD7f,KAAKuY,MAAMu4C,EAAS3pD,MAAO0C,EAAcmI,qBAGpC8+C,EAGT,OAAO9wD,KAAKgxD,SAASp+D,K,sBAGvB,SAASA,GAYP,OAXAA,EAAKoF,OAASgI,KAAK+sD,kBAEM,WAArBn6D,EAAKoF,OAAOkR,KACdlJ,KAAKuY,MAAM3lB,EAAKoF,OAAOmP,MAAO0C,EAAc6C,4BACnC1M,KAAKixD,gBAAgBr+D,EAAKoF,QACnCgI,KAAKuY,MAAMvY,KAAKmI,MAAMkM,WAAYxK,EAAcqF,uBACvClP,KAAKylB,IAAI9kB,EAAQ0B,cAC1BrC,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAcqF,uBAG7ClP,KAAKkxD,kBAAkBt+D,GAChBoN,KAAK+jC,WAAWnxC,EAAM,mB,+BAG/B,SAAkBA,GAChB,GAAIoN,KAAKylB,IAAI9kB,EAAQkB,QAAS,CAC5B,IAAM3H,EAAO8F,KAAKmxD,cAAcxwD,EAAQmB,QACxC9B,KAAK4yC,iBAAiB14C,GACtBtH,EAAKiI,UAAYX,OAEjBtH,EAAKiI,UAAY,K,kCAIrB,SAAqBu2D,GACnB,IAAMC,EAAOrxD,KAAK8jC,YAclB,OAZyB,OAArB9jC,KAAKmI,MAAM9W,QACR+/D,GACHpxD,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAQ,EAAG0C,EAAcoD,gCAInDokD,EAAKhgE,MAAQ,CACXsxC,IAAK3iC,KAAKgJ,MAAMxO,MAAMwF,KAAKmI,MAAMhB,MAAOnH,KAAKmI,MAAMf,KAAK1Q,QAAQ,SAAU,MAC1E46D,OAAQtxD,KAAKmI,MAAM9W,OAErB2O,KAAKsZ,OACL+3C,EAAKE,KAAOvxD,KAAKwU,MAAM7T,EAAQ6B,WACxBxC,KAAK+jC,WAAWstB,EAAM,qB,2BAG/B,SAAcD,GACZ,IAAMx+D,EAAOoN,KAAK8jC,YAClB9jC,KAAKsZ,OACL1mB,EAAKm3D,YAAc,GACnB,IAAIyH,EAASxxD,KAAKyxD,qBAAqBL,GAGvC,IAFAx+D,EAAK8+D,OAAS,CAACF,IAEPA,EAAOD,MACbvxD,KAAK+lC,OAAOplC,EAAQ8B,cACpB7P,EAAKm3D,YAAY/0D,KAAKgL,KAAK2xD,6BAC3B3xD,KAAK+lC,OAAOplC,EAAQgB,QACpB/O,EAAK8+D,OAAO18D,KAAKw8D,EAASxxD,KAAKyxD,qBAAqBL,IAItD,OADApxD,KAAKsZ,OACEtZ,KAAK+jC,WAAWnxC,EAAM,qB,uCAG/B,WACE,OAAOoN,KAAK8lC,oB,6BAGd,SAAgB2M,EAAOxO,EAAWolB,EAAU5iC,GACtC4iC,GACFrpD,KAAKse,aAAa,kBAGpB,IAAMqvC,EAAgC3tD,KAAKmI,MAAMyS,2BACjD5a,KAAKmI,MAAMyS,4BAA6B,EACxC,IAAMg3C,EAAW1gE,OAAOm3B,OAAO,MAC3B8lB,GAAQ,EACNv7C,EAAOoN,KAAK8jC,YAIlB,IAHAlxC,EAAKqH,WAAa,GAClB+F,KAAKsZ,QAEGtZ,KAAKwU,MAAMi+B,IAAQ,CACzB,GAAItE,EACFA,GAAQ,OAIR,GAFAnuC,KAAK+lC,OAAOplC,EAAQoB,OAEhB/B,KAAKwU,MAAMi+B,GAAQ,CACrBzyC,KAAKgjC,SAASpwC,EAAM,gBAAiBoN,KAAKmI,MAAM+L,cAChD,MAIJ,IAAMimB,EAAOn6B,KAAK6xD,wBAAwB5tB,EAAWxd,GAEhDwd,GACHjkC,KAAK8xD,WAAW33B,EAAMkvB,EAAUuI,EAAUnrC,GAGxC4iC,IAAarpD,KAAK4iC,iBAAiBzI,IAAuB,kBAAdA,EAAKjxB,MACnDlJ,KAAKuY,MAAM4hB,EAAKhzB,MAAO0C,EAAc+D,uBAGnCusB,EAAKgK,WACPnkC,KAAKgjC,SAAS7I,EAAM,aAAa,GAGnCvnC,EAAKqH,WAAWjF,KAAKmlC,GAGvBn6B,KAAKsZ,OACLtZ,KAAKmI,MAAMyS,2BAA6B+yC,EACxC,IAAIzkD,EAAO,mBAQX,OANI+6B,EACF/6B,EAAO,gBACEmgD,IACTngD,EAAO,oBAGFlJ,KAAK+jC,WAAWnxC,EAAMsW,K,sCAG/B,SAAyBixB,GACvB,OAAQA,EAAKn+B,UAA8B,eAAlBm+B,EAAKngC,IAAIkP,OAA0BlJ,KAAK24C,yBAA2B34C,KAAKwU,MAAM7T,EAAQQ,WAAanB,KAAKwU,MAAM7T,EAAQoD,S,qCAGjJ,SAAwBkgC,EAAWxd,GACjC,IAAIxwB,EAAa,GAEjB,GAAI+J,KAAKwU,MAAM7T,EAAQ+B,IAKrB,IAJI1C,KAAKwJ,UAAU,eACjBxJ,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAcgJ,8BAGtC7S,KAAKwU,MAAM7T,EAAQ+B,KACxBzM,EAAWjB,KAAKgL,KAAK+xD,kBAIzB,IAII3tB,EACAnwB,EALEkmB,EAAOn6B,KAAK8jC,YACdhf,GAAc,EACdD,GAAU,EACVqf,GAAa,EAIjB,GAAIlkC,KAAKwU,MAAM7T,EAAQ4B,UAGrB,OAFItM,EAAW8C,QAAQiH,KAAKmlB,aAExB8e,GACFjkC,KAAKsZ,OACL6gB,EAAK9gC,SAAW2G,KAAKioC,kBACrBjoC,KAAKwwD,oBAAoB,KAClBxwD,KAAK+jC,WAAW5J,EAAM,gBAGxBn6B,KAAKgyD,cAGV/7D,EAAW8C,SACbohC,EAAKlkC,WAAaA,EAClBA,EAAa,IAGfkkC,EAAK58B,QAAS,GAEV0mC,GAAaxd,KACf2d,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,UAGnBgwB,IACHnf,EAAc9kB,KAAKylB,IAAI9kB,EAAQoD,OAGjC,IAAMiX,EAAchb,KAAKmI,MAAM6S,YACzBhhB,EAAMgG,KAAK28C,kBAAkBxiB,GAAM,GAEzC,IAAK8J,IAAcnf,IAAgB9J,GAAehb,KAAKiyD,yBAAyB93B,GAAO,CACrF,IAAM+3B,EAAUl4D,EAAIkB,KAEJ,UAAZg3D,GAAwBlyD,KAAK2lB,0BAC/Bd,GAAU,EACV7kB,KAAK8tD,kCAAkC9zD,GACvC8qB,EAAc9kB,KAAKylB,IAAI9kB,EAAQoD,MAC/B/D,KAAK28C,kBAAkBxiB,GAAM,IAGf,QAAZ+3B,GAAiC,QAAZA,IACvBhuB,GAAa,EACblkC,KAAK8tD,kCAAkC9zD,GACvCmgC,EAAK/jC,KAAO87D,EAERlyD,KAAKwU,MAAM7T,EAAQoD,QACrB+gB,GAAc,EACd9kB,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAcE,oBAAqBmoD,GAC9DlyD,KAAKsZ,QAGPtZ,KAAK28C,kBAAkBxiB,GAAM,IAKjC,OADAn6B,KAAKmyD,kBAAkBh4B,EAAMiK,EAAUnwB,EAAU6Q,EAAaD,EAASof,EAAWC,EAAYzd,GACvF0T,I,+CAGT,SAAkC58B,GAChC,MAAuB,QAAhBA,EAAOnH,KAAiB,EAAI,I,0CAGrC,SAA6BmH,GAC3B,OAAOA,EAAOlI,S,qCAGhB,SAAwBkI,GACtB,IAAI60D,EAEErkB,EAAa/tC,KAAKqyD,kCAAkC90D,GACpDlI,EAAS2K,KAAKgzC,6BAA6Bz1C,GAC3C4J,EAAQ5J,EAAO4J,MAEjB9R,EAAO0D,SAAWg1C,IACA,QAAhBxwC,EAAOnH,KACT4J,KAAKuY,MAAMpR,EAAO0C,EAAcU,gBAEhCvK,KAAKuY,MAAMpR,EAAO0C,EAAcW,iBAIhB,QAAhBjN,EAAOnH,MAA8F,iBAAlC,OAAxCg8D,EAAU/8D,EAAOA,EAAO0D,OAAS,SAAc,EAASq5D,EAAQlpD,OAC7FlJ,KAAKuY,MAAMpR,EAAO0C,EAAcY,0B,+BAIpC,SAAkB0vB,EAAMrV,EAAaD,EAASof,EAAWC,GACvD,OAAIA,GACFlkC,KAAKsjC,YAAYnJ,EAAMrV,GAAa,GAAO,GAAO,EAAO,gBACzD9kB,KAAKsyD,wBAAwBn4B,GACtBA,GAGLtV,GAAWC,GAAe9kB,KAAKwU,MAAM7T,EAAQkB,SAC3CoiC,GAAWjkC,KAAKmlB,aACpBgV,EAAK/jC,KAAO,SACZ+jC,EAAK58B,QAAS,EACPyC,KAAKsjC,YAAYnJ,EAAMrV,EAAaD,GAAS,GAAO,EAAO,sBAJpE,I,iCAQF,SAAoBsV,EAAMiK,EAAUnwB,EAAUgwB,EAAWxd,GAGvD,OAFA0T,EAAKgK,WAAY,EAEbnkC,KAAKylB,IAAI9kB,EAAQsB,QACnBk4B,EAAK9oC,MAAQ4yC,EAAYjkC,KAAK4jD,kBAAkB5jD,KAAKmI,MAAMhB,MAAOnH,KAAKmI,MAAM8L,UAAYjU,KAAKimC,wBAAwBxf,GAC/GzmB,KAAK+jC,WAAW5J,EAAM,mBAG1BA,EAAKn+B,UAA8B,eAAlBm+B,EAAKngC,IAAIkP,UAA/B,GACElJ,KAAKg0C,kBAAkB7Z,EAAKngC,IAAIkB,KAAMi/B,EAAKngC,IAAImN,OAAO,GAAM,GAExD88B,EACF9J,EAAK9oC,MAAQ2O,KAAK4jD,kBAAkBxf,EAAUnwB,EAAUkU,GAAgBgS,EAAKngC,MACpEgG,KAAKwU,MAAM7T,EAAQkC,KAAO4jB,IACU,IAAzCA,EAAoBE,kBACtBF,EAAoBE,gBAAkB3mB,KAAKmI,MAAMhB,OAGnDgzB,EAAK9oC,MAAQ2O,KAAK4jD,kBAAkBxf,EAAUnwB,EAAUkU,GAAgBgS,EAAKngC,OAE7EmgC,EAAK9oC,MAAQ82B,GAAgBgS,EAAKngC,KAGpCmgC,EAAKgK,WAAY,EACVnkC,KAAK+jC,WAAW5J,EAAM,qB,+BAIjC,SAAkBA,EAAMiK,EAAUnwB,EAAU6Q,EAAaD,EAASof,EAAWC,EAAYzd,GACvF,IAAM7zB,EAAOoN,KAAKuyD,kBAAkBp4B,EAAMrV,EAAaD,EAASof,EAAWC,IAAelkC,KAAKwyD,oBAAoBr4B,EAAMiK,EAAUnwB,EAAUgwB,EAAWxd,GAExJ,OADK7zB,GAAMoN,KAAKmlB,aACTvyB,I,+BAGT,SAAkBunC,EAAM8Y,GACtB,GAAIjzC,KAAKylB,IAAI9kB,EAAQQ,UACnBg5B,EAAKn+B,UAAW,EAChBm+B,EAAKngC,IAAMgG,KAAKimC,0BAChBjmC,KAAK+lC,OAAOplC,EAAQW,cACf,CACL,IAAMmxD,EAAoBzyD,KAAKmI,MAAMiS,eACrCpa,KAAKmI,MAAMiS,gBAAiB,EAC5B,IAAMlR,EAAOlJ,KAAKmI,MAAMe,KACxBixB,EAAKngC,IAAMkP,IAASvI,EAAQC,KAAOsI,IAASvI,EAAQK,QAAUkI,IAASvI,EAAQE,QAAUqI,IAASvI,EAAQG,QAAUd,KAAK6lC,gBAAkB7lC,KAAK0yD,sBAAsBzf,GAElK/pC,IAASvI,EAAQM,cACnBk5B,EAAKn+B,UAAW,GAGlBgE,KAAKmI,MAAMiS,eAAiBq4C,EAG9B,OAAOt4B,EAAKngC,M,0BAGd,SAAapH,EAAMiyB,GACjBjyB,EAAK6J,GAAK,KACV7J,EAAKwJ,WAAY,EACjBxJ,EAAKyJ,QAAUwoB,I,yBAGjB,SAAYjyB,EAAMkyB,EAAaD,EAAS1uB,EAAewtC,EAAkBz6B,GAA4B,IAAtB06B,EAAsB,wDACnG5jC,KAAK2yD,aAAa//D,EAAMiyB,GACxBjyB,EAAKwJ,YAAc0oB,EACnB,IAAMmvB,EAAiB99C,EAOvB,OANA6J,KAAKrN,MAAMg1B,MAAMwpB,IAAgCvN,EAAetsB,GAAc,IAAMqsB,EAzpV7D,GAypVqG,IAC5H3jC,KAAKunB,UAAUI,MAAM/C,GAAcC,EAASjyB,EAAKwJ,YACjD4D,KAAKw1C,oBAAoB5iD,EAAMqhD,GAC/Bj0C,KAAK4yD,2BAA2BhgE,EAAMsW,GAAM,GAC5ClJ,KAAKunB,UAAUsiB,OACf7pC,KAAKrN,MAAMk3C,OACJj3C,I,4BAGT,SAAe6/C,EAAOC,EAAcC,EAASlsB,GACvCksB,GACF3yC,KAAKse,aAAa,kBAGpB,IAAMqvC,EAAgC3tD,KAAKmI,MAAMyS,2BACjD5a,KAAKmI,MAAMyS,4BAA6B,EACxC,IAAMhoB,EAAOoN,KAAK8jC,YAIlB,OAHA9jC,KAAKsZ,OACL1mB,EAAKiV,SAAW7H,KAAKmxD,cAAc1e,GAAQE,EAASlsB,EAAqB7zB,GACzEoN,KAAKmI,MAAMyS,2BAA6B+yC,EACjC3tD,KAAK+jC,WAAWnxC,EAAM+/C,EAAU,kBAAoB,qB,kCAG7D,SAAqB//C,EAAMyC,EAAQwvB,EAASytB,GAC1CtyC,KAAKrN,MAAMg1B,MAAMwpB,GACjB,IAAIj5B,EAAQ0M,GAAcC,GAAS,IAE9B7kB,KAAKwU,MAAM7T,EAAQQ,WAAanB,KAAKunB,UAAUojC,QAClDzyC,GA13RW,GA63RblY,KAAKunB,UAAUI,MAAMzP,GACrBlY,KAAK2yD,aAAa//D,EAAMiyB,GACxB,IAAMy+B,EAA4BtjD,KAAKmI,MAAM8R,uBAY7C,OAVI5kB,IACF2K,KAAKmI,MAAM8R,wBAAyB,EACpCja,KAAK6yD,2BAA2BjgE,EAAMyC,EAAQi9C,IAGhDtyC,KAAKmI,MAAM8R,wBAAyB,EACpCja,KAAK8yD,kBAAkBlgE,GAAM,GAC7BoN,KAAKunB,UAAUsiB,OACf7pC,KAAKrN,MAAMk3C,OACX7pC,KAAKmI,MAAM8R,uBAAyBqpC,EAC7BtjD,KAAK+jC,WAAWnxC,EAAM,6B,wCAG/B,SAA2BA,EAAMyC,EAAQi9C,GACvC1/C,EAAKyC,OAAS2K,KAAKixC,iBAAiB57C,EAAQi9C,GAAkB,K,wCAGhE,SAA2B1/C,EAAMsW,GAAwB,IAAlBw6B,EAAkB,wDACvD1jC,KAAK8yD,kBAAkBlgE,GAAM,EAAO8wC,GACpC1jC,KAAK+jC,WAAWnxC,EAAMsW,K,+BAGxB,SAAkBtW,EAAM6wC,GAAmC,WAAlBC,EAAkB,wDACnDqvB,EAAetvB,IAAoBzjC,KAAKwU,MAAM7T,EAAQa,QAG5D,GAFAxB,KAAKynB,gBAAgBE,MAAMnD,MAEvBuuC,EACFngE,EAAKc,KAAOsM,KAAKwwC,mBACjBxwC,KAAKgzD,YAAYpgE,GAAM,EAAO6wC,GAAiB,OAC1C,CACL,IAAMukB,EAAYhoD,KAAKmI,MAAMyR,OACvBoN,EAAYhnB,KAAKmI,MAAM0S,OAC7B7a,KAAKmI,MAAM0S,OAAS,GACpB7a,KAAKunB,UAAUI,MAn6RA,EAm6RM3nB,KAAKunB,UAAU5C,gBACpC/xB,EAAKc,KAAOsM,KAAK2vD,YAAW,GAAM,GAAO,SAAAsD,GACvC,IAAMC,GAAa,EAAKC,kBAAkBvgE,EAAKyC,QAE/C,GAAI49D,GAA0BC,EAAW,CACvC,IAAME,EAA0B,WAAdxgE,EAAKwD,MAAmC,gBAAdxD,EAAKwD,OAA6BxD,EAAKoH,IAAqBpH,EAAKuU,MAApBvU,EAAKoH,IAAIoN,IAClG,EAAKmR,MAAM66C,EAAUvpD,EAAcwC,8BAGrC,IAAMgnD,GAAqBrL,GAAa,EAAK7/C,MAAMyR,OACnD,EAAKo5C,YAAYpgE,GAAO,EAAKuV,MAAMyR,SAAW6pB,IAAoBC,IAAawvB,EAAWzvB,EAAiB4vB,GAEvG,EAAKlrD,MAAMyR,QAAUhnB,EAAK6J,IAC5B,EAAK62C,UAAU1gD,EAAK6J,GAAI,gBAjtVbgtC,QAitV4Cv3C,OAAWA,EAAWmhE,MAGjFrzD,KAAKunB,UAAUsiB,OACf7pC,KAAKynB,gBAAgBoiB,OACrB7pC,KAAKmI,MAAM0S,OAASmM,K,+BAIxB,SAAkB3xB,GAChB,IAAK,IAAIiF,EAAI,EAAG8lB,EAAM/qB,EAAO0D,OAAQuB,EAAI8lB,EAAK9lB,IAC5C,GAAuB,eAAnBjF,EAAOiF,GAAG4O,KAAuB,OAAO,EAG9C,OAAO,I,yBAGT,SAAYtW,EAAMgiD,EAAiBC,GAA2C,MAA1Bwe,IAA0B,yDACtEC,EAAe,IAAIz7D,IADmD,IAGxDjF,EAAKyC,QAHmD,IAG5E,2BAAiC,KAAtB+I,EAAsB,QAC/B4B,KAAKszC,UAAUl1C,EAAO,0BA7uVXqrC,EA6uVgDmL,EAAkB,KAAO0e,OAAcphE,EAAWmhE,IAJnC,iC,2BAQ9E,SAAc5gB,EAAO8gB,EAAY9sC,EAAqBgnC,GAIpD,IAHA,IAAMC,EAAO,GACTvf,GAAQ,GAEJnuC,KAAKylB,IAAIgtB,IAAQ,CACvB,GAAItE,EACFA,GAAQ,OAIR,GAFAnuC,KAAK+lC,OAAOplC,EAAQoB,OAEhB/B,KAAKwU,MAAMi+B,GAAQ,CACjBgb,GACFztD,KAAKgjC,SAASyqB,EAAc,gBAAiBztD,KAAKmI,MAAM+L,cAG1DlU,KAAKsZ,OACL,MAIJo0C,EAAK14D,KAAKgL,KAAK4tD,kBAAkB2F,EAAY9sC,IAG/C,OAAOinC,I,+BAGT,SAAkB6F,EAAY9sC,EAAqB+mC,GACjD,IAAI1J,EAEJ,GAAI9jD,KAAKwU,MAAM7T,EAAQoB,OAChBwxD,GACHvzD,KAAKuY,MAAMvY,KAAKmI,MAAM6L,IAAKnK,EAAcwI,gBAAiB,KAG5DyxC,EAAM,UACD,GAAI9jD,KAAKwU,MAAM7T,EAAQ4B,UAAW,CACvC,IAAM6tD,EAAqBpwD,KAAKmI,MAAMhB,MAChCkpD,EAAqBrwD,KAAKmI,MAAM8L,SACtC6vC,EAAM9jD,KAAKswD,eAAetwD,KAAKgyD,YAAYvrC,GAAsB2pC,EAAoBC,QAChF,GAAIrwD,KAAKwU,MAAM7T,EAAQyB,UAAW,CACvCpC,KAAKse,aAAa,sBAEbkvC,GACHxtD,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAc4H,+BAG7C,IAAM7e,EAAOoN,KAAK8jC,YAClB9jC,KAAKsZ,OACLwqC,EAAM9jD,KAAK+jC,WAAWnxC,EAAM,4BAE5BkxD,EAAM9jD,KAAKimC,wBAAwBxf,EAAqBzmB,KAAKswD,gBAG/D,OAAOxM,I,6BAGT,SAAgBvY,GACd,IAAM34C,EAAOoN,KAAK8jC,YACZ5oC,EAAO8E,KAAKunD,oBAAoB30D,EAAKuU,MAAOokC,GAClD,OAAOvrC,KAAKs8C,iBAAiB1pD,EAAMsI,K,8BAGrC,SAAiBtI,EAAMsI,GAGrB,OAFAtI,EAAKsI,KAAOA,EACZtI,EAAKsV,IAAIZ,eAAiBpM,EACnB8E,KAAK+jC,WAAWnxC,EAAM,gB,iCAG/B,SAAoBohB,EAAKu3B,GACvB,IAAIrwC,EACJ,EAGI8E,KAAKmI,MAFPhB,EADF,EACEA,MACA+B,EAFF,EAEEA,KAGF,GAAIA,IAASvI,EAAQzF,KACnBA,EAAO8E,KAAKmI,MAAM9W,UACb,KAAI6X,EAAKjJ,QAGd,MAAMD,KAAKmlB,aAFXjqB,EAAOgO,EAAKjJ,QAYd,OAPIsrC,EACFvrC,KAAKmI,MAAMe,KAAOvI,EAAQzF,KAE1B8E,KAAKg0C,kBAAkB94C,EAAMiM,IAAS+B,EAAKjJ,SAAS,GAGtDD,KAAKsZ,OACEpe,I,+BAGT,SAAkB6b,EAAM9C,EAAUgxC,EAAe5gB,GAC/C,KAAIttB,EAAKhe,OAAS,KA32VtB,SAA2Bge,GACzB,OAAOM,GAAoBha,IAAI0Z,GA82VxBy8C,CAAkBz8C,GAAvB,CAIA,GAAa,UAATA,GACF,GAAI/W,KAAKunB,UAAU4iC,SAEjB,YADAnqD,KAAKuY,MAAMtE,EAAUpK,EAAcuJ,6BAGhC,GAAa,UAAT2D,EAAkB,CAC3B,GAAI/W,KAAKunB,UAAUwjC,SAEjB,YADA/qD,KAAKuY,MAAMtE,EAAUpK,EAAcK,wBAE9B,GAAIlK,KAAKrN,MAAM8gE,cAEpB,YADAzzD,KAAKuY,MAAMtE,EAAUpK,EAAcM,qCAGnCnK,KAAKynB,gBAAgBisC,gCAAgCz/C,EAAUpK,EAAcK,6BAE1E,GAAa,cAAT6M,GACL/W,KAAKrN,MAAMghE,gCAEb,YADA3zD,KAAKuY,MAAMtE,EAAUpK,EAAcG,kBAKvC,GAAIi7C,GAAiB7tC,GAAUL,GAC7B/W,KAAKuY,MAAMtE,EAAUpK,EAAcgI,kBAAmBkF,QAIlC/W,KAAKmI,MAAMyR,OAA0ByqB,EAAYltB,GAA2BF,GAAxDH,IAEzBC,EAAM/W,KAAKgX,WAC1BhX,KAAKuY,MAAMtE,EAAUpK,EAAcsI,uBAAwB4E,M,4BAI/D,WACE,QAAI/W,KAAKunB,UAAUwjC,aAEf/qD,KAAKQ,QAAQqoD,2BAA8B7oD,KAAKrN,MAAMihE,c,wBAO5D,SAAWxvB,EAAUnwB,GACnB,IAAMrhB,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GAmBxC,OAlBAjU,KAAKynB,gBAAgBosC,gCAAgCjhE,EAAKuU,MAAO0C,EAAcO,gCAE3EpK,KAAKylB,IAAI9kB,EAAQoD,OACnB/D,KAAKuY,MAAM3lB,EAAKuU,MAAO0C,EAAcoF,mBAGlCjP,KAAKrN,MAAMihE,YAAe5zD,KAAKQ,QAAQqoD,4BACtC7oD,KAAKosD,mBACPpsD,KAAKqJ,6BAA8B,EAEnCrJ,KAAKoJ,mBAAoB,GAIxBpJ,KAAKmI,MAAMwS,YACd/nB,EAAKyG,SAAW2G,KAAKs+C,gBAAgB,MAAM,IAGtCt+C,KAAK+jC,WAAWnxC,EAAM,qB,8BAG/B,WACE,OAAOoN,KAAK2lB,yBAA2B3lB,KAAKwU,MAAM7T,EAAQkD,UAAY7D,KAAKwU,MAAM7T,EAAQkB,SAAW7B,KAAKwU,MAAM7T,EAAQQ,WAAanB,KAAKwU,MAAM7T,EAAQ6B,YAAcxC,KAAKwU,MAAM7T,EAAQI,SAAWf,KAAKwU,MAAM7T,EAAQqD,QAAUhE,KAAKwJ,UAAU,gBAAkBxJ,KAAKwU,MAAM7T,EAAQmD,U,wBAGtR,WACE,IAAMlR,EAAOoN,KAAK8jC,YAClB9jC,KAAKynB,gBAAgBosC,gCAAgCjhE,EAAKuU,MAAO0C,EAAcwJ,kBAC/ErT,KAAKsZ,OACL,IAAIw6C,GAAa,EACbz6D,EAAW,KAEf,IAAK2G,KAAK2lB,wBAGR,OAFAmuC,EAAa9zD,KAAKylB,IAAI9kB,EAAQoD,MAEtB/D,KAAKmI,MAAMe,MACjB,KAAKvI,EAAQqB,KACb,KAAKrB,EAAQO,IACb,KAAKP,EAAQgB,OACb,KAAKhB,EAAQmB,OACb,KAAKnB,EAAQW,SACb,KAAKX,EAAQiB,UACb,KAAKjB,EAAQsB,MACb,KAAKtB,EAAQoB,MACX,IAAK+xD,EAAY,MAEnB,QACEz6D,EAAW2G,KAAKwwC,mBAMtB,OAFA59C,EAAKmhE,SAAWD,EAChBlhE,EAAKyG,SAAWA,EACT2G,KAAK+jC,WAAWnxC,EAAM,qB,0CAG/B,SAA6BsgD,EAAM0R,GAC4B,UAAzD5kD,KAAKue,gBAAgB,mBAAoB,aACzB,uBAAd20B,EAAKhqC,MACPlJ,KAAKuY,MAAMqsC,EAAc/6C,EAAckG,kC,0CAK7C,SAA6Bq0B,GAC3B,GAAIpkC,KAAKwU,MAAM7T,EAAQ2B,OACrB,MAAMtC,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAc2F,kBAAmB7O,EAAQ2B,MAAMxC,OACxEE,KAAKg0D,yCACfh0D,KAAKuY,MAAM6rB,EAAUv6B,EAAc+F,mB,2CAIvC,SAA8B07C,EAAWlnB,EAAUnwB,GACjD,IAAMy1B,EAAW1pC,KAAK4oB,YAAYwb,EAAUnwB,GAE5C,OAAIjU,KAAKi0D,kBAAkB3I,IACzB5hB,EAAS1xC,OAASszD,EACXtrD,KAAK+jC,WAAW2F,EAAU,0BAEjC1pC,KAAKk0D,mCAAmC9vB,GACxCsF,EAASl4C,WAAa85D,EACftrD,KAAK+jC,WAAW2F,EAAU,8B,+BAIrC,SAAkBl4C,GAChB,OAAQA,EAAW0X,MACjB,IAAK,mBACH,OAAQ1X,EAAWwK,UAAYgE,KAAKi0D,kBAAkBziE,EAAWgG,QAEnE,IAAK,aACH,OAAO,EAET,QACE,OAAO,K,gDAIb,SAAmC4sC,GACjC,GAAIpkC,KAAKwU,MAAM7T,EAAQ2B,OACrB,MAAMtC,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAcgG,qBACvC7P,KAAKg0D,yCACfh0D,KAAKuY,MAAM6rB,EAAUv6B,EAAcmG,uB,qCAIvC,SAAwBmkD,GACtB,IAAMC,EAAyBp0D,KAAKmI,MAAMqS,aAC1Cxa,KAAKmI,MAAMqS,aAAe,CACxBC,yBAA0B,EAC1BC,cAAe,MAGjB,IACE,OAAOy5C,IADT,QAGEn0D,KAAKmI,MAAMqS,aAAe45C,K,gDAI9B,SAAmCD,GAGjC,GAAiB,UAFAn0D,KAAKue,gBAAgB,mBAAoB,YAexD,OAAO41C,IAZP,IAAMC,EAAyBp0D,KAAKmI,MAAMqS,aAC1Cxa,KAAKmI,MAAMqS,aAAe,CACxBC,yBAA0B,EAC1BC,cAAe,MAGjB,IACE,OAAOy5C,IADT,QAGEn0D,KAAKmI,MAAMqS,aAAe45C,K,4CAOhC,SAA+BD,GAC7B,IAAME,EAA6Br0D,KAAKmI,MAAMwS,UAC9C3a,KAAKmI,MAAMwS,WAAY,EAEvB,IACE,OAAOw5C,IADT,QAGEn0D,KAAKmI,MAAMwS,UAAY05C,K,wBAI3B,SAAWF,GACT,IAAMj8C,EAAQlY,KAAKunB,UAAU5C,eAG7B,GAvvSa,GAqvSsBzM,EAEf,CAClBlY,KAAKunB,UAAUI,MAxvSJ,EAwvSUzP,GAErB,IACE,OAAOi8C,IADT,QAGEn0D,KAAKunB,UAAUsiB,QAInB,OAAOsqB,M,2BAGT,SAAcA,GACZ,IAAMj8C,EAAQlY,KAAKunB,UAAU5C,eAG7B,GAxwSa,EAswSuBzM,EAEd,CACpBlY,KAAKunB,UAAUI,OAAc,EAARzP,GAErB,IACE,OAAOi8C,IADT,QAGEn0D,KAAKunB,UAAUsiB,QAInB,OAAOsqB,M,oCAGT,WACEn0D,KAAKmI,MAAMqS,aAAaE,cAAgB,I,qDAG1C,WACE,OAAO1a,KAAKmI,MAAMqS,aAAaC,0BAA4B,I,mDAG7D,WACE,OAAgD,MAAzCza,KAAKmI,MAAMqS,aAAaE,eAAyB1a,KAAKmI,MAAMqS,aAAaE,eAAiB,I,qCAGnG,SAAwBgwC,GACtB,IAAMtmB,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SAC5BjU,KAAKmI,MAAM2R,iBAAmB9Z,KAAKmI,MAAMhB,MACzC,IAAMwmD,EAAgC3tD,KAAKmI,MAAMyS,2BACjD5a,KAAKmI,MAAMyS,4BAA6B,EACxC,IAAM05C,EAAMt0D,KAAKglD,YAAYhlD,KAAKs+C,kBAAmBla,EAAUnwB,EAAUy2C,GAEzE,OADA1qD,KAAKmI,MAAMyS,2BAA6B+yC,EACjC2G,I,mCAGT,WACEt0D,KAAKse,aAAa,gBAClB,IAAM1rB,EAAOoN,KAAK8jC,YAClB9jC,KAAKsZ,OACLtZ,KAAKylB,IAAI9kB,EAAQa,QACjB,IAAM+yD,EAAev0D,KAAKw0D,kBAAiB,GAC3Cx0D,KAAKypD,qBACL,IAAMl4D,EAAUyO,KAAK8jC,YAErB,IACElxC,EAAKc,KAAOsM,KAAKy0D,aAAaljE,EAASoP,EAAQgB,OAAQ,UADzD,QAGE4yD,IAIF,OADAv0D,KAAKylB,IAAI9kB,EAAQgB,QACV3B,KAAK+jC,WAAWnxC,EAAM,wB,6HA7yE/B,SAAaA,GAAqB,IAC5Bo+C,EAAa0jB,EADAnwB,EAAe,wDAG5BxB,OAAgB7wC,EAgBpB,QAdkB,4BAAdU,EAAKsW,MAAoE,OAA7B8nC,EAAcp+C,EAAKoyB,QAAkBgsB,EAAYjO,iBAC/FA,EAAgBomB,GAA8Bv2D,GAE1C2xC,EACyB,eAAvBxB,EAAc75B,KAChBlJ,KAAKynB,gBAAgBktC,mCAAmC/hE,EAAKuU,MAAO0C,EAAc4D,gCAClD,qBAAvBs1B,EAAc75B,MACvBlJ,KAAKuY,MAAM3lB,EAAKuU,MAAO0C,EAAc4D,gCAGvCzN,KAAKuY,MAAM3lB,EAAKuU,MAAO0C,EAAc4D,iCAIjC7a,EAAKsW,MACX,IAAK,aACL,IAAK,gBACL,IAAK,eACL,IAAK,oBACL,IAAK,cACH,MAEF,IAAK,mBACHtW,EAAKsW,KAAO,gBAEZ,IAAK,IAAI5O,EAAI,EAAGvB,EAASnG,EAAKqH,WAAWlB,OAAQ67D,EAAO77D,EAAS,EAAGuB,EAAIvB,EAAQuB,IAAK,CACnF,IAAIu6D,EAEE16B,EAAOvnC,EAAKqH,WAAWK,GACvBw6D,EAASx6D,IAAMs6D,EACrB50D,KAAK+0D,iCAAiC56B,EAAM26B,EAAQvwB,GAEhDuwB,GAAwB,gBAAd36B,EAAKjxB,MAAyD,OAA9B2rD,EAAejiE,EAAKoyB,QAAkB6vC,EAAa3jB,eAC/FlxC,KAAKg1D,iBAAiBpiE,EAAKoyB,MAAMksB,eAIrC,MAEF,IAAK,iBACHlxC,KAAKwkC,aAAa5xC,EAAKvB,MAAOkzC,GAC9B,MAEF,IAAK,gBAEDvkC,KAAKi1D,sBAAsBriE,GAC3BA,EAAKsW,KAAO,cACZ,IAAMhL,EAAMtL,EAAKyG,SACjB2G,KAAKwkC,aAAatmC,EAAKqmC,GACvB,MAGJ,IAAK,kBACH3xC,EAAKsW,KAAO,eACZlJ,KAAKixC,iBAAiBr+C,EAAKiV,SAAyC,OAA9B6sD,EAAe9hE,EAAKoyB,YAAiB,EAAS0vC,EAAaxjB,cAAe3M,GAChH,MAEF,IAAK,uBACmB,MAAlB3xC,EAAKosD,UACPh/C,KAAKuY,MAAM3lB,EAAKsgD,KAAK9rC,IAAKyC,EAAcsE,uBAG1Cvb,EAAKsW,KAAO,2BACLtW,EAAKosD,SACZh/C,KAAKwkC,aAAa5xC,EAAKsgD,KAAM3O,GAC7B,MAEF,IAAK,0BACHvkC,KAAKwkC,aAAazB,EAAewB,GAIrC,OAAO3xC,I,8CAGT,SAAiCunC,EAAM26B,EAAQvwB,GAC7C,GAAkB,iBAAdpK,EAAKjxB,KAAyB,CAChC,IAAMkM,EAAsB,QAAd+kB,EAAK/jC,MAAgC,QAAd+jC,EAAK/jC,KAAiByT,EAAcyF,mBAAqBzF,EAAc0F,iBAC5GvP,KAAKuY,MAAM4hB,EAAKngC,IAAImN,MAAOiO,OACJ,kBAAd+kB,EAAKjxB,MAA6B4rD,EAG3C90D,KAAKwkC,aAAarK,EAAMoK,GAFxBvkC,KAAKg1D,iBAAiB76B,EAAKhzB,S,8BAM/B,SAAiBkrC,EAAUC,EAAkB/N,GAC3C,IAAIn9B,EAAMirC,EAASt5C,OAEnB,GAAIqO,EAAK,CACP,IAAMwtD,EAAOviB,EAASjrC,EAAM,GAE5B,GAA4C,iBAA/B,MAARwtD,OAAe,EAASA,EAAK1rD,QAC9B9B,OACG,GAA4C,mBAA/B,MAARwtD,OAAe,EAASA,EAAK1rD,MAA2B,CAClE0rD,EAAK1rD,KAAO,cACZ,IAAIhL,EAAM02D,EAAKv7D,SACf2G,KAAKwkC,aAAatmC,EAAKqmC,GAGN,gBAFjBrmC,EAAMirD,GAA8BjrD,IAE5BgL,MAAsC,qBAAbhL,EAAIgL,MAA4C,iBAAbhL,EAAIgL,MAAwC,kBAAbhL,EAAIgL,MACrGlJ,KAAKmlB,WAAWjnB,EAAIiJ,OAGlBmrC,GACFtyC,KAAKk1D,4BAA4B5iB,KAGjClrC,GAIN,IAAK,IAAI9M,EAAI,EAAGA,EAAI8M,EAAK9M,IAAK,CAC5B,IAAMwpD,EAAMzR,EAAS/3C,GAEjBwpD,IACF9jD,KAAKwkC,aAAasf,EAAKvf,GAEN,gBAAbuf,EAAI56C,MACNlJ,KAAKg1D,iBAAiBlR,EAAI38C,QAKhC,OAAOkrC,I,0BAGT,SAAaz/C,EAAMyxC,GAAW,WAC5B,OAAQzxC,EAAKsW,MACX,IAAK,aACL,IAAK,gBACL,IAAK,eACL,IAAK,oBACL,IAAK,cACH,OAAO,EAET,IAAK,mBAED,IAAM0rD,EAAOhiE,EAAKqH,WAAWlB,OAAS,EACtC,OAAOnG,EAAKqH,WAAW82C,OAAM,SAAC5W,EAAM7/B,GAClC,MAAqB,iBAAd6/B,EAAKjxB,OAA4B5O,IAAMs6D,GAAsB,kBAAdz6B,EAAKjxB,OAA6B,EAAKo7B,aAAanK,MAIhH,IAAK,iBACH,OAAOn6B,KAAKskC,aAAa1xC,EAAKvB,OAEhC,IAAK,gBACH,OAAO2O,KAAKskC,aAAa1xC,EAAKyG,UAEhC,IAAK,kBACH,OAAOzG,EAAKiV,SAASkpC,OAAM,SAAAgJ,GAAO,OAAgB,OAAZA,GAAoB,EAAKzV,aAAayV,MAE9E,IAAK,uBACH,MAAyB,MAAlBnnD,EAAKosD,SAEd,IAAK,0BACH,OAAOh/C,KAAKskC,aAAa1xC,EAAKpB,YAEhC,IAAK,mBACL,IAAK,2BACH,OAAQ6yC,EAEV,QACE,OAAO,K,8BAIb,SAAiBgO,EAAUE,GACzB,OAAOF,I,kCAGT,SAAqBA,EAAUE,GAC7BvyC,KAAK4yC,iBAAiBP,EAAUE,GADkB,UAG/BF,GAH+B,IAGlD,2BAA6B,KAAlB31C,EAAkB,QACiB,qBAA/B,MAARA,OAAe,EAASA,EAAKwM,OAChClJ,KAAKotD,qBAAqB1wD,EAAKmL,WALe,iC,yBAUpD,SAAY4e,EAAqB0uC,GAC/B,IAAMviE,EAAOoN,KAAK8jC,YAGlB,OAFA9jC,KAAKsZ,OACL1mB,EAAKyG,SAAW2G,KAAKimC,wBAAwBxf,OAAqBv0B,EAAWijE,GACtEn1D,KAAK+jC,WAAWnxC,EAAM,mB,8BAG/B,WACE,IAAMA,EAAOoN,KAAK8jC,YAGlB,OAFA9jC,KAAKsZ,OACL1mB,EAAKyG,SAAW2G,KAAKo1D,mBACdp1D,KAAK+jC,WAAWnxC,EAAM,iB,8BAG/B,WACE,OAAQoN,KAAKmI,MAAMe,MACjB,KAAKvI,EAAQQ,SAET,IAAMvO,EAAOoN,KAAK8jC,YAGlB,OAFA9jC,KAAKsZ,OACL1mB,EAAKiV,SAAW7H,KAAK47C,iBAAiBj7C,EAAQW,SAAU,IAAI,GACrDtB,KAAK+jC,WAAWnxC,EAAM,gBAGjC,KAAK+N,EAAQa,OACX,OAAOxB,KAAK4uD,gBAAgBjuD,EAAQgB,QAAQ,GAGhD,OAAO3B,KAAKioC,oB,8BAGd,SAAiBwK,EAAO4iB,EAAe9B,EAAYtf,GAIjD,IAHA,IAAMyZ,EAAO,GACTvf,GAAQ,GAEJnuC,KAAKylB,IAAIgtB,IAOf,GANItE,EACFA,GAAQ,EAERnuC,KAAK+lC,OAAOplC,EAAQoB,OAGlBwxD,GAAcvzD,KAAKwU,MAAM7T,EAAQoB,OACnC2rD,EAAK14D,KAAK,UACL,IAAIgL,KAAKylB,IAAIgtB,GAClB,MACK,GAAIzyC,KAAKwU,MAAM7T,EAAQ4B,UAAW,CACvCmrD,EAAK14D,KAAKgL,KAAK6jD,6BAA6B7jD,KAAKuwD,qBACjDvwD,KAAKwwD,oBAAoB6E,GACzBr1D,KAAK+lC,OAAO0M,GACZ,MAEA,IAAMx8C,EAAa,GAMnB,IAJI+J,KAAKwU,MAAM7T,EAAQ+B,KAAO1C,KAAKwJ,UAAU,eAC3CxJ,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAc+I,+BAGtC5S,KAAKwU,MAAM7T,EAAQ+B,KACxBzM,EAAWjB,KAAKgL,KAAK+xD,kBAGvBrE,EAAK14D,KAAKgL,KAAKs1D,wBAAwBrhB,EAAgBh+C,IAI3D,OAAOy3D,I,qCAGT,SAAwBzZ,EAAgBh+C,GACtC,IAAMi9C,EAAOlzC,KAAK4jD,oBAClB5jD,KAAK6jD,6BAA6B3Q,GAClC,IAAM4Q,EAAM9jD,KAAK4jD,kBAAkB1Q,EAAK/rC,MAAO+rC,EAAKhrC,IAAIf,MAAO+rC,GAM/D,OAJIj9C,EAAW8C,SACbm6C,EAAKj9C,WAAaA,GAGb6tD,I,0CAGT,SAA6B1lD,GAC3B,OAAOA,I,+BAGT,SAAkBgmC,EAAUnwB,EAAUi/B,GACpC,IAAIqiB,EAAWC,EAAWC,EAK1B,GAHAxhD,EAAqC,OAAzBshD,EAAYthD,GAAoBshD,EAAYv1D,KAAKmI,MAAM8L,SACnEmwB,EAAqC,OAAzBoxB,EAAYpxB,GAAoBoxB,EAAYx1D,KAAKmI,MAAMhB,MACnE+rC,EAAyB,OAAjBuiB,EAAQviB,GAAgBuiB,EAAQz1D,KAAKo1D,oBACxCp1D,KAAKylB,IAAI9kB,EAAQkC,IAAK,OAAOqwC,EAClC,IAAMtgD,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GAGxC,OAFArhB,EAAKsgD,KAAOA,EACZtgD,EAAK64C,MAAQzrC,KAAKimC,0BACXjmC,KAAK+jC,WAAWnxC,EAAM,uB,uBAG/B,SAAU8J,EAAM02C,GAA0G,IAAtFp6B,EAAsF,uDAAxEhB,GAAWs7C,EAA6D,uCAA/CoC,EAA+C,uCAA3BrC,EAA2B,wDACxH,OAAQ32D,EAAKwM,MACX,IAAK,aAED,IACEhO,EACEwB,EADFxB,KAGE8E,KAAKmI,MAAMyR,SAAWy5C,EAAoBl8C,GAAyBjc,EAAM8E,KAAKgX,UAAYE,GAA6Bhc,KACzH8E,KAAKuY,MAAM7b,EAAKyK,MAAO6R,IAAgBhB,GAAYnO,EAAcgH,oBAAsBhH,EAAciH,2BAA4B5V,GAG/Ho4D,IACEA,EAAaj2D,IAAInC,GACnB8E,KAAKuY,MAAM7b,EAAKyK,MAAO0C,EAAcwF,WAErCikD,EAAar7D,IAAIiD,IAIjBw6D,GAA+B,QAATx6D,GACxB8E,KAAKuY,MAAM7b,EAAKyK,MAAO0C,EAAckE,qBAGjCiL,EAAchB,IAClBhY,KAAKrN,MAAMk2C,YAAY3tC,EAAM8d,EAAatc,EAAKyK,OAGjD,MAGJ,IAAK,mBACC6R,IAAgBhB,IAClBhY,KAAKuY,MAAM7b,EAAKyK,MAAO0C,EAAc8D,+BAGvC,MAEF,IAAK,gBAAL,UACmBjR,EAAKzC,YADxB,IACE,2BAAkC,KAAzBkgC,EAAyB,QAChC,GAAIn6B,KAAK4iC,iBAAiBzI,GAAOA,EAAOA,EAAK9oC,WAAW,GAAI2O,KAAKupD,eAAepvB,GAAO,SACvFn6B,KAAKszC,UAAUnZ,EAAM,+BAAgCnhB,EAAas6C,EAAcoC,IAHpF,8BAME,MAEF,IAAK,eAAL,UACqBh5D,EAAKmL,UAD1B,IACE,2BAAkC,KAAvBwpD,EAAuB,QAC5BA,GACFrxD,KAAKszC,UAAU+d,EAAM,8BAA+Br4C,EAAas6C,EAAcoC,IAHrF,8BAOE,MAEF,IAAK,oBACH11D,KAAKszC,UAAU52C,EAAKw2C,KAAM,qBAAsBl6B,EAAas6C,GAC7D,MAEF,IAAK,cACHtzD,KAAKszC,UAAU52C,EAAKrD,SAAU,eAAgB2f,EAAas6C,GAC3D,MAEF,IAAK,0BACHtzD,KAAKszC,UAAU52C,EAAKlL,WAAY,2BAA4BwnB,EAAas6C,GACzE,MAEF,QAEItzD,KAAKuY,MAAM7b,EAAKyK,MAAO6R,IAAgBhB,GAAYnO,EAAcuD,WAAavD,EAAcwD,kBAAmB+lC,M,mCAKvH,SAAsBxgD,GACO,eAAvBA,EAAKyG,SAAS6P,MAAgD,qBAAvBtW,EAAKyG,SAAS6P,MACvDlJ,KAAKuY,MAAM3lB,EAAKyG,SAAS8N,MAAO0C,EAAcgE,gC,iCAIlD,SAAoB4kC,GACdzyC,KAAKwU,MAAM7T,EAAQoB,SACjB/B,KAAK+vC,sBAAwB0C,EAC/BzyC,KAAKk1D,4BAA4Bl1D,KAAKmI,MAAMhB,OAE5CnH,KAAKg1D,iBAAiBh1D,KAAKmI,MAAMhB,U,8BAKvC,SAAiB6M,GACf,MAAMhU,KAAKuY,MAAMvE,EAAKnK,EAAc+B,oB,yCAGtC,SAA4BoI,GAC1BhU,KAAKuY,MAAMvE,EAAKnK,EAAc4G,uB,GA7XTkY,KAmzEnBgtC,GAAY,CAChBv/D,KAAM,QAEFw/D,GAAc,CAClBx/D,KAAM,UAMFy/D,GAAgB,+EAChBC,GAA4B,IAAH,8B,IA+tDzBC,G,8BACJ,WAAYv1D,EAASwI,GAAO,uBAC1BxI,EA7iIJ,SAAoBw1D,GAGlB,IAFA,IAAMx1D,EAAU,GAEhB,MAAkBtP,OAAO0iB,KAAK+0C,IAA9B,eAA+C,CAA1C,IAAM3uD,EAAG,KACZwG,EAAQxG,GAAOg8D,GAAqB,MAAbA,EAAKh8D,GAAeg8D,EAAKh8D,GAAO2uD,GAAe3uD,GAGxE,OAAOwG,EAsiIKy1D,CAAWz1D,IACrB,cAAMA,EAASwI,IACVxI,QAAUA,EACf,EAAKg0D,mBACL,EAAKlrD,QAqBT,SAAoBA,GAClB,IAD2B,EACrB4sD,EAAY,IAAI9hE,IADK,IAGNkV,GAHM,IAG3B,2BAA8B,KAAnBC,EAAmB,QAC5B,EAAwBkS,MAAMC,QAAQnS,GAAUA,EAAS,CAACA,EAAQ,IAAlE,SAAOrO,EAAP,KAAasF,EAAb,KACK01D,EAAU74D,IAAInC,IAAOg7D,EAAU54D,IAAIpC,EAAMsF,GAAW,KALhC,8BAQ3B,OAAO01D,EA7BUC,CAAW,EAAK31D,QAAQ8I,SACvC,EAAKjC,SAAW7G,EAAQooD,eANE,E,yCAS5B,WACE,OAAOtwC,K,mBAGT,WACEtY,KAAKypD,qBACL,IAAMp3D,EAAO2N,KAAK8jC,YACZvyC,EAAUyO,KAAK8jC,YAKrB,OAJA9jC,KAAK0c,YACLrqB,EAAK8iB,OAAS,KACdnV,KAAKo2D,cAAc/jE,EAAMd,GACzBc,EAAK8iB,OAASnV,KAAKmI,MAAMgN,OAClB9iB,M,8HA/sDT,SAAcA,EAAMd,GAIlB,OAHAc,EAAKd,QAAUyO,KAAKy0D,aAAaljE,GACjCc,EAAKmV,SAAWxH,KAAKmI,MAAMX,SACvBxH,KAAKQ,QAAQ8b,SAAQjqB,EAAKiqB,OAvClC,SAA4BA,GAExB,IAAK,IAAIhiB,EAAI,EAAGA,EAAIgiB,EAAOvjB,OAAQuB,IAAK,CACtC,IAAMmG,EAAQ6b,EAAOhiB,GAErB,GAAImG,EAAMyI,OAASvI,EAAQM,YAAa,CACtC,IACEiH,EAIEzH,EAJFyH,IACAf,EAGE1G,EAHF0G,MACA9V,EAEEoP,EAFFpP,MACA+V,EACE3G,EADF2G,IAEIivD,EAAalvD,EAAQ,EACrBmvD,EAAa,IAAIxvD,EAASoB,EAAIf,MAAMJ,KAAMmB,EAAIf,MAAMF,OAAS,GACnEqV,EAAOzT,OAAOvO,EAAG,EAAG,IAAI8hB,GAAM,CAC5BlT,KAAMvI,EAAQgC,KACdtR,MAAO,IACP8V,MAAOA,EACPC,IAAKivD,EACLpiD,SAAU/L,EAAIf,MACdiN,OAAQkiD,IACN,IAAIl6C,GAAM,CACZlT,KAAMvI,EAAQzF,KACd7J,MAAOA,EACP8V,MAAOkvD,EACPjvD,IAAKA,EACL6M,SAAUqiD,EACVliD,OAAQlM,EAAId,QAKpB,OAAOkV,EAOkCi6C,CAAmBv2D,KAAKsc,SACxDtc,KAAK+jC,WAAW1xC,EAAM,U,0BAG/B,SAAad,GAAkE,IAAzD6V,EAAyD,uDAAnDzG,EAAQO,IAAKka,EAAsC,uDAAzBpb,KAAKQ,QAAQ4a,WAKjE,GAJA7pB,EAAQ6pB,WAAaA,EACrB7pB,EAAQilE,YAAcx2D,KAAKy2D,4BAC3Bz2D,KAAK02D,eAAenlE,GAAS,GAAM,EAAM6V,GAErCpH,KAAKgX,WAAahX,KAAKQ,QAAQyoD,wBAA0BjpD,KAAKrN,MAAM8lB,iBAAiBrgB,KAAO,EAC9F,cAAqBqjB,MAAMgI,KAAKzjB,KAAKrN,MAAM8lB,kBAA3C,eAA8D,CAAzD,gBAAOvd,EAAP,KACG8Y,EAAMhU,KAAKrN,MAAM8lB,iBAAiBtjB,IAAI+F,GAC5C8E,KAAKuY,MAAMvE,EAAKnK,EAAc8E,sBAAuBzT,GAIzD,OAAO8E,KAAK+jC,WAAWxyC,EAAS,a,6BAGlC,SAAgBkxC,GACd,IAAM9jC,EAAY8jC,EAClB9jC,EAAUuK,KAAO,YACjBvK,EAAUtN,MAAQsN,EAAUnN,kBACrBmN,EAAUnN,WACjB,IAAMoN,EAAmBD,EAAUtN,MAC7BsxC,EAAM3iC,KAAKgJ,MAAMxO,MAAMoE,EAAiBuI,MAAOvI,EAAiBwI,KAChEoU,EAAM5c,EAAiBvN,MAAQsxC,EAAInoC,MAAM,GAAI,GAInD,OAHAwF,KAAKgjC,SAASpkC,EAAkB,MAAO+jC,GACvC3iC,KAAKgjC,SAASpkC,EAAkB,WAAY4c,GAC5C5c,EAAiBsK,KAAO,mBACjBvK,I,uCAGT,WACE,IAAKqB,KAAKwU,MAAM7T,EAAQiC,sBACtB,OAAO,KAGT,IAAMhQ,EAAOoN,KAAK8jC,YAGlB,OAFAlxC,EAAKvB,MAAQ2O,KAAKmI,MAAM9W,MACxB2O,KAAKsZ,OACEtZ,KAAK+jC,WAAWnxC,EAAM,0B,mBAG/B,SAAMkjB,GACJ,QAAK9V,KAAKwlB,aAAa,QAIhBxlB,KAAK22D,aAAa7gD,K,0BAG3B,SAAaA,GACX,IAAMwD,EAAOtZ,KAAKgd,iBACZsI,EAAStlB,KAAKwd,eAAelE,GAEnC,GAAe,KAAXgM,GAA4B,KAAXA,EACnB,OAAO,EAGT,GAAIxP,EAAS,OAAO,EACpB,GAAe,MAAXwP,EAAgB,OAAO,EAE3B,GAAIhP,EAAkBgP,GAAS,CAG7B,GAFAwwC,GAA0BphD,UAAY4E,EAElCw8C,GAA0Bv/C,KAAKvW,KAAKgJ,OAAQ,CAC9C,IAAM4tD,EAAQ52D,KAAKwd,eAAes4C,GAA0BphD,WAE5D,IAAK+B,EAAiBmgD,IAAoB,KAAVA,EAC9B,OAAO,EAIX,OAAO,EAGT,OAAO,I,4BAGT,SAAe9gD,EAAS45B,GAKtB,OAJI1vC,KAAKwU,MAAM7T,EAAQ+B,KACrB1C,KAAK8uD,iBAAgB,GAGhB9uD,KAAK62D,sBAAsB/gD,EAAS45B,K,mCAG7C,SAAsB55B,EAAS45B,GAC7B,IAEIt5C,EAFAmsD,EAAYviD,KAAKmI,MAAMe,KACrBtW,EAAOoN,KAAK8jC,YAQlB,OALI9jC,KAAKkqC,MAAMp0B,KACbysC,EAAY5hD,EAAQsE,KACpB7O,EAAO,OAGDmsD,GACN,KAAK5hD,EAAQuD,OACb,KAAKvD,EAAQ0D,UACX,OAAOrE,KAAK82D,4BAA4BlkE,EAAM2vD,EAAUtiD,SAE1D,KAAKU,EAAQ2D,UACX,OAAOtE,KAAK+2D,uBAAuBnkE,GAErC,KAAK+N,EAAQ4D,IACX,OAAOvE,KAAKg3D,iBAAiBpkE,GAE/B,KAAK+N,EAAQ+D,KACX,OAAO1E,KAAKi3D,kBAAkBrkE,GAEhC,KAAK+N,EAAQgE,UACX,GAAiC,KAA7B3E,KAAK+vC,oBAA4B,MAUrC,OARIj6B,IACE9V,KAAKmI,MAAMyR,OACb5Z,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAckH,gBACtB,OAAZ+E,GAAgC,UAAZA,GAC7B9V,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAc6G,iBAIxC1Q,KAAKyiD,uBAAuB7vD,GAAM,GAAQkjB,GAEnD,KAAKnV,EAAQ6E,OAEX,OADIsQ,GAAS9V,KAAKmlB,aACXnlB,KAAK0iD,WAAW9vD,GAAM,GAE/B,KAAK+N,EAAQiE,IACX,OAAO5E,KAAKk3D,iBAAiBtkE,GAE/B,KAAK+N,EAAQkE,QACX,OAAO7E,KAAKm3D,qBAAqBvkE,GAEnC,KAAK+N,EAAQmE,QACX,OAAO9E,KAAKo3D,qBAAqBxkE,GAEnC,KAAK+N,EAAQoE,OACX,OAAO/E,KAAKq3D,oBAAoBzkE,GAElC,KAAK+N,EAAQqE,KACX,OAAOhF,KAAKs3D,kBAAkB1kE,GAEhC,KAAK+N,EAAQuE,OACb,KAAKvE,EAAQsE,KAOX,OANA7O,EAAOA,GAAQ4J,KAAKmI,MAAM9W,MAEtBykB,GAAoB,QAAT1f,GACb4J,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAckI,8BAGtC/R,KAAK4iD,kBAAkBhwD,EAAMwD,GAEtC,KAAKuK,EAAQwE,OACX,OAAOnF,KAAKu3D,oBAAoB3kE,GAElC,KAAK+N,EAAQyE,MACX,OAAOpF,KAAKw3D,mBAAmB5kE,GAEjC,KAAK+N,EAAQa,OACX,OAAOxB,KAAK2vD,aAEd,KAAKhvD,EAAQqB,KACX,OAAOhC,KAAKy3D,oBAAoB7kE,GAElC,KAAK+N,EAAQgF,QAET,IAAM+xD,EAAoB13D,KAAK+vC,oBAE/B,GAA0B,KAAtB2nB,GAAkD,KAAtBA,EAC9B,MAIN,KAAK/2D,EAAQ+E,QAOT,IAAI2rC,EAiBJ,OAtBKrxC,KAAKQ,QAAQuoD,6BAAgCrZ,GAChD1vC,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAc+H,wBAG7C5R,KAAKsZ,OAGDipC,IAAc5hD,EAAQgF,QAGJ,uBAFpB0rC,EAASrxC,KAAK2pC,YAAY/2C,IAEfsW,MAAkCmoC,EAAOllB,YAAoC,UAAtBklB,EAAOllB,aACvEnsB,KAAKoJ,mBAAoB,IAKP,4BAFpBioC,EAASrxC,KAAKoqC,YAAYx3C,IAEfsW,MAAuCmoC,EAAOhH,YAAoC,UAAtBgH,EAAOhH,cAA2C,yBAAhBgH,EAAOnoC,MAAqCmoC,EAAOhH,YAAoC,UAAtBgH,EAAOhH,aAA2C,6BAAhBgH,EAAOnoC,OACjNlJ,KAAKoJ,mBAAoB,GAI7BpJ,KAAK23D,wBAAwB/kE,GACtBy+C,EAGX,QAEI,GAAIrxC,KAAK43D,kBAMP,OALI9hD,GACF9V,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAcI,uCAG7CjK,KAAKsZ,OACEtZ,KAAKyiD,uBAAuB7vD,GAAM,GAAOkjB,GAKxD,IAAM+hD,EAAY73D,KAAKmI,MAAM9W,MACvBqL,EAAOsD,KAAK8lC,kBAElB,OAAIyc,IAAc5hD,EAAQzF,MAAsB,eAAdwB,EAAKwM,MAAyBlJ,KAAKylB,IAAI9kB,EAAQsB,OACxEjC,KAAK83D,sBAAsBllE,EAAMilE,EAAWn7D,EAAMoZ,GAElD9V,KAAK+3D,yBAAyBnlE,EAAM8J,K,qCAI/C,SAAwB9J,GACjBoN,KAAKQ,QAAQuoD,6BAAgC/oD,KAAKgX,UACrDhX,KAAKuY,MAAM3lB,EAAKuU,MAAOoM,EAA8BE,uB,4BAIzD,SAAe7gB,GACb,IAAMqD,EAAa+J,KAAKmI,MAAM2S,eAAe9a,KAAKmI,MAAM2S,eAAe/hB,OAAS,GAE5E9C,EAAW8C,SACbnG,EAAKqD,WAAaA,EAClB+J,KAAK00C,2BAA2B9hD,EAAMqD,EAAW,IACjD+J,KAAKmI,MAAM2S,eAAe9a,KAAKmI,MAAM2S,eAAe/hB,OAAS,GAAK,M,qCAItE,WACE,OAAOiH,KAAKwU,MAAM7T,EAAQ6E,U,6BAG5B,SAAgBwyD,GAGd,IAFA,IAAMC,EAA2Bj4D,KAAKmI,MAAM2S,eAAe9a,KAAKmI,MAAM2S,eAAe/hB,OAAS,GAEvFiH,KAAKwU,MAAM7T,EAAQ+B,KAAK,CAC7B,IAAMw1D,EAAYl4D,KAAK+xD,iBACvBkG,EAAyBjjE,KAAKkjE,GAGhC,GAAIl4D,KAAKwU,MAAM7T,EAAQ+E,SAChBsyD,GACHh4D,KAAKmlB,aAGHnlB,KAAKwJ,UAAU,gBAAkBxJ,KAAKue,gBAAgB,aAAc,2BACtEve,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAcqB,2BAExC,IAAKlL,KAAKm4D,0BACf,MAAMn4D,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAciI,8B,4BAIrD,WACE9R,KAAKqvD,gBAAgB,CAAC,oBAAqB,eAC3C,IAAMz8D,EAAOoN,KAAK8jC,YAGlB,GAFA9jC,KAAKsZ,OAEDtZ,KAAKwJ,UAAU,cAAe,CAChCxJ,KAAKmI,MAAM2S,eAAe9lB,KAAK,IAC/B,IAEI0H,EAFE0nC,EAAWpkC,KAAKmI,MAAMhB,MACtB8M,EAAWjU,KAAKmI,MAAM8L,SAG5B,GAAIjU,KAAKylB,IAAI9kB,EAAQkB,QACnBnF,EAAOsD,KAAK8lC,kBACZ9lC,KAAK+lC,OAAOplC,EAAQmB,aAIpB,IAFApF,EAAOsD,KAAKioC,iBAAgB,GAErBjoC,KAAKylB,IAAI9kB,EAAQwB,MAAM,CAC5B,IAAMvP,EAAOoN,KAAK4oB,YAAYwb,EAAUnwB,GACxCrhB,EAAK4E,OAASkF,EACd9J,EAAKm0B,SAAW/mB,KAAKioC,iBAAgB,GACrCr1C,EAAKoJ,UAAW,EAChBU,EAAOsD,KAAK+jC,WAAWnxC,EAAM,oBAIjCA,EAAKpB,WAAawO,KAAKo4D,6BAA6B17D,GACpDsD,KAAKmI,MAAM2S,eAAe9hB,WAE1BpG,EAAKpB,WAAawO,KAAKssD,sBAGzB,OAAOtsD,KAAK+jC,WAAWnxC,EAAM,e,0CAG/B,SAA6B8J,GAC3B,GAAIsD,KAAKylB,IAAI9kB,EAAQkB,QAAS,CAC5B,IAAMjP,EAAOoN,KAAKmlC,gBAAgBzoC,GAIlC,OAHA9J,EAAKoF,OAAS0E,EACd9J,EAAKiI,UAAYmF,KAAK+0C,6BAA6Bp0C,EAAQmB,QAAQ,GACnE9B,KAAK4yC,iBAAiBhgD,EAAKiI,WACpBmF,KAAK+jC,WAAWnxC,EAAM,kBAG/B,OAAO8J,I,yCAGT,SAA4B9J,EAAMqN,GAChC,IAAMo4D,EAAsB,UAAZp4D,EAWhB,OAVAD,KAAKsZ,OAEDtZ,KAAK8lB,mBACPlzB,EAAKkN,MAAQ,MAEblN,EAAKkN,MAAQE,KAAKioC,kBAClBjoC,KAAK4oC,aAGP5oC,KAAKs4D,oBAAoB1lE,EAAMqN,GACxBD,KAAK+jC,WAAWnxC,EAAMylE,EAAU,iBAAmB,uB,iCAG5D,SAAoBzlE,EAAMqN,GACxB,IACI3F,EADE+9D,EAAsB,UAAZp4D,EAGhB,IAAK3F,EAAI,EAAGA,EAAI0F,KAAKmI,MAAM0S,OAAO9hB,SAAUuB,EAAG,CAC7C,IAAMi+D,EAAMv4D,KAAKmI,MAAM0S,OAAOvgB,GAE9B,GAAkB,MAAd1H,EAAKkN,OAAiBy4D,EAAIr9D,OAAStI,EAAKkN,MAAM5E,KAAM,CACtD,GAAgB,MAAZq9D,EAAIniE,OAAiBiiE,GAAwB,SAAbE,EAAIniE,MAAkB,MAC1D,GAAIxD,EAAKkN,OAASu4D,EAAS,OAI3B/9D,IAAM0F,KAAKmI,MAAM0S,OAAO9hB,QAC1BiH,KAAKuY,MAAM3lB,EAAKuU,MAAO0C,EAAcuC,qBAAsBnM,K,oCAI/D,SAAuBrN,GAGrB,OAFAoN,KAAKsZ,OACLtZ,KAAK4oC,YACE5oC,KAAK+jC,WAAWnxC,EAAM,uB,mCAG/B,WACEoN,KAAK+lC,OAAOplC,EAAQkB,QACpB,IAAM2Z,EAAMxb,KAAK8lC,kBAEjB,OADA9lC,KAAK+lC,OAAOplC,EAAQmB,QACb0Z,I,8BAGT,SAAiB5oB,GAAM,WAQrB,OAPAoN,KAAKsZ,OACLtZ,KAAKmI,MAAM0S,OAAO7lB,KAAK2gE,IACvB/iE,EAAKc,KAAOsM,KAAKw4D,oCAAmC,kBAAM,EAAK1Q,eAAe,SAC9E9nD,KAAKmI,MAAM0S,OAAO7hB,MAClBgH,KAAK+lC,OAAOplC,EAAQwE,QACpBvS,EAAK2jB,KAAOvW,KAAKy4D,wBACjBz4D,KAAKylB,IAAI9kB,EAAQqB,MACVhC,KAAK+jC,WAAWnxC,EAAM,sB,+BAG/B,SAAkBA,GAChBoN,KAAKsZ,OACLtZ,KAAKmI,MAAM0S,OAAO7lB,KAAK2gE,IACvB,IAAI+C,GAAW,EASf,GAPI14D,KAAK6rD,kBAAoB7rD,KAAK0lB,cAAc,WAC9CgzC,EAAU14D,KAAKmI,MAAM+L,cAGvBlU,KAAKrN,MAAMg1B,MAjjXK,GAkjXhB3nB,KAAK+lC,OAAOplC,EAAQkB,QAEhB7B,KAAKwU,MAAM7T,EAAQqB,MAKrB,OAJI02D,GAAW,GACb14D,KAAKmlB,WAAWuzC,GAGX14D,KAAK24D,SAAS/lE,EAAM,MAG7B,IAAMgmE,EAAgB54D,KAAKwlB,aAAa,OAClC0kB,EAAQ0uB,GAAiB54D,KAAK22D,eAEpC,GAAI32D,KAAKwU,MAAM7T,EAAQsE,OAASjF,KAAKwU,MAAM7T,EAAQuE,SAAWglC,EAAO,CACnE,IAAM3tB,EAAOvc,KAAK8jC,YACZ1tC,EAAO8zC,EAAQ,MAAQlqC,KAAKmI,MAAM9W,MAKxC,OAJA2O,KAAKsZ,OACLtZ,KAAK64D,SAASt8C,GAAM,EAAMnmB,GAC1B4J,KAAK+jC,WAAWxnB,EAAM,wBAEjBvc,KAAKwU,MAAM7T,EAAQoF,MAAQ/F,KAAKwlB,aAAa,QAAuC,IAA7BjJ,EAAKu8C,aAAa//D,OACrEiH,KAAK+4D,WAAWnmE,EAAM2pB,EAAMm8C,IAGjCA,GAAW,GACb14D,KAAKmlB,WAAWuzC,GAGX14D,KAAK24D,SAAS/lE,EAAM2pB,IAG7B,IAAMy8C,EAA0Bh5D,KAAKwU,MAAM7T,EAAQzF,QAAU8E,KAAKmI,MAAM6S,YAClEyL,EAAsB,IAAImB,GAC1BrL,EAAOvc,KAAK8lC,iBAAgB,EAAMrf,GAClCwyC,EAAUj5D,KAAKwlB,aAAa,MAUlC,GARIyzC,IACEL,EACF54D,KAAKuY,MAAMgE,EAAKpV,MAAO0C,EAAcqC,WACf,IAAbwsD,GAAkBM,GAAyC,eAAdz8C,EAAKrT,MAAuC,UAAdqT,EAAKrhB,MACzF8E,KAAKuY,MAAMgE,EAAKpV,MAAO0C,EAAcoC,aAIrCgtD,GAAWj5D,KAAKwU,MAAM7T,EAAQoF,KAAM,CACtC/F,KAAKwkC,aAAajoB,GAAM,GACxB,IAAM28C,EAAcD,EAAU,mBAAqB,mBAEnD,OADAj5D,KAAKszC,UAAU/2B,EAAM28C,GACdl5D,KAAK+4D,WAAWnmE,EAAM2pB,EAAMm8C,GASrC,OAPE14D,KAAKsqD,sBAAsB7jC,GAAqB,GAG9CiyC,GAAW,GACb14D,KAAKmlB,WAAWuzC,GAGX14D,KAAK24D,SAAS/lE,EAAM2pB,K,oCAG7B,SAAuB3pB,EAAMiyB,EAASs0C,GAEpC,OADAn5D,KAAKsZ,OACEtZ,KAAKkuD,cAAct7D,EAveP,GAue+BumE,EAAsB,EAte7C,GAse0Et0C,K,8BAGvG,SAAiBjyB,GAKf,OAJAoN,KAAKsZ,OACL1mB,EAAK2jB,KAAOvW,KAAKy4D,wBACjB7lE,EAAKu9C,WAAanwC,KAAK8nD,eAAe,MACtCl1D,EAAK29C,UAAYvwC,KAAKylB,IAAI9kB,EAAQ6D,OAASxE,KAAK8nD,eAAe,MAAQ,KAChE9nD,KAAK+jC,WAAWnxC,EAAM,iB,kCAG/B,SAAqBA,GAcnB,OAbKoN,KAAKunB,UAAU6xC,WAAcp5D,KAAKQ,QAAQsoD,4BAC7C9oD,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAcyC,eAG7CtM,KAAKsZ,OAEDtZ,KAAK8lB,mBACPlzB,EAAKyG,SAAW,MAEhBzG,EAAKyG,SAAW2G,KAAK8lC,kBACrB9lC,KAAK4oC,aAGA5oC,KAAK+jC,WAAWnxC,EAAM,qB,kCAG/B,SAAqBA,GACnBoN,KAAKsZ,OACL1mB,EAAKymE,aAAer5D,KAAKy4D,wBACzB,IAIIa,EAEKC,EANHC,EAAQ5mE,EAAK4mE,MAAQ,GAM3B,IALAx5D,KAAK+lC,OAAOplC,EAAQa,QACpBxB,KAAKmI,MAAM0S,OAAO7lB,KAAK4gE,IACvB51D,KAAKrN,MAAMg1B,MAlpXK,IAqpXM3nB,KAAKwU,MAAM7T,EAAQgB,SACvC,GAAI3B,KAAKwU,MAAM7T,EAAQwD,QAAUnE,KAAKwU,MAAM7T,EAAQ5O,UAAW,CAC7D,IAAM0nE,EAASz5D,KAAKwU,MAAM7T,EAAQwD,OAC9Bm1D,GAAKt5D,KAAK+jC,WAAWu1B,EAAK,cAC9BE,EAAMxkE,KAAKskE,EAAMt5D,KAAK8jC,aACtBw1B,EAAInpB,WAAa,GACjBnwC,KAAKsZ,OAEDmgD,EACFH,EAAI/iD,KAAOvW,KAAK8lC,mBAEZyzB,GACFv5D,KAAKuY,MAAMvY,KAAKmI,MAAM+L,aAAcrK,EAAc+E,0BAGpD2qD,GAAa,EACbD,EAAI/iD,KAAO,MAGbvW,KAAK+lC,OAAOplC,EAAQsB,YAEhBq3D,EACFA,EAAInpB,WAAWn7C,KAAKgL,KAAK8nD,eAAe,OAExC9nD,KAAKmlB,aASX,OAJAnlB,KAAKrN,MAAMk3C,OACPyvB,GAAKt5D,KAAK+jC,WAAWu1B,EAAK,cAC9Bt5D,KAAKsZ,OACLtZ,KAAKmI,MAAM0S,OAAO7hB,MACXgH,KAAK+jC,WAAWnxC,EAAM,qB,iCAG/B,SAAoBA,GASlB,OARAoN,KAAKsZ,OAEDtZ,KAAK2lB,yBACP3lB,KAAKuY,MAAMvY,KAAKmI,MAAMkM,WAAYxK,EAAcgF,mBAGlDjc,EAAKyG,SAAW2G,KAAK8lC,kBACrB9lC,KAAK4oC,YACE5oC,KAAK+jC,WAAWnxC,EAAM,oB,mCAG/B,WACE,IAAMwL,EAAQ4B,KAAKo1D,mBACbsE,EAAwB,eAAft7D,EAAM8K,KAGrB,OAFAlJ,KAAKrN,MAAMg1B,MAAM+xC,EApsXM,EAosXwB,GAC/C15D,KAAKszC,UAAUl1C,EAAO,eAlrXLqrC,GAmrXVrrC,I,+BAGT,SAAkBxL,GAAM,WAKtB,GAJAoN,KAAKsZ,OACL1mB,EAAK+mE,MAAQ35D,KAAK2vD,aAClB/8D,EAAKgnE,QAAU,KAEX55D,KAAKwU,MAAM7T,EAAQyD,QAAS,CAC9B,IAAMy1D,EAAS75D,KAAK8jC,YACpB9jC,KAAKsZ,OAEDtZ,KAAKwU,MAAM7T,EAAQkB,SACrB7B,KAAK+lC,OAAOplC,EAAQkB,QACpBg4D,EAAOz7D,MAAQ4B,KAAK85D,wBACpB95D,KAAK+lC,OAAOplC,EAAQmB,UAEpB+3D,EAAOz7D,MAAQ,KACf4B,KAAKrN,MAAMg1B,MA5tXC,IA+tXdkyC,EAAOnmE,KAAOsM,KAAKw4D,oCAAmC,kBAAM,EAAK7I,YAAW,GAAO,MACnF3vD,KAAKrN,MAAMk3C,OACXj3C,EAAKgnE,QAAU55D,KAAK+jC,WAAW81B,EAAQ,eASzC,OANAjnE,EAAKmnE,UAAY/5D,KAAKylB,IAAI9kB,EAAQ8D,UAAYzE,KAAK2vD,aAAe,KAE7D/8D,EAAKgnE,SAAYhnE,EAAKmnE,WACzB/5D,KAAKuY,MAAM3lB,EAAKuU,MAAO0C,EAAciF,kBAGhC9O,KAAK+jC,WAAWnxC,EAAM,kB,+BAG/B,SAAkBA,EAAMwD,GAItB,OAHA4J,KAAKsZ,OACLtZ,KAAK64D,SAASjmE,GAAM,EAAOwD,GAC3B4J,KAAK4oC,YACE5oC,KAAK+jC,WAAWnxC,EAAM,yB,iCAG/B,SAAoBA,GAAM,WAMxB,OALAoN,KAAKsZ,OACL1mB,EAAK2jB,KAAOvW,KAAKy4D,wBACjBz4D,KAAKmI,MAAM0S,OAAO7lB,KAAK2gE,IACvB/iE,EAAKc,KAAOsM,KAAKw4D,oCAAmC,kBAAM,EAAK1Q,eAAe,YAC9E9nD,KAAKmI,MAAM0S,OAAO7hB,MACXgH,KAAK+jC,WAAWnxC,EAAM,oB,gCAG/B,SAAmBA,GAAM,WAQvB,OAPIoN,KAAKmI,MAAMyR,QACb5Z,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAcqH,YAG7ClR,KAAKsZ,OACL1mB,EAAK4E,OAASwI,KAAKy4D,wBACnB7lE,EAAKc,KAAOsM,KAAKw4D,oCAAmC,kBAAM,EAAK1Q,eAAe,WACvE9nD,KAAK+jC,WAAWnxC,EAAM,mB,iCAG/B,SAAoBA,GAElB,OADAoN,KAAKsZ,OACEtZ,KAAK+jC,WAAWnxC,EAAM,oB,mCAG/B,SAAsBA,EAAMilE,EAAWn7D,EAAMoZ,GAAS,UAChC9V,KAAKmI,MAAM0S,QADqB,IACpD,2BAAuC,SAC3B3f,OAAS28D,GACjB73D,KAAKuY,MAAM7b,EAAKyK,MAAO0C,EAAciE,mBAAoB+pD,IAHT,8BASpD,IAFA,IAAMzhE,EAAO4J,KAAKmI,MAAMe,KAAK1Q,OAAS,OAASwH,KAAKwU,MAAM7T,EAAQmE,SAAW,SAAW,KAE/ExK,EAAI0F,KAAKmI,MAAM0S,OAAO9hB,OAAS,EAAGuB,GAAK,EAAGA,IAAK,CACtD,IAAMwF,EAAQE,KAAKmI,MAAM0S,OAAOvgB,GAEhC,GAAIwF,EAAMk6D,iBAAmBpnE,EAAKuU,MAIhC,MAHArH,EAAMk6D,eAAiBh6D,KAAKmI,MAAMhB,MAClCrH,EAAM1J,KAAOA,EAcjB,OARA4J,KAAKmI,MAAM0S,OAAO7lB,KAAK,CACrBkG,KAAM28D,EACNzhE,KAAMA,EACN4jE,eAAgBh6D,KAAKmI,MAAMhB,QAE7BvU,EAAKc,KAAOsM,KAAK8nD,eAAehyC,GAAwC,IAA9BA,EAAQ2H,QAAQ,SAAkB3H,EAAU,QAAUA,EAAU,SAC1G9V,KAAKmI,MAAM0S,OAAO7hB,MAClBpG,EAAKkN,MAAQpD,EACNsD,KAAK+jC,WAAWnxC,EAAM,sB,sCAG/B,SAAyBA,EAAM8J,GAG7B,OAFA9J,EAAKpB,WAAakL,EAClBsD,KAAK4oC,YACE5oC,KAAK+jC,WAAWnxC,EAAM,yB,wBAG/B,WAAmF,IAAxEqnE,EAAwE,wDAA/CC,IAA+C,yDAAjBC,EAAiB,uCAC3EvnE,EAAOoN,KAAK8jC,YAkBlB,OAhBIm2B,GACFj6D,KAAKmI,MAAM8S,aAAakC,QAG1Bnd,KAAK+lC,OAAOplC,EAAQa,QAEhB04D,GACFl6D,KAAKrN,MAAMg1B,MA5zXG,GA+zXhB3nB,KAAK02D,eAAe9jE,EAAMqnE,GAAiB,EAAOt5D,EAAQgB,OAAQw4D,GAE9DD,GACFl6D,KAAKrN,MAAMk3C,OAGN7pC,KAAK+jC,WAAWnxC,EAAM,oB,8BAG/B,SAAiB6vC,GACf,MAAqB,wBAAdA,EAAKv5B,MAA2D,kBAAzBu5B,EAAKjxC,WAAW0X,OAA6Bu5B,EAAKjxC,WAAWwzB,MAAM+d,gB,4BAGnH,SAAenwC,EAAMqnE,EAAiBvqB,EAAUtoC,EAAK+yD,GACnD,IAAMzmE,EAAOd,EAAKc,KAAO,GACnB8J,EAAa5K,EAAK4K,WAAa,GACrCwC,KAAKyhD,4BAA4B/tD,EAAMumE,EAAkBz8D,OAAatL,EAAWw9C,EAAUtoC,EAAK+yD,K,yCAGlG,SAA4BzmE,EAAM8J,EAAYkyC,EAAUtoC,EAAK+yD,GAK3D,IAJA,IAAMnS,EAAYhoD,KAAKmI,MAAMyR,OACzBq5C,GAAyB,EACzBmH,GAAqB,GAEjBp6D,KAAKwU,MAAMpN,IAAM,CACvB,IAAMq7B,EAAOziC,KAAK8nD,eAAe,KAAMpY,GAEvC,GAAIlyC,IAAe48D,EAAoB,CACrC,GAAIp6D,KAAK8vC,iBAAiBrN,GAAO,CAC/B,IAAM9jC,EAAYqB,KAAKq6D,gBAAgB53B,GACvCjlC,EAAWxI,KAAK2J,GAEXs0D,GAAoD,eAA1Bt0D,EAAUtN,MAAMA,QAC7C4hE,GAAyB,EACzBjzD,KAAKs6D,WAAU,IAGjB,SAGFF,GAAqB,EACrBp6D,KAAKmI,MAAM8S,aAAakC,QAG1BzpB,EAAKsB,KAAKytC,GAGR03B,GACFA,EAAgBz/D,KAAKsF,KAAMizD,GAGxBjL,GACHhoD,KAAKs6D,WAAU,GAGjBt6D,KAAKsZ,S,sBAGP,SAAS1mB,EAAM2pB,GAAM,WAUnB,OATA3pB,EAAK2pB,KAAOA,EACZvc,KAAK4oC,WAAU,GACfh2C,EAAK2jB,KAAOvW,KAAKwU,MAAM7T,EAAQqB,MAAQ,KAAOhC,KAAK8lC,kBACnD9lC,KAAK4oC,WAAU,GACfh2C,EAAKo5D,OAAShsD,KAAKwU,MAAM7T,EAAQmB,QAAU,KAAO9B,KAAK8lC,kBACvD9lC,KAAK+lC,OAAOplC,EAAQmB,QACpBlP,EAAKc,KAAOsM,KAAKw4D,oCAAmC,kBAAM,EAAK1Q,eAAe,UAC9E9nD,KAAKrN,MAAMk3C,OACX7pC,KAAKmI,MAAM0S,OAAO7hB,MACXgH,KAAK+jC,WAAWnxC,EAAM,kB,wBAG/B,SAAWA,EAAM2pB,EAAMm8C,GAAS,WACxB6B,EAAUv6D,KAAKwU,MAAM7T,EAAQoF,KAqBnC,OApBA/F,KAAKsZ,OAEDihD,EACE7B,GAAW,GAAG14D,KAAKmlB,WAAWuzC,GAElC9lE,EAAK4nE,MAAQ9B,GAAW,EAGR,wBAAdn8C,EAAKrT,MAA+D,MAA7BqT,EAAKu8C,aAAa,GAAGv8C,MAAkBg+C,IAAWv6D,KAAKmI,MAAMyR,QAAwB,QAAd2C,EAAKnmB,MAAmD,eAAjCmmB,EAAKu8C,aAAa,GAAGr8D,GAAGyM,KAExI,sBAAdqT,EAAKrT,MACdlJ,KAAKuY,MAAMgE,EAAKpV,MAAO0C,EAAcuD,WAAY,YAFjDpN,KAAKuY,MAAMgE,EAAKpV,MAAO0C,EAAcmC,uBAAwBuuD,EAAU,SAAW,UAKpF3nE,EAAKsgD,KAAO32B,EACZ3pB,EAAK64C,MAAQ8uB,EAAUv6D,KAAK8lC,kBAAoB9lC,KAAKimC,0BACrDjmC,KAAK+lC,OAAOplC,EAAQmB,QACpBlP,EAAKc,KAAOsM,KAAKw4D,oCAAmC,kBAAM,EAAK1Q,eAAe,UAC9E9nD,KAAKrN,MAAMk3C,OACX7pC,KAAKmI,MAAM0S,OAAO7hB,MACXgH,KAAK+jC,WAAWnxC,EAAM2nE,EAAU,iBAAmB,oB,sBAG5D,SAAS3nE,EAAM6nE,EAAOrkE,GACpB,IAAM0iE,EAAelmE,EAAKkmE,aAAe,GACnC4B,EAAe16D,KAAKwJ,UAAU,cAGpC,IAFA5W,EAAKwD,KAAOA,IAEH,CACP,IAAMm7C,EAAOvxC,KAAK8jC,YAkBlB,GAjBA9jC,KAAK26D,WAAWppB,EAAMn7C,GAElB4J,KAAKylB,IAAI9kB,EAAQkC,IACnB0uC,EAAKh1B,KAAOk+C,EAAQz6D,KAAK46D,6BAA+B56D,KAAKimC,2BAEhD,UAAT7vC,GAAsB4J,KAAKwU,MAAM7T,EAAQoF,MAAQ/F,KAAKwlB,aAAa,MAI3C,eAAjB+rB,EAAK90C,GAAGyM,MAA2BuxD,IAAUz6D,KAAKwU,MAAM7T,EAAQoF,MAAQ/F,KAAKwlB,aAAa,QACnGxlB,KAAKuY,MAAMvY,KAAKmI,MAAMkM,WAAYxK,EAAckB,8BAA+B,4BAJ1E2vD,GACH16D,KAAKuY,MAAMvY,KAAKmI,MAAMkM,WAAYxK,EAAckB,8BAA+B,sBAMnFwmC,EAAKh1B,KAAO,MAGdu8C,EAAa9jE,KAAKgL,KAAK+jC,WAAWwN,EAAM,wBACnCvxC,KAAKylB,IAAI9kB,EAAQoB,OAAQ,MAGhC,OAAOnP,I,wBAGT,SAAW2+C,EAAMn7C,GACfm7C,EAAK90C,GAAKuD,KAAKo1D,mBACfp1D,KAAKszC,UAAU/B,EAAK90C,GAAI,uBAAiC,QAATrG,EAv6XnCqzC,EADIA,OAw6XyEv3C,EAAoB,QAATkE,K,2BAGvG,SAAcxD,GAAkD,WAA5ClB,EAA4C,uDA1zB5C,EA0zB2BmzB,EAAiB,wDACxD+sB,EA1zBa,EA0zBClgD,EACdmpE,EA1zBqB,EA0zBAnpE,EACrBopE,IAAclpB,KA1zBC,EA0zBgBlgD,GACrCsO,KAAK2yD,aAAa//D,EAAMiyB,GAEpB7kB,KAAKwU,MAAM7T,EAAQoD,OAAS82D,GAC9B76D,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAcsC,mCAG7CvZ,EAAKwJ,UAAY4D,KAAKylB,IAAI9kB,EAAQoD,MAE9B6tC,IACFh/C,EAAK6J,GAAKuD,KAAK+6D,gBAAgBD,IAGjC,IAAMxX,EAA4BtjD,KAAKmI,MAAM8R,uBAqB7C,OApBAja,KAAKmI,MAAM8R,wBAAyB,EACpCja,KAAKrN,MAAMg1B,MAl9XQ,GAm9XnB3nB,KAAKunB,UAAUI,MAAM/C,GAAcC,EAASjyB,EAAKwJ,YAE5Cw1C,IACHh/C,EAAK6J,GAAKuD,KAAK+6D,mBAGjB/6D,KAAKw1C,oBAAoB5iD,GAAM,GAC/BoN,KAAKw4D,oCAAmC,WACtC,EAAK5F,2BAA2BhgE,EAAMg/C,EAAc,sBAAwB,yBAE9E5xC,KAAKunB,UAAUsiB,OACf7pC,KAAKrN,MAAMk3C,OAEP+H,IAAgBipB,GAClB76D,KAAKg7D,4BAA4BpoE,GAGnCoN,KAAKmI,MAAM8R,uBAAyBqpC,EAC7B1wD,I,6BAGT,SAAgBkoE,GACd,OAAOA,GAAa96D,KAAKwU,MAAM7T,EAAQzF,MAAQ8E,KAAKioC,kBAAoB,O,iCAG1E,SAAoBr1C,EAAMqhD,GACxBj0C,KAAK+lC,OAAOplC,EAAQkB,QACpB7B,KAAKynB,gBAAgBE,MA/rUhB,IAAI5D,GA3HiB,IA2zU1BnxB,EAAKyC,OAAS2K,KAAK47C,iBAAiBj7C,EAAQmB,OAAQ,IAAI,EAAOmyC,GAC/Dj0C,KAAKynB,gBAAgBoiB,S,yCAGvB,SAA4Bj3C,GACrBA,EAAK6J,IACVuD,KAAKrN,MAAMk2C,YAAYj2C,EAAK6J,GAAGvB,KAAM8E,KAAKmI,MAAMyR,QAAUhnB,EAAKwJ,WAAaxJ,EAAKyJ,MAAQ2D,KAAKrN,MAAMsoE,oBA/9XvFxxB,EADIA,EAECA,GA89XiJ72C,EAAK6J,GAAG0K,S,wBAG7K,SAAWvU,EAAMg/C,EAAaC,GAC5B7xC,KAAKsZ,OACLtZ,KAAK+nD,eAAen1D,GACpB,IAAMo1D,EAAYhoD,KAAKmI,MAAMyR,OAK7B,OAJA5Z,KAAKmI,MAAMyR,QAAS,EACpB5Z,KAAKioD,aAAar1D,EAAMg/C,EAAaC,GACrC7xC,KAAKkoD,gBAAgBt1D,GACrBA,EAAKc,KAAOsM,KAAKmoD,iBAAiBv1D,EAAKiL,WAAYmqD,GAC5ChoD,KAAK+jC,WAAWnxC,EAAMg/C,EAAc,mBAAqB,qB,6BAGlE,WACE,OAAO5xC,KAAKwU,MAAM7T,EAAQkC,KAAO7C,KAAKwU,MAAM7T,EAAQqB,OAAShC,KAAKwU,MAAM7T,EAAQgB,U,2BAGlF,WACE,OAAO3B,KAAKwU,MAAM7T,EAAQkB,U,oCAG5B,SAAuBtE,GACrB,OAAQA,EAAOvB,WAAauB,EAAOlJ,SAA+B,gBAApBkJ,EAAOvD,IAAIkB,MAA+C,gBAArBqC,EAAOvD,IAAI3I,S,4BAGhG,SAAey0D,EAAekC,GAAW,WACvChoD,KAAK2jB,WAAWgE,QAChB,IAAMxf,EAAQ,CACZ+yD,gBAAgB,EAChBpV,iBAEE7vD,EAAa,GACXmtC,EAAYpjC,KAAK8jC,YAoCvB,GAnCAV,EAAU1vC,KAAO,GACjBsM,KAAK+lC,OAAOplC,EAAQa,QACpBxB,KAAKw4D,oCAAmC,WACtC,MAAQ,EAAKhkD,MAAM7T,EAAQgB,SACzB,GAAI,EAAK8jB,IAAI9kB,EAAQqB,OACnB,GAAI/L,EAAW8C,OAAS,EACtB,MAAM,EAAKwf,MAAM,EAAKpQ,MAAMkM,WAAYxK,EAAcsB,yBAM1D,GAAI,EAAKqJ,MAAM7T,EAAQ+B,IACrBzM,EAAWjB,KAAK,EAAK+8D,sBADvB,CAKA,IAAMjgB,EAAS,EAAKhO,YAEhB7tC,EAAW8C,SACb+4C,EAAO77C,WAAaA,EACpB,EAAKy+C,2BAA2B5C,EAAQ77C,EAAW,IACnDA,EAAa,IAGf,EAAKklE,iBAAiB/3B,EAAW0O,EAAQ3pC,GAErB,gBAAhB2pC,EAAO17C,MAA0B07C,EAAO77C,YAAc67C,EAAO77C,WAAW8C,OAAS,GACnF,EAAKwf,MAAMu5B,EAAO3qC,MAAO0C,EAAcoB,0BAI7CjL,KAAKmI,MAAMyR,OAASouC,EACpBhoD,KAAKsZ,OAEDrjB,EAAW8C,OACb,MAAMiH,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAcwH,mBAInD,OADArR,KAAK2jB,WAAWkmB,OACT7pC,KAAK+jC,WAAWX,EAAW,e,0CAGpC,SAA6BA,EAAW0O,GACtC,IAAM93C,EAAMgG,KAAKioC,iBAAgB,GAEjC,GAAIjoC,KAAK9J,gBAAiB,CACxB,IAAMqH,EAASu0C,EAMf,OALAv0C,EAAOnH,KAAO,SACdmH,EAAOvB,UAAW,EAClBuB,EAAOvD,IAAMA,EACbuD,EAAOlJ,QAAS,EAChB2L,KAAKo7D,gBAAgBh4B,EAAW7lC,GAAQ,GAAO,GAAO,GAAO,IACtD,EACF,GAAIyC,KAAKjK,kBAAmB,CACjC,IAAMokC,EAAO2X,EAKb,OAJA3X,EAAKn+B,UAAW,EAChBm+B,EAAKngC,IAAMA,EACXmgC,EAAK9lC,QAAS,EACd+uC,EAAU1vC,KAAKsB,KAAKgL,KAAKq7D,mBAAmBlhC,KACrC,EAIT,OADAn6B,KAAK8tD,kCAAkC9zD,IAChC,I,8BAGT,SAAiBopC,EAAW0O,EAAQ3pC,GAClC,IAAMskC,EAAWzsC,KAAKwlB,aAAa,UAEnC,GAAIinB,EAAU,CACZ,GAAIzsC,KAAK+xC,6BAA6B3O,EAAW0O,GAC/C,OAGF,GAAI9xC,KAAKylB,IAAI9kB,EAAQa,QAEnB,YADAxB,KAAK4lD,sBAAsBxiB,EAAW0O,GAK1C9xC,KAAK6lD,6BAA6BziB,EAAW0O,EAAQ3pC,EAAOskC,K,0CAG9D,SAA6BrJ,EAAW0O,EAAQ3pC,EAAOskC,GACrD,IAAM6uB,EAAexpB,EACfypB,EAAgBzpB,EAChB0pB,EAAa1pB,EACb2pB,EAAc3pB,EACdv0C,EAAS+9D,EACTI,EAAeJ,EAGrB,GAFAxpB,EAAOz9C,OAASo4C,EAEZzsC,KAAKylB,IAAI9kB,EAAQoD,MAAO,CAC1BxG,EAAOnH,KAAO,SACd,IAAM0wB,EAAgB9mB,KAAKwU,MAAM7T,EAAQM,aAGzC,OAFAjB,KAAK27D,sBAAsBp+D,GAEvBupB,OACF9mB,KAAK47D,uBAAuBx4B,EAAWm4B,GAAe,GAAM,IAI1Dv7D,KAAK67D,uBAAuBP,IAC9Bt7D,KAAKuY,MAAM+iD,EAAathE,IAAImN,MAAO0C,EAAciB,6BAGnD9K,KAAKo7D,gBAAgBh4B,EAAWk4B,GAAc,GAAM,GAAO,GAAO,IAIpE,IAAM91C,EAAexlB,KAAKwU,MAAM7T,EAAQzF,QAAU8E,KAAKmI,MAAM6S,YACvD8gD,EAAY97D,KAAKwU,MAAM7T,EAAQM,aAC/BjH,EAAMgG,KAAK27D,sBAAsB7pB,GACjCiqB,EAA0B/7D,KAAKmI,MAAMhB,MAG3C,GAFAnH,KAAKg8D,6BAA6BN,GAE9B17D,KAAK9J,gBAAiB,CAGxB,GAFAqH,EAAOnH,KAAO,SAEV0lE,EAEF,YADA97D,KAAK47D,uBAAuBx4B,EAAWm4B,GAAe,GAAO,GAI/D,IAAMplE,EAAgB6J,KAAK67D,uBAAuBP,GAC9Cj4B,GAAoB,EAEpBltC,IACFmlE,EAAallE,KAAO,cAEhB+R,EAAM+yD,iBAAmBl7D,KAAKwJ,UAAU,eAC1CxJ,KAAKuY,MAAMve,EAAImN,MAAO0C,EAAc0B,sBAGlCpV,GAAiB6J,KAAKwJ,UAAU,eAAiBsoC,EAAO6R,UAC1D3jD,KAAKuY,MAAMve,EAAImN,MAAO0C,EAAcuF,uBAGtCjH,EAAM+yD,gBAAiB,EACvB73B,EAAoBl7B,EAAM29C,eAG5B9lD,KAAKo7D,gBAAgBh4B,EAAWk4B,GAAc,GAAO,EAAOnlE,EAAektC,QACtE,GAAIrjC,KAAKjK,kBACV+lE,EACF97D,KAAKi8D,yBAAyB74B,EAAWq4B,GAEzCz7D,KAAKk8D,kBAAkB94B,EAAWo4B,QAE/B,GAAIh2C,GAA6B,UAAbxrB,EAAIkB,OAAqB8E,KAAK8lB,mBAAoB,CAC3E9lB,KAAK8tD,kCAAkC9zD,GACvC,IAAM8qB,EAAc9kB,KAAKylB,IAAI9kB,EAAQoD,MAEjC23D,EAAaj3B,UACfzkC,KAAKmlB,WAAW42C,GAGlBx+D,EAAOnH,KAAO,SACd,IAAM0lE,EAAY97D,KAAKwU,MAAM7T,EAAQM,aACrCjB,KAAK27D,sBAAsBp+D,GAC3ByC,KAAKg8D,6BAA6BN,GAE9BI,EACF97D,KAAK47D,uBAAuBx4B,EAAWm4B,EAAez2C,GAAa,IAE/D9kB,KAAK67D,uBAAuBP,IAC9Bt7D,KAAKuY,MAAM+iD,EAAathE,IAAImN,MAAO0C,EAAcgB,oBAGnD7K,KAAKo7D,gBAAgBh4B,EAAWk4B,EAAcx2C,GAAa,GAAM,GAAO,SAErE,IAAIU,GAA8B,QAAbxrB,EAAIkB,MAA+B,QAAblB,EAAIkB,MAAqB8E,KAAKwU,MAAM7T,EAAQoD,OAAS/D,KAAK8lB,mBAiBjG9lB,KAAK8lB,mBACVg2C,EACF97D,KAAKi8D,yBAAyB74B,EAAWq4B,GAEzCz7D,KAAKk8D,kBAAkB94B,EAAWo4B,GAGpCx7D,KAAKmlB,iBAxB0H,CAC/HnlB,KAAK8tD,kCAAkC9zD,GACvCuD,EAAOnH,KAAO4D,EAAIkB,KAClB,IAAM4gE,EAAY97D,KAAKwU,MAAM7T,EAAQM,aACrCjB,KAAK27D,sBAAsBL,GAEvBQ,EACF97D,KAAK47D,uBAAuBx4B,EAAWm4B,GAAe,GAAO,IAEzDv7D,KAAK67D,uBAAuBP,IAC9Bt7D,KAAKuY,MAAM+iD,EAAathE,IAAImN,MAAO0C,EAAce,uBAGnD5K,KAAKo7D,gBAAgBh4B,EAAWk4B,GAAc,GAAO,GAAO,GAAO,IAGrEt7D,KAAKsyD,wBAAwBgJ,M,mCAYjC,SAAsBxpB,GACpB,MAII9xC,KAAKmI,MAHPe,EADF,EACEA,KACA7X,EAFF,EAEEA,MACA8V,EAHF,EAGEA,MAWF,OARK+B,IAASvI,EAAQzF,MAAQgO,IAASvI,EAAQK,SAAW8wC,EAAOz9C,QAAoB,cAAVhD,GACzE2O,KAAKuY,MAAMpR,EAAO0C,EAAc8G,iBAG9BzH,IAASvI,EAAQM,aAAyB,gBAAV5P,GAClC2O,KAAKuY,MAAMpR,EAAO0C,EAAcc,8BAG3B3K,KAAK28C,kBAAkB7K,GAAQ,K,mCAGxC,SAAsB1O,EAAW0O,GAC/B,IAAIqqB,EAEJn8D,KAAKse,aAAa,mBAAoBwzB,EAAO3qC,OAC7CnH,KAAKrN,MAAMg1B,MAAMrQ,KACjB,IAAM0P,EAAYhnB,KAAKmI,MAAM0S,OAC7B7a,KAAKmI,MAAM0S,OAAS,GACpB7a,KAAKunB,UAAUI,MA77UL,GA87UV,IAAMj0B,EAAOo+C,EAAOp+C,KAAO,GAC3BsM,KAAKyhD,4BAA4B/tD,OAAMxB,GAAW,EAAOyO,EAAQgB,QACjE3B,KAAKunB,UAAUsiB,OACf7pC,KAAKrN,MAAMk3C,OACX7pC,KAAKmI,MAAM0S,OAASmM,EACpBoc,EAAU1vC,KAAKsB,KAAKgL,KAAK+jC,WAAW+N,EAAQ,gBAEI,OAA3CqqB,EAAqBrqB,EAAO77C,aAAuBkmE,EAAmBpjE,QACzEiH,KAAKuY,MAAMu5B,EAAO3qC,MAAO0C,EAAcuB,wB,+BAI3C,SAAkBg4B,EAAWjJ,GACtBA,EAAKn+B,UAA+B,gBAAlBm+B,EAAKngC,IAAIkB,MAA6C,gBAAnBi/B,EAAKngC,IAAI3I,OACjE2O,KAAKuY,MAAM4hB,EAAKngC,IAAImN,MAAO0C,EAAca,uBAG3C04B,EAAU1vC,KAAKsB,KAAKgL,KAAKq7D,mBAAmBlhC,M,sCAG9C,SAAyBiJ,EAAWjJ,GAClC,IAAMvnC,EAAOoN,KAAKo8D,0BAA0BjiC,GAC5CiJ,EAAU1vC,KAAKsB,KAAKpC,GACpBoN,KAAK2jB,WAAW04C,mBAAmBr8D,KAAKs8D,iBAAiB1pE,EAAKoH,KAvuYtC,EAuuYiEpH,EAAKoH,IAAImN,S,6BAGpG,SAAgBi8B,EAAW7lC,EAAQunB,EAAaD,EAAS1uB,EAAektC,GACtED,EAAU1vC,KAAKsB,KAAKgL,KAAKsjC,YAAY/lC,EAAQunB,EAAaD,EAAS1uB,EAAektC,EAAmB,eAAe,M,oCAGtH,SAAuBD,EAAW7lC,EAAQunB,EAAaD,GACrD,IAAMjyB,EAAOoN,KAAKsjC,YAAY/lC,EAAQunB,EAAaD,GAAS,GAAO,EAAO,sBAAsB,GAChGue,EAAU1vC,KAAKsB,KAAKpC,GACpB,IAAMwD,EAAqB,QAAdxD,EAAKwD,KAAiBxD,EAAKyB,OArvYRwvB,EAHF,EAwvY+F,QAAdjxB,EAAKwD,KAAiBxD,EAAKyB,OApvY1GkoE,EAHF,EAMN,EAkvYxBv8D,KAAK2jB,WAAW04C,mBAAmBr8D,KAAKs8D,iBAAiB1pE,EAAKoH,KAAM5D,EAAMxD,EAAKoH,IAAImN,S,0CAGrF,SAA6B4+C,M,uCAE7B,SAA0BnzD,GAGxB,OAFAoN,KAAKw8D,iBAAiB5pE,GACtBoN,KAAK4oC,YACE5oC,KAAK+jC,WAAWnxC,EAAM,0B,gCAG/B,SAAmBA,GAGjB,OAFAoN,KAAKw8D,iBAAiB5pE,GACtBoN,KAAK4oC,YACE5oC,KAAK+jC,WAAWnxC,EAAM,mB,8BAG/B,SAAiBA,GACfoN,KAAKrN,MAAMg1B,MAAMrQ,IACjBtX,KAAKynB,gBAAgBE,MAAMnD,MAC3BxkB,KAAKunB,UAAUI,MAp/UL,GAq/UV/0B,EAAKvB,MAAQ2O,KAAKylB,IAAI9kB,EAAQkC,IAAM7C,KAAKimC,0BAA4B,KACrEjmC,KAAKynB,gBAAgBoiB,OACrB7pC,KAAKunB,UAAUsiB,OACf7pC,KAAKrN,MAAMk3C,S,0BAGb,SAAaj3C,EAAMg/C,EAAaC,GAAsC,IAA1B74B,EAA0B,uDAlyYrDywB,IAmyYXzpC,KAAKwU,MAAM7T,EAAQzF,OACrBtI,EAAK6J,GAAKuD,KAAKioC,kBAEX2J,GACF5xC,KAAKszC,UAAU1gD,EAAK6J,GAAI,aAAcuc,IAGpC64B,IAAeD,EACjBh/C,EAAK6J,GAAK,KAEVuD,KAAKmlB,WAAW,KAAMtb,EAAcqE,oB,6BAK1C,SAAgBtb,GACdA,EAAKiL,WAAamC,KAAKylB,IAAI9kB,EAAQ8E,UAAYzF,KAAKssD,sBAAwB,O,yBAG9E,SAAY15D,GACV,IAAM6pE,EAAaz8D,KAAK08D,iCAAiC9pE,GACnD+pE,GAAqBF,GAAcz8D,KAAKylB,IAAI9kB,EAAQoB,OACpD66D,EAAUD,GAAqB38D,KAAK68D,cAAcjqE,GAClD++C,EAAeirB,GAAW58D,KAAK88D,mCAAmClqE,GAClEmqE,EAAsBJ,KAAuBhrB,GAAgB3xC,KAAKylB,IAAI9kB,EAAQoB,QAC9Ei7D,EAAiBP,GAAcG,EAErC,GAAIA,IAAYjrB,EAGd,OAFI8qB,GAAYz8D,KAAKmlB,aACrBnlB,KAAK0xC,gBAAgB9+C,GAAM,GACpBoN,KAAK+jC,WAAWnxC,EAAM,wBAG/B,IAMIqqE,EANEC,EAAgBl9D,KAAKm9D,gCAAgCvqE,GAE3D,GAAI6pE,GAAcE,IAAsBC,IAAYM,GAAiBvrB,GAAgBorB,IAAwBG,EAC3G,MAAMl9D,KAAKmlB,WAAW,KAAMxkB,EAAQa,QAYtC,GAPIw7D,GAAkBE,GACpBD,GAAiB,EACjBj9D,KAAK0xC,gBAAgB9+C,EAAMoqE,IAE3BC,EAAiBj9D,KAAKo9D,4BAA4BxqE,GAGhDoqE,GAAkBE,GAAiBD,EAErC,OADAj9D,KAAKq9D,YAAYzqE,GAAM,GAAM,IAASA,EAAK2T,QACpCvG,KAAK+jC,WAAWnxC,EAAM,0BAG/B,GAAIoN,KAAKylB,IAAI9kB,EAAQ5O,UAGnB,OAFAa,EAAKo3C,YAAchqC,KAAKs9D,+BACxBt9D,KAAKq9D,YAAYzqE,GAAM,GAAM,GACtBoN,KAAK+jC,WAAWnxC,EAAM,4BAG/B,MAAMoN,KAAKmlB,WAAW,KAAMxkB,EAAQa,U,2BAGtC,SAAc5O,GACZ,OAAOoN,KAAKylB,IAAI9kB,EAAQoD,Q,8CAG1B,SAAiCnR,GAC/B,GAAIoN,KAAKu9D,2BAA4B,CACnCv9D,KAAKse,aAAa,qBAClB,IAAM60B,EAAYnzC,KAAK8jC,YAGvB,OAFAqP,EAAUvO,SAAW5kC,KAAKioC,iBAAgB,GAC1Cr1C,EAAKuW,WAAa,CAACnJ,KAAK+jC,WAAWoP,EAAW,4BACvC,EAGT,OAAO,I,gDAGT,SAAmCvgD,GACjC,GAAIoN,KAAKwlB,aAAa,MAAO,CACtB5yB,EAAKuW,aAAYvW,EAAKuW,WAAa,IACxC,IAAMgqC,EAAYnzC,KAAK4oB,YAAY5oB,KAAKmI,MAAM+L,aAAclU,KAAKmI,MAAMgM,iBAIvE,OAHAnU,KAAKsZ,OACL65B,EAAUvO,SAAW5kC,KAAKyzC,wBAC1B7gD,EAAKuW,WAAWnU,KAAKgL,KAAK+jC,WAAWoP,EAAW,8BACzC,EAGT,OAAO,I,6CAGT,SAAgCvgD,GACE,MAAhC,QAAIoN,KAAKwU,MAAM7T,EAAQa,UAChB5O,EAAKuW,aAAYvW,EAAKuW,WAAa,KACxC,EAAAvW,EAAKuW,YAAWnU,KAAhB,UAAwBgL,KAAKyxC,0BAC7B7+C,EAAK2T,OAAS,KACd3T,EAAKo3C,YAAc,MACZ,K,yCAMX,SAA4Bp3C,GAC1B,QAAIoN,KAAKkmD,iCACPtzD,EAAKuW,WAAa,GAClBvW,EAAK2T,OAAS,KACd3T,EAAKo3C,YAAchqC,KAAKw9D,uBAAuB5qE,IACxC,K,6BAMX,WACE,IAAKoN,KAAKwlB,aAAa,SAAU,OAAO,EACxC,IAAMlM,EAAOtZ,KAAKgd,iBAClB,OAAQ5W,EAAUmQ,KAAKvW,KAAKgJ,MAAMxO,MAAMwF,KAAKmI,MAAM6L,IAAKsF,KAAUtZ,KAAKulB,qBAAqBjM,EAAM,c,0CAGpG,WACE,IAAM5c,EAAOsD,KAAK8jC,YACZjf,EAAU7kB,KAAK43D,kBAErB,GAAI53D,KAAKwU,MAAM7T,EAAQgE,YAAckgB,EAOnC,OANA7kB,KAAKsZ,OAEDuL,GACF7kB,KAAKsZ,OAGAtZ,KAAKkuD,cAAcxxD,EAAM+gE,EAAmC54C,GAC9D,GAAI7kB,KAAKwU,MAAM7T,EAAQ6E,QAC5B,OAAOxF,KAAK0iD,WAAWhmD,GAAM,GAAM,GAC9B,GAAIsD,KAAKwU,MAAM7T,EAAQ+B,IAM5B,OALI1C,KAAKwJ,UAAU,eAAiBxJ,KAAKue,gBAAgB,aAAc,2BACrEve,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAcmB,uBAG7ChL,KAAK8uD,iBAAgB,GACd9uD,KAAK0iD,WAAWhmD,GAAM,GAAM,GAC9B,GAAIsD,KAAKwU,MAAM7T,EAAQuE,SAAWlF,KAAKwU,MAAM7T,EAAQsE,OAASjF,KAAKkqC,QACxE,MAAMlqC,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAc4I,0BAEjD,IAAM4vC,EAAMriD,KAAKimC,0BAEjB,OADAjmC,KAAK4oC,YACEyZ,I,oCAIX,SAAuBzvD,GACrB,OAAOoN,KAAK8nD,eAAe,Q,sCAG7B,WACE,GAAI9nD,KAAKwU,MAAM7T,EAAQzF,MAAO,CAC5B,IAAM7J,EAAQ2O,KAAKmI,MAAM9W,MAEzB,GAAc,UAAVA,IAAsB2O,KAAKmI,MAAM6S,aAAyB,QAAV3pB,EAClD,OAAO,EAGT,IAAe,SAAVA,GAA8B,cAAVA,KAA2B2O,KAAKmI,MAAM6S,YAAa,CAC1E,IAAM0iD,EAAI19D,KAAK0sC,YAEf,GAAIgxB,EAAEx0D,OAASvI,EAAQzF,MAAoB,SAAZwiE,EAAErsE,OAAoBqsE,EAAEx0D,OAASvI,EAAQa,OAEtE,OADAxB,KAAKqvD,gBAAgB,CAAC,OAAQ,gBACvB,QAGN,IAAKrvD,KAAKwU,MAAM7T,EAAQ5O,UAC7B,OAAO,EAGT,IAAMunB,EAAOtZ,KAAKgd,iBACZ2gD,EAAU39D,KAAKulB,qBAAqBjM,EAAM,QAEhD,GAAoC,KAAhCtZ,KAAKgJ,MAAMC,WAAWqQ,IAAgBtZ,KAAKwU,MAAM7T,EAAQzF,OAASyiE,EACpE,OAAO,EAGT,GAAI39D,KAAKwU,MAAM7T,EAAQ5O,WAAa4rE,EAAS,CAC3C,IAAMC,EAAgB59D,KAAKgJ,MAAMC,WAAWjJ,KAAK+c,oBAAoBzD,EAAO,IAC5E,OAAyB,KAAlBskD,GAA0C,KAAlBA,EAGjC,OAAO,I,6BAGT,SAAgBhrE,EAAMmzC,GACpB,GAAI/lC,KAAK0lB,cAAc,QAAS,CAC9B9yB,EAAK2T,OAASvG,KAAKyoD,oBACnBzoD,KAAKq9D,YAAYzqE,GACjB,IAAMirE,EAAa79D,KAAK89D,6BAEpBD,IACFjrE,EAAKirE,WAAaA,QAGhB93B,EACF/lC,KAAKmlB,aAELvyB,EAAK2T,OAAS,KAIlBvG,KAAK4oC,c,0CAGP,WACE,GAAI5oC,KAAKwU,MAAM7T,EAAQ+B,MACrB1C,KAAKqvD,gBAAgB,CAAC,aAAc,sBAEhCrvD,KAAKwJ,UAAU,eAAe,CAChC,IAAIxJ,KAAKue,gBAAgB,aAAc,0BAGrC,OAAO,EAFPve,KAAKmlB,WAAWnlB,KAAKmI,MAAMhB,MAAO0C,EAAcmB,uBAOtD,MAAmC,QAA5BhL,KAAKmI,MAAMe,KAAKjJ,SAAiD,UAA5BD,KAAKmI,MAAMe,KAAKjJ,SAAmD,aAA5BD,KAAKmI,MAAMe,KAAKjJ,SAAsD,UAA5BD,KAAKmI,MAAMe,KAAKjJ,SAAuBD,KAAKkqC,SAAWlqC,KAAK43D,oB,yBAG3L,SAAYhlE,EAAMmrE,EAAYC,EAAWC,GACvC,GAAIF,EACF,GAAIC,GAGF,GAFAh+D,KAAKk+D,sBAAsBtrE,EAAM,WAE7BoN,KAAKwJ,UAAU,qBAAsB,CACvC,IAAI20D,EAEEn0B,EAAcp3C,EAAKo3C,YAEA,eAArBA,EAAY9gC,MAA8C,SAArB8gC,EAAY9uC,MAAmB8uC,EAAY5iC,IAAM4iC,EAAY7iC,QAAU,GAAmD,OAA3Cg3D,EAAqBn0B,EAAYhlB,QAAkBm5C,EAAmBp7B,eAC5L/iC,KAAKuY,MAAMyxB,EAAY7iC,MAAO0C,EAAckC,qCAG3C,GAAInZ,EAAKuW,YAAcvW,EAAKuW,WAAWpQ,OAAQ,WAC5BnG,EAAKuW,YADuB,IACpD,2BAAyC,KAA9BgqC,EAA8B,QAErCvO,EACEuO,EADFvO,SAEIw5B,EAAiC,eAAlBx5B,EAAS17B,KAAwB07B,EAAS1pC,KAAO0pC,EAASvzC,MAG/E,GAFA2O,KAAKk+D,sBAAsB/qB,EAAWirB,IAEjCH,GAAU9qB,EAAUE,MAAO,CAC9B,IACEA,EACEF,EADFE,MAGiB,eAAfA,EAAMnqC,KACRlJ,KAAKuY,MAAM46B,EAAUhsC,MAAO0C,EAAciC,sBAAuBunC,EAAMhiD,MAAO+sE,IAE9Ep+D,KAAKg0C,kBAAkBX,EAAMn4C,KAAMm4C,EAAMlsC,OAAO,GAAM,GACtDnH,KAAKrN,MAAM0rE,iBAAiBhrB,MAjBkB,oCAqB/C,GAAIzgD,EAAKo3C,YACd,GAA8B,wBAA1Bp3C,EAAKo3C,YAAY9gC,MAA4D,qBAA1BtW,EAAKo3C,YAAY9gC,KAA6B,CACnG,IAAMzM,EAAK7J,EAAKo3C,YAAYvtC,GAC5B,IAAKA,EAAI,MAAM,IAAI2gC,MAAM,qBACzBp9B,KAAKk+D,sBAAsBtrE,EAAM6J,EAAGvB,WAC/B,GAA8B,wBAA1BtI,EAAKo3C,YAAY9gC,KAAgC,WAChCtW,EAAKo3C,YAAY8uB,cADe,IAC1D,2BAAyD,KAA9C9uB,EAA8C,QACvDhqC,KAAK6iC,iBAAiBmH,EAAYvtC,KAFsB,+BAUhE,GAFiCuD,KAAKmI,MAAM2S,eAAe9a,KAAKmI,MAAM2S,eAAe/hB,OAAS,GAEjEA,OAC3B,MAAMiH,KAAKuY,MAAM3lB,EAAKuU,MAAO0C,EAAc2I,8B,8BAI/C,SAAiB5f,GACf,GAAkB,eAAdA,EAAKsW,KACPlJ,KAAKk+D,sBAAsBtrE,EAAMA,EAAKsI,WACjC,GAAkB,kBAAdtI,EAAKsW,KAA0B,WACrBtW,EAAKqH,YADgB,IACxC,2BAAoC,KAAzBkgC,EAAyB,QAClCn6B,KAAK6iC,iBAAiB1I,IAFgB,oCAInC,GAAkB,iBAAdvnC,EAAKsW,KAAyB,WACpBtW,EAAKiV,UADe,IACvC,2BAAkC,KAAvBwpD,EAAuB,QAC5BA,GACFrxD,KAAK6iC,iBAAiBwuB,IAHa,mCAMhB,mBAAdz+D,EAAKsW,KACdlJ,KAAK6iC,iBAAiBjwC,EAAKvB,OACJ,gBAAduB,EAAKsW,KACdlJ,KAAK6iC,iBAAiBjwC,EAAKyG,UACJ,sBAAdzG,EAAKsW,MACdlJ,KAAK6iC,iBAAiBjwC,EAAKsgD,Q,mCAI/B,SAAsBtgD,EAAMsI,GACtB8E,KAAKknB,oBAAoB7pB,IAAInC,IAC/B8E,KAAKuY,MAAM3lB,EAAKuU,MAAgB,YAATjM,EAAqB2O,EAAc2B,uBAAyB3B,EAAc4B,gBAAiBvQ,GAGpH8E,KAAKknB,oBAAoBjvB,IAAIiD,K,mCAG/B,WACE,IAAMojE,EAAQ,GACVnwB,GAAQ,EAGZ,IAFAnuC,KAAK+lC,OAAOplC,EAAQa,SAEZxB,KAAKylB,IAAI9kB,EAAQgB,SAAS,CAChC,GAAIwsC,EACFA,GAAQ,OAGR,GADAnuC,KAAK+lC,OAAOplC,EAAQoB,OAChB/B,KAAKylB,IAAI9kB,EAAQgB,QAAS,MAGhC,IAAM/O,EAAOoN,KAAK8jC,YACZy6B,EAAWv+D,KAAKwU,MAAM7T,EAAQK,QAC9BqyC,EAAQrzC,KAAKyzC,wBACnB7gD,EAAKygD,MAAQA,EAETrzC,KAAK0lB,cAAc,MACrB9yB,EAAKgyC,SAAW5kC,KAAKyzC,wBAErB7gD,EAAKgyC,SADI25B,EACOh2C,GAAmB8qB,GAEnBlrB,GAAgBkrB,GAGlCirB,EAAMtpE,KAAKgL,KAAK+jC,WAAWnxC,EAAM,oBAGnC,OAAO0rE,I,mCAGT,WACE,GAAIt+D,KAAKwU,MAAM7T,EAAQK,QAAS,CAC9B,IAAMqwC,EAASrxC,KAAKy2C,mBAAmBz2C,KAAKmI,MAAM9W,OAC5CmtE,EAAYntB,EAAOhgD,MAAMmjB,MAAMqhD,IAMrC,OAJI2I,GACFx+D,KAAKuY,MAAM84B,EAAOlqC,MAAO0C,EAAc6E,iCAAkC8vD,EAAU,GAAGv1D,WAAW,GAAGw1D,SAAS,KAGxGptB,EAGT,OAAOrxC,KAAKioC,iBAAgB,K,yBAG9B,SAAYr1C,GAGV,GAFAA,EAAKuW,WAAa,IAEbnJ,KAAKwU,MAAM7T,EAAQK,QAAS,CAC/B,IACM09D,GADa1+D,KAAK2+D,iCAAiC/rE,IACxBoN,KAAKylB,IAAI9kB,EAAQoB,OAC5C66D,EAAU8B,GAAa1+D,KAAKuoD,8BAA8B31D,GAC5D8rE,IAAc9B,GAAS58D,KAAKwoD,2BAA2B51D,GAC3DoN,KAAK6nC,iBAAiB,QAGxBj1C,EAAK2T,OAASvG,KAAKyoD,oBACnB,IAAMoV,EAAa79D,KAAK89D,6BAExB,GAAID,EACFjrE,EAAKirE,WAAaA,MACb,CACL,IAAMl5B,EAAa3kC,KAAK4+D,6BAEpBj6B,IACF/xC,EAAK+xC,WAAaA,GAKtB,OADA3kC,KAAK4oC,YACE5oC,KAAK+jC,WAAWnxC,EAAM,uB,+BAG/B,WAEE,OADKoN,KAAKwU,MAAM7T,EAAQK,SAAShB,KAAKmlB,aAC/BnlB,KAAK6lC,kB,sCAGd,SAAyBjzC,GACvB,OAAOoN,KAAKwU,MAAM7T,EAAQzF,Q,uCAG5B,SAA0BtI,EAAMugD,EAAWjqC,EAAMkqC,GAC/CD,EAAUE,MAAQrzC,KAAKioC,kBACvBjoC,KAAKszC,UAAUH,EAAUE,MAAOD,EA9qZf3J,GA+qZjB72C,EAAKuW,WAAWnU,KAAKgL,KAAK+jC,WAAWoP,EAAWjqC,M,gCAGlD,WACE,IAAM21D,EAAQ,GACRC,EAAY,IAAIjnE,IAEtB,EAAG,CACD,GAAImI,KAAKwU,MAAM7T,EAAQgB,QACrB,MAGF,IAAM/O,EAAOoN,KAAK8jC,YACZouB,EAAUlyD,KAAKmI,MAAM9W,MAgB3B,GAdIytE,EAAUzhE,IAAI60D,IAChBlyD,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAc4E,kCAAmCyjD,GAGhF4M,EAAU7mE,IAAIi6D,GAEVlyD,KAAKwU,MAAM7T,EAAQK,QACrBpO,EAAKoH,IAAMgG,KAAKy2C,mBAAmByb,GAEnCt/D,EAAKoH,IAAMgG,KAAKioC,iBAAgB,GAGlCjoC,KAAK+lC,OAAOplC,EAAQsB,QAEfjC,KAAKwU,MAAM7T,EAAQK,QACtB,MAAMhB,KAAKmlB,WAAWnlB,KAAKmI,MAAMhB,MAAO0C,EAAc2E,6BAGxD5b,EAAKvB,MAAQ2O,KAAKy2C,mBAAmBz2C,KAAKmI,MAAM9W,OAChD2O,KAAK+jC,WAAWnxC,EAAM,mBACtBisE,EAAM7pE,KAAKpC,SACJoN,KAAKylB,IAAI9kB,EAAQoB,QAE1B,OAAO88D,I,wCAGT,WACE,IAAI7+D,KAAKwU,MAAM7T,EAAQyE,QAAWpF,KAAK2lB,wBAIrC,OAAI3lB,KAAKwJ,UAAU,oBAA4B,GACxC,KAJPxJ,KAAKse,aAAa,oBAClBte,KAAKsZ,OAMP,IAAMulD,EAAQ,GACRl6B,EAAa,IAAI9sC,IAEvB,EAAG,CACD,IAAMjF,EAAOoN,KAAK8jC,YAclB,GAbAlxC,EAAKoH,IAAMgG,KAAKioC,iBAAgB,GAEV,SAAlBr1C,EAAKoH,IAAIkB,MACX8E,KAAKuY,MAAM3lB,EAAKoH,IAAImN,MAAO0C,EAAc0E,iCAAkC3b,EAAKoH,IAAIkB,MAGlFypC,EAAWtnC,IAAIzK,EAAKoH,IAAIkB,OAC1B8E,KAAKuY,MAAM3lB,EAAKoH,IAAImN,MAAO0C,EAAc4E,kCAAmC7b,EAAKoH,IAAIkB,MAGvFypC,EAAW1sC,IAAIrF,EAAKoH,IAAIkB,MACxB8E,KAAK+lC,OAAOplC,EAAQsB,QAEfjC,KAAKwU,MAAM7T,EAAQK,QACtB,MAAMhB,KAAKmlB,WAAWnlB,KAAKmI,MAAMhB,MAAO0C,EAAc2E,6BAGxD5b,EAAKvB,MAAQ2O,KAAKy2C,mBAAmBz2C,KAAKmI,MAAM9W,OAChD2O,KAAK+jC,WAAWnxC,EAAM,mBACtBisE,EAAM7pE,KAAKpC,SACJoN,KAAKylB,IAAI9kB,EAAQoB,QAE1B,OAAO88D,I,wCAGT,WACE,IAAI7+D,KAAKwlB,aAAa,WAAcxlB,KAAK2lB,wBAIvC,OAAI3lB,KAAKwJ,UAAU,oBAA4B,GACxC,KAJPxJ,KAAKse,aAAa,oBAClBte,KAAKsZ,OAMPtZ,KAAKylB,IAAI9kB,EAAQa,QACjB,IAAMq9D,EAAQ7+D,KAAK++D,qBAEnB,OADA/+D,KAAKylB,IAAI9kB,EAAQgB,QACVk9D,I,8CAGT,SAAiCjsE,GAC/B,QAAIoN,KAAKg/D,yBAAyBpsE,KAChCoN,KAAKi/D,0BAA0BrsE,EAAMoN,KAAK8jC,YAAa,yBAA0B,6BAC1E,K,2CAMX,SAA8BlxC,GAC5B,GAAIoN,KAAKwU,MAAM7T,EAAQoD,MAAO,CAC5B,IAAMovC,EAAYnzC,KAAK8jC,YAIvB,OAHA9jC,KAAKsZ,OACLtZ,KAAK6nC,iBAAiB,MACtB7nC,KAAKi/D,0BAA0BrsE,EAAMugD,EAAW,2BAA4B,+BACrE,EAGT,OAAO,I,wCAGT,SAA2BvgD,GACzB,IAAIu7C,GAAQ,EAGZ,IAFAnuC,KAAK+lC,OAAOplC,EAAQa,SAEZxB,KAAKylB,IAAI9kB,EAAQgB,SAAS,CAChC,GAAIwsC,EACFA,GAAQ,MACH,CACL,GAAInuC,KAAKylB,IAAI9kB,EAAQsB,OACnB,MAAMjC,KAAKuY,MAAMvY,KAAKmI,MAAMhB,MAAO0C,EAAcyB,wBAInD,GADAtL,KAAK+lC,OAAOplC,EAAQoB,OAChB/B,KAAKylB,IAAI9kB,EAAQgB,QAAS,MAGhC3B,KAAKk/D,qBAAqBtsE,M,kCAI9B,SAAqBA,GACnB,IAAMugD,EAAYnzC,KAAK8jC,YACjBq7B,EAAmBn/D,KAAKwU,MAAM7T,EAAQK,QAG5C,GAFAmyC,EAAUU,SAAW7zC,KAAKyzC,wBAEtBzzC,KAAK0lB,cAAc,MACrBytB,EAAUE,MAAQrzC,KAAKioC,sBAClB,CACL,IACE4L,EACEV,EADFU,SAGF,GAAIsrB,EACF,MAAMn/D,KAAKuY,MAAM46B,EAAUhsC,MAAO0C,EAAc0C,sBAAuBsnC,EAASxiD,OAGlF2O,KAAKg0C,kBAAkBH,EAAS34C,KAAMi4C,EAAUhsC,OAAO,GAAM,GAC7DgsC,EAAUE,MAAQlrB,GAAgB0rB,GAGpC7zC,KAAKszC,UAAUH,EAAUE,MAAO,mBA30Zf5J,GA40ZjB72C,EAAKuW,WAAWnU,KAAKgL,KAAK+jC,WAAWoP,EAAW,sB,yBAGlD,SAAY/0C,GACV,MAAsB,eAAfA,EAAM8K,MAAwC,SAAf9K,EAAMlD,S,GArrDlBkuD,KA+wD9B,SAASgW,GAAU5+D,EAASwI,GAC1B,IAAIs8C,EAAMyQ,GAOV,OALe,MAAXv1D,GAAmBA,EAAQ8I,WA/uIjC,SAAyBA,GACvB,GAAIE,GAAUF,EAAS,cAAe,CACpC,GAAIE,GAAUF,EAAS,qBACrB,MAAM,IAAI8zB,MAAM,mEAGlB,IAAMiiC,EAAyB9gD,GAAgBjV,EAAS,aAAc,0BAEtE,GAA8B,MAA1B+1D,EACF,MAAM,IAAIjiC,MAAM,mQACX,GAAsC,mBAA3BiiC,EAChB,MAAM,IAAIjiC,MAAM,+CAIpB,GAAI5zB,GAAUF,EAAS,SAAWE,GAAUF,EAAS,cACnD,MAAM,IAAI8zB,MAAM,+CAGlB,GAAI5zB,GAAUF,EAAS,iBAAmBE,GAAUF,EAAS,eAC3D,MAAM,IAAI8zB,MAAM,wDAGlB,GAAI5zB,GAAUF,EAAS,oBAAqB,CAC1C,IAAMg2D,EAAW/gD,GAAgBjV,EAAS,mBAAoB,YAE9D,IAAKy4B,GAAmB9hB,SAASq/C,GAAW,CAC1C,IAAMC,EAAex9B,GAAmB5tC,KAAI,SAAAqrE,GAAC,iBAAQA,EAAR,QAAcr5C,KAAK,MAChE,MAAM,IAAIiX,MAAJ,oFAAuFmiC,EAAvF,MAGR,IAAME,EAAoBj2D,GAAUF,EAAS,mBAAkF,SAA7DiV,GAAgBjV,EAAS,iBAAkB,cAE7G,GAAiB,SAAbg2D,EAAqB,CACvB,GAAI91D,GAAUF,EAAS,gBACrB,MAAM,IAAI8zB,MAAM,4DAGlB,GAAI5zB,GAAUF,EAAS,eACrB,MAAM,IAAI8zB,MAAM,2DAGlB,IAAMsiC,EAAanhD,GAAgBjV,EAAS,mBAAoB,cAEhE,IAAK04B,GAAa/hB,SAASy/C,GAAa,CACtC,IAAMC,EAAY39B,GAAa7tC,KAAI,SAAA2rD,GAAC,iBAAQA,EAAR,QAAc35B,KAAK,MACvD,MAAM,IAAIiX,MAAJ,wHAA2HuiC,EAA3H,MAGR,GAAmB,MAAfD,GAAsBD,EACxB,MAAM,IAAIriC,MAAM,+IAEb,GAAiB,UAAbkiC,GAAwBG,EACjC,MAAM,IAAIriC,MAAM,0HAIpB,GAAI5zB,GAAUF,EAAS,oBAAqB,CAExC,GAAIE,GAAUF,EAAS,oBACrB,MAAM,IAAI8zB,MAAM,iEAKlB,GAA2C,aAFA7e,GAAgBjV,EAAS,mBAAoB,WAGtF,MAAM,IAAI8zB,MAAM,wJAKtB,GAAI5zB,GAAUF,EAAS,oBAAsB24B,GAA8BhiB,SAAS1B,GAAgBjV,EAAS,iBAAkB,eAC7H,MAAM,IAAI8zB,MAAM,+EAAiF6E,GAA8B9tC,KAAI,SAAAqrE,GAAC,iBAAQA,EAAR,QAAcr5C,KAAK,OAGzJ,GAAI3c,GAAUF,EAAS,wBAA0BE,GAAUF,EAAS,iBAAkB,CACpF,IAAM8L,EAAQ,IAAIgoB,MAAM,gGAExB,MADAhoB,EAAMwqD,eAAiB,gBACjBxqD,GAkqINyqD,CAAgBr/D,EAAQ8I,SACxBg8C,EAQJ,SAAwBwa,GACtB,IAAMC,EAAarX,GAAiBL,QAAO,SAAAntD,GAAI,OAAIsO,GAAUs2D,EAAoB5kE,MAC3ElB,EAAM+lE,EAAW55C,KAAK,KACxBm/B,EAAM0a,GAAiBhmE,GAE3B,IAAKsrD,EAAK,CACRA,EAAMyQ,GADE,UAGagK,GAHb,IAGR,2BAAiC,KAAtBx2D,EAAsB,QAC/B+7C,EAAMpjB,GAAa34B,GAAQ+7C,IAJrB,8BAOR0a,GAAiBhmE,GAAOsrD,EAG1B,OAAOA,EAvBC2a,CAAez/D,EAAQ8I,UAGxB,IAAIg8C,EAAI9kD,EAASwI,GAG1B,IAAMg3D,GAAmB,GAoBzB5uE,EAAQggD,MA9ER,SAAepoC,EAAOxI,GACpB,IAAI0/D,EAEJ,GAAsE,iBAAzC,OAAvBA,EAAW1/D,QAAmB,EAAS0/D,EAAS9kD,YA+BpD,OAAOgkD,GAAU5+D,EAASwI,GAAOooC,QA9BjC5wC,EAAUtP,OAAOc,OAAO,GAAIwO,GAE5B,IACEA,EAAQ4a,WAAa,SACrB,IAAM0M,EAASs3C,GAAU5+D,EAASwI,GAC5B7W,EAAM21B,EAAOspB,QAEnB,GAAItpB,EAAO1e,kBACT,OAAOjX,EAGT,GAAI21B,EAAOze,4BACT,IAEE,OADA7I,EAAQ4a,WAAa,SACdgkD,GAAU5+D,EAASwI,GAAOooC,QACjC,MAAOlyC,SAET/M,EAAIZ,QAAQ6pB,WAAa,SAG3B,OAAOjpB,EACP,MAAOguE,GACP,IAEE,OADA3/D,EAAQ4a,WAAa,SACdgkD,GAAU5+D,EAASwI,GAAOooC,QACjC,MAAOgvB,IAET,MAAMD,IAgDZ/uE,EAAQ00C,gBA1CR,SAAyB98B,EAAOxI,GAC9B,IAAMsnB,EAASs3C,GAAU5+D,EAASwI,GAMlC,OAJI8e,EAAOtnB,QAAQ2a,aACjB2M,EAAO3f,MAAMyR,QAAS,GAGjBkO,EAAOu4C,iBAoChBjvE,EAAQkvE,SAAW3/D,G,kCCltcnB,YAEAzP,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQmvE,iBAAmBA,EAC3BnvE,EAAQE,QAsIR,SAAkBkvE,EAAUC,EAAYC,GAAsB,IAAX1K,EAAW,uDAAJ,GACxD,IAAK2K,EAAyB,CAC5BA,GAA0B,EAC1B,IAAM3rD,EAAU,sGAEhB,GAAI4rD,EAAQC,YACVD,EAAQC,YAAY7rD,EAAS,0BACxB,CACL,IAAM8rD,EAAmB,IAAI1jC,MAAMpoB,GACnC8rD,EAAiB5lE,KAAO,qBACxB6lE,QAAQC,KAAK,IAAI5jC,MAAMpoB,KAK3B,IAAMisD,EAAW,CACf95D,MAAO,CACLF,OAHJy5D,EAAYQ,KAAKC,IAAIT,EAAW,GAI5B35D,KAAM05D,IAGV,OAAOF,EAAiBC,EAAUS,EAAUjL,IAzJ9C,IAAIoL,EAAavvE,EAAQ,KAErB8uE,GAA0B,EAE9B,SAASU,EAAQC,GACf,MAAO,CACLC,OAAQD,EAAME,KACdC,OAAQH,EAAMI,IAAIC,KAClB3sD,QAASssD,EAAMI,IAAIC,MAIvB,IAAMC,EAAU,0BAEhB,SAASC,EAAe35D,EAAK3B,EAAQyvD,GACnC,IAAM/hD,EAAW/iB,OAAOc,OAAO,CAC7BiV,OAAQ,EACRF,MAAO,GACNmB,EAAIf,OACDiN,EAASljB,OAAOc,OAAO,GAAIiiB,EAAU/L,EAAId,KAC/C,EAGI4uD,GAAQ,GAHZ,IACE8L,kBADF,MACe,EADf,MAEEC,kBAFF,MAEe,EAFf,EAIM1mD,EAAYpH,EAASlN,KACrBi7D,EAAc/tD,EAAShN,OACvBg7D,EAAU7tD,EAAOrN,KACjBm7D,EAAY9tD,EAAOnN,OACrBE,EAAQ+5D,KAAKC,IAAI9lD,GAAaymD,EAAa,GAAI,GAC/C16D,EAAM85D,KAAKiB,IAAI57D,EAAOxN,OAAQkpE,EAAUF,IAEzB,IAAf1mD,IACFlU,EAAQ,IAGO,IAAb86D,IACF76D,EAAMb,EAAOxN,QAGf,IAAMqpE,EAAWH,EAAU5mD,EACrBgnD,EAAc,GAEpB,GAAID,EACF,IAAK,IAAI9nE,EAAI,EAAGA,GAAK8nE,EAAU9nE,IAAK,CAClC,IAAMmmE,EAAanmE,EAAI+gB,EAEvB,GAAK2mD,EAEE,GAAU,IAAN1nE,EAAS,CAClB,IAAMgoE,EAAe/7D,EAAOk6D,EAAa,GAAG1nE,OAC5CspE,EAAY5B,GAAc,CAACuB,EAAaM,EAAeN,EAAc,QAChE,GAAI1nE,IAAM8nE,EACfC,EAAY5B,GAAc,CAAC,EAAGyB,OACzB,CACL,IAAMI,EAAe/7D,EAAOk6D,EAAanmE,GAAGvB,OAC5CspE,EAAY5B,GAAc,CAAC,EAAG6B,QAR9BD,EAAY5B,IAAc,OAc1B4B,EAAYhnD,GAFZ2mD,IAAgBE,GACdF,GACuB,CAACA,EAAa,GAKhB,CAACA,EAAaE,EAAYF,GAIvD,MAAO,CACL76D,QACAC,MACAi7D,eAIJ,SAAS9B,EAAiBC,EAAUt4D,GAAgB,IAAX8tD,EAAW,uDAAJ,GACxCuM,GAAevM,EAAKwM,eAAiBxM,EAAKyM,cAAe,EAAIrB,EAAWsB,iBAAiB1M,GACzFsL,GAAQ,EAAIF,EAAWuB,UAAU3M,GACjC4M,EAAOvB,EAAQC,GAEfuB,EAAiB,SAACC,EAAS9hE,GAC/B,OAAOuhE,EAAcO,EAAQ9hE,GAAUA,GAGnC+hE,EAAQvC,EAASwC,MAAMpB,GAC7B,EAIIC,EAAe35D,EAAK66D,EAAO/M,GAH7B7uD,EADF,EACEA,MACAC,EAFF,EAEEA,IACAi7D,EAHF,EAGEA,YAEIY,EAAa/6D,EAAIf,OAAqC,kBAArBe,EAAIf,MAAMF,OAC3Ci8D,EAAiBhmE,OAAOkK,GAAKrO,OAC7BoqE,EAAmBZ,GAAc,EAAInB,EAAW9vE,SAASkvE,EAAUxK,GAAQwK,EAC7E4C,EAAQD,EAAiBH,MAAMpB,GAASpnE,MAAM2M,EAAOC,GAAKjT,KAAI,SAAC4S,EAAM6N,GACvE,IAAMyuD,EAASl8D,EAAQ,EAAIyN,EACrB0uD,EAAe,WAAID,GAAS7oE,OAAO0oE,GACnC3B,EAAS,IAAH,OAAO+B,EAAP,MACNC,EAAYlB,EAAYgB,GACxBG,GAAkBnB,EAAYgB,EAAS,GAE7C,GAAIE,EAAW,CACb,IAAIE,EAAa,GAEjB,GAAIhoD,MAAMC,QAAQ6nD,GAAY,CAC5B,IAAMG,EAAgB38D,EAAKvM,MAAM,EAAG0mE,KAAKC,IAAIoC,EAAU,GAAK,EAAG,IAAI7sE,QAAQ,SAAU,KAC/EitE,EAAkBJ,EAAU,IAAM,EACxCE,EAAa,CAAC,MAAOZ,EAAeD,EAAKrB,OAAQA,EAAO7qE,QAAQ,MAAO,MAAO,IAAKgtE,EAAeb,EAAeD,EAAKnB,OAAQ,KAAKmC,OAAOD,IAAkBx9C,KAAK,IAE7Jq9C,GAAkBxN,EAAKhhD,UACzByuD,GAAc,IAAMZ,EAAeD,EAAK5tD,QAASghD,EAAKhhD,UAI1D,MAAO,CAAC6tD,EAAeD,EAAKnB,OAAQ,KAAMoB,EAAeD,EAAKrB,OAAQA,GAASx6D,EAAKhO,OAAS,EAAd,WAAsBgO,GAAS,GAAI08D,GAAYt9C,KAAK,IAEnI,iBAAW08C,EAAeD,EAAKrB,OAAQA,IAAvC,OAAiDx6D,EAAKhO,OAAS,EAAd,WAAsBgO,GAAS,OAEjFof,KAAK,MAMR,OAJI6vC,EAAKhhD,UAAYiuD,IACnBG,EAAQ,GAAH,OAAM,IAAIQ,OAAOV,EAAiB,IAAlC,OAAuClN,EAAKhhD,QAA5C,aAAwDouD,IAG3Db,EACKjB,EAAMuC,MAAMT,GAEZA,K,mDCtIXlyE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQwD,MAMR,SAAekvE,EAAGC,GAChB,MAKIA,EAJFC,4BADF,MACyBF,EAAEE,qBAD3B,IAKID,EAHFE,0BAFF,MAEuBH,EAAEG,mBAFzB,IAKIF,EAFFG,wBAHF,MAGqBJ,EAAEI,iBAHvB,IAKIH,EADFI,6BAJF,MAI0BL,EAAEK,sBAJ5B,EAMA,MAAO,CACLr8C,OAAQ52B,OAAOc,OAAO,GAAI8xE,EAAEh8C,OAAQi8C,EAAEj8C,QACtCk8C,uBACAC,qBACAC,mBACAC,0BAjBJ/yE,EAAQgzE,SAqBR,SAAkBpO,GAChB,GAAY,MAARA,GAAgC,kBAATA,EACzB,MAAM,IAAI54B,MAAM,6BAGZ,IAAAinC,EAAOrO,GAAQ,GAEnBgO,EAIEK,EAJFL,qBACAC,EAGEI,EAHFJ,mBACAC,EAEEG,EAFFH,iBACAC,EACEE,EADFF,sBAEIr8C,EA9BR,SAAuCvhB,EAAQ+9D,GAAY,GAAc,MAAV/9D,EAAgB,MAAO,GAAI,IAA2DvM,EAAKM,EAA5DiqE,EAAS,GAAQC,EAAatzE,OAAO0iB,KAAKrN,GAAqB,IAAKjM,EAAI,EAAGA,EAAIkqE,EAAWzrE,OAAQuB,IAAON,EAAMwqE,EAAWlqE,GAAQgqE,EAAS7mD,QAAQzjB,IAAQ,IAAauqE,EAAOvqE,GAAOuM,EAAOvM,IAAQ,OAAOuqE,EA8BzRE,CAA8BJ,EAAM,CAAC,uBAAwB,qBAAsB,mBAAoB,0BAEtH,GAA4B,MAAxBL,KAAkCA,aAAgCnsE,KACpE,MAAM,IAAIulC,MAAM,6DAGlB,GAA0B,MAAtB6mC,KAAgCA,aAA8B39D,UAAkC,IAAvB29D,EAC3E,MAAM,IAAI7mC,MAAM,qEAGlB,GAAwB,MAApB8mC,GAAwD,mBAArBA,EACrC,MAAM,IAAI9mC,MAAM,6DAGlB,GAA6B,MAAzB+mC,GAAkE,mBAA1BA,EAC1C,MAAM,IAAI/mC,MAAM,kEAGlB,IAA8B,IAA1B+mC,IAA2D,MAAxBH,GAAsD,MAAtBC,GACrE,MAAM,IAAI7mC,MAAM,2GAGlB,MAAO,CACLtV,SACAk8C,qBAAsBA,QAAwB9xE,EAC9C+xE,mBAA0C,MAAtBA,OAA6B/xE,EAAY+xE,EAC7DC,iBAAsC,MAApBA,OAA2BhyE,EAAYgyE,EACzDC,sBAAgD,MAAzBA,OAAgCjyE,EAAYiyE,IA3DvE/yE,EAAQszE,sBA+DR,SAA+BC,GAC7B,GAAIlpD,MAAMC,QAAQipD,GAChB,OAAOA,EAAaC,QAAO,SAACC,EAAKC,EAAaxqE,GAE5C,OADAuqE,EAAI,IAAMvqE,GAAKwqE,EACRD,IACN,IACE,GAA4B,kBAAjBF,GAA6C,MAAhBA,EAC7C,OAAOA,QAAgBzyE,EAGzB,MAAM,IAAIkrC,MAAM,wE,iCC9ElBlsC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAUR,SAA+ByzE,EAAWt+D,EAAMuvD,GAC9C,IACEgO,EAIEhO,EAJFgO,qBACAC,EAGEjO,EAHFiO,mBACAC,EAEElO,EAFFkO,iBACAC,EACEnO,EADFmO,sBAEIhyE,EA2HR,SAA4BsU,EAAMu+D,EAAYb,GAC5C,IAAM76D,GAAW07D,EAAW17D,SAAW,IAAI9O,SAEb,IAA1B2pE,GACF76D,EAAQtU,KAAK,gBAGfgwE,EAAa9zE,OAAOc,OAAO,CACzB82D,4BAA4B,EAC5BE,yBAAyB,EACzB5tC,WAAY,UACX4pD,EAAY,CACb17D,YAGF,IACE,OAAO,EAAI27D,EAAQ7zB,OAAO3qC,EAAMu+D,GAChC,MAAOvvD,GACP,IAAMvN,EAAMuN,EAAIvN,IAShB,MAPIA,IACFuN,EAAIT,SAAW,MAAO,EAAIkwD,EAAW3E,kBAAkB95D,EAAM,CAC3DU,MAAOe,IAETuN,EAAIhP,KAAO,8BAGPgP,GAtJI0vD,CAAmB1+D,EAAMuvD,EAAKluC,OAAQq8C,GAClDrkB,EAAEslB,qBAAqBjzE,EAAK,CAC1B+xE,qBAEFa,EAAUX,SAASjyE,GACnB,IAAMkzE,EAAY,CAChB5d,aAAc,GACd6d,iBAAkB,IAAIztE,KAElB0tE,EAAS,CACb9d,aAAc,GACd6d,iBAAkB,IAAIztE,KAElB2tE,EAAc,CAClBn0E,WAAOa,GAUT,OARA4tD,EAAEprD,SAASvC,EAAKszE,EAA2B,CACzCJ,YACAE,SACAC,cACAxB,uBACAC,qBACAE,0BAEKjzE,OAAOc,OAAO,CACnBG,OACCqzE,EAAYn0E,MAAQk0E,EAASF,IAzClC,IAAIvlB,EAAIjuD,EAAQ,IAEZozE,EAAUpzE,EAAQ,KAElBqzE,EAAarzE,EAAQ,KAEnB6zE,EAAU,gBAsChB,SAASD,EAA0B7yE,EAAM+yE,EAAWx9D,GAClD,IAAIy9D,EAEA1qE,EAEJ,GAAI4kD,EAAE+lB,cAAcjzE,GAAO,CACzB,IAAoC,IAAhCuV,EAAMg8D,sBACR,MAAM,IAAI/mC,MAAM,oFAEhBliC,EAAOtI,EAAKsI,KAAKA,KACjBiN,EAAMq9D,YAAYn0E,OAAQ,MAEvB,KAAgC,IAA5B8W,EAAMq9D,YAAYn0E,OAAmB8W,EAAMg8D,sBACpD,OACK,GAAIrkB,EAAE7kD,aAAarI,IAASktD,EAAEgmB,gBAAgBlzE,GACnDsI,EAAOtI,EAAKsI,KACZiN,EAAMq9D,YAAYn0E,OAAQ,MACrB,KAAIyuD,EAAEvjD,gBAAgB3J,GAI3B,OAHAsI,EAAOtI,EAAKvB,MACZ8W,EAAMq9D,YAAYn0E,OAAQ,GAK5B,IAAK8W,EAAMq9D,YAAYn0E,QAAsC,MAA5B8W,EAAM87D,oBAA4D,MAA9B97D,EAAM67D,sBACzE,MAAM,IAAI5mC,MAAM,2GAGlB,IAAIj1B,EAAMq9D,YAAYn0E,QAAuC,IAA7B8W,EAAM87D,qBAAkC97D,EAAM87D,oBAAsByB,GAASnvD,KAAKrb,IAAoE,OAAvD0qE,EAAwBz9D,EAAM67D,uBAAiC4B,EAAsBvoE,IAAInC,GAAxN,CAKA,IAIIgO,EAJJ,GADAy8D,EAAYA,EAAUnrE,SAIRmrE,EAAU5sE,OAAS,GAFzBrG,EADR,EACEE,KACAoH,EAFF,EAEEA,IAIE8lD,EAAEvjD,gBAAgB3J,IAASktD,EAAE+lB,cAAcjzE,EAAM,CACnD01B,aAAc,kBAEdpf,EAAO,SACE42C,EAAEimB,gBAAgBrzE,IAAmB,cAARsH,GAAuB8lD,EAAE/nD,iBAAiBrF,IAAmB,cAARsH,GAAuB8lD,EAAEkmB,WAAWtzE,IAAmB,WAARsH,EAC1IkP,EAAO,QACE42C,EAAEzkD,sBAAsB3I,KAAYotD,EAAE+lB,cAAcjzE,IAC7DsW,EAAO,YACPy8D,EAAYA,EAAUnrE,MAAM,GAAI,IAEhC0O,EADS42C,EAAElO,YAAYh/C,IAASktD,EAAE+lB,cAAcjzE,GACzC,YAEA,QAGT,MAGIuV,EAAMq9D,YAAYn0E,MAAQ8W,EAAMo9D,OAASp9D,EAAMk9D,UAFjD5d,EADF,EACEA,aACA6d,EAFF,EAEEA,iBAEF7d,EAAazyD,KAAK,CAChBkG,OACAgO,OACA+8D,QAAS,SAAA9zE,GAAG,OAMhB,SAA0BA,EAAKwzE,GAG7B,IAFA,IAAIjzE,EAASP,EAEJmI,EAAI,EAAGA,EAAIqrE,EAAU5sE,OAAS,EAAGuB,IAAK,CAC7C,MAGIqrE,EAAUrrE,GAFZN,EADF,EACEA,IACA4a,EAFF,EAEEA,MAIAliB,OADYR,IAAV0iB,EACOliB,EAAOsH,GAEPtH,EAAOsH,GAAK4a,GAIzB,MAGI+wD,EAAUA,EAAU5sE,OAAS,GAF/BiB,EADF,EACEA,IACA4a,EAFF,EAEEA,MAEF,MAAO,CACLliB,SACAsH,MACA4a,SA7BgBsxD,CAAiB/zE,EAAKwzE,IACtCQ,YAAab,EAAiBjoE,IAAInC,KAEpCoqE,EAAiBrtE,IAAIiD,M,6CCjHvBhK,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAIR,SAA8B80E,EAAUzB,GACtC,IAAMxyE,EAAM2tD,EAAE1oD,UAAUgvE,EAASj0E,KAE7BwyE,IACFyB,EAAS3e,aAAa5zC,SAAQ,SAAA8tB,GAC5B,IAAKzwC,OAAOg3B,UAAUwxB,eAAeh/C,KAAKiqE,EAAchjC,EAAYzmC,MAAO,CACzE,IAAMmrE,EAAkB1kC,EAAYzmC,KACpC,MAAM,IAAIkiC,MAAJ,4CAA+CipC,EAA/C,mOAE+DA,EAF/D,uDAG0BA,EAH1B,aAMVn1E,OAAO0iB,KAAK+wD,GAAc9wD,SAAQ,SAAA7Z,GAChC,IAAKosE,EAASd,iBAAiBjoE,IAAIrD,GACjC,MAAM,IAAIojC,MAAJ,gCAAmCpjC,EAAnC,gBAaZ,OARAosE,EAAS3e,aAAajtD,QAAQ8rE,UAAUzyD,SAAQ,SAAA8tB,GAC9C,KAUJ,SAA0BA,EAAaxvC,EAAK2yE,GACtCnjC,EAAYwkC,cACV1qD,MAAMC,QAAQopD,GAChBA,EAAcA,EAAY3wE,KAAI,SAAAvB,GAAI,OAAIktD,EAAE1oD,UAAUxE,MAClB,kBAAhBkyE,IAChBA,EAAchlB,EAAE1oD,UAAU0tE,KAI9B,MAIInjC,EAAYskC,QAAQ9zE,GAHtBO,EADF,EACEA,OACAsH,EAFF,EAEEA,IACA4a,EAHF,EAGEA,MAGF,GAAyB,WAArB+sB,EAAYz4B,MAKd,GAJ2B,kBAAhB47D,IACTA,EAAchlB,EAAE7iD,cAAc6nE,KAG3BA,IAAgBhlB,EAAEvjD,gBAAgBuoE,GACrC,MAAM,IAAI1nC,MAAM,qCAEb,GAAyB,cAArBuE,EAAYz4B,UACPhX,IAAV0iB,EACGkwD,EAEMrpD,MAAMC,QAAQopD,GACvBA,EAAchlB,EAAErqD,eAAeqvE,GACC,kBAAhBA,EAChBA,EAAchlB,EAAErlD,oBAAoBqlD,EAAElqD,WAAWkvE,IACvChlB,EAAElO,YAAYkzB,KACxBA,EAAchlB,EAAErlD,oBAAoBqqE,IANpCA,EAAchlB,EAAEymB,iBASdzB,IAAgBrpD,MAAMC,QAAQopD,KACL,kBAAhBA,IACTA,EAAchlB,EAAElqD,WAAWkvE,IAGxBhlB,EAAElO,YAAYkzB,KACjBA,EAAchlB,EAAErlD,oBAAoBqqE,UAIrC,GAAyB,UAArBnjC,EAAYz4B,MAKrB,GAJ2B,kBAAhB47D,IACTA,EAAchlB,EAAElqD,WAAWkvE,SAGf5yE,IAAV0iB,EAAqB,MAAM,IAAIwoB,MAAM,2BAMzC,GAJ2B,kBAAhB0nC,IACTA,EAAchlB,EAAElqD,WAAWkvE,IAGzBrpD,MAAMC,QAAQopD,GAChB,MAAM,IAAI1nC,MAAM,mDAIpB,QAAclrC,IAAV0iB,EACFkrC,EAAEskB,SAAS1xE,EAAQsH,EAAK8qE,GACxBpyE,EAAOsH,GAAO8qE,MACT,CACL,IAAM5gB,EAAQxxD,EAAOsH,GAAKQ,QAED,cAArBmnC,EAAYz4B,MAA6C,UAArBy4B,EAAYz4B,KAC/B,MAAf47D,EACF5gB,EAAMr7C,OAAO+L,EAAO,GACX6G,MAAMC,QAAQopD,GACvB5gB,EAAMr7C,OAAN,MAAAq7C,EAAK,CAAQtvC,EAAO,GAAf,SAAqBkwD,KAE1B5gB,EAAMtvC,GAASkwD,EAGjB5gB,EAAMtvC,GAASkwD,EAGjBhlB,EAAEskB,SAAS1xE,EAAQsH,EAAKkqD,GACxBxxD,EAAOsH,GAAOkqD,GAzFZsiB,CAAiB7kC,EAAaxvC,EAAKwyE,GAAgBA,EAAahjC,EAAYzmC,OAAS,MACrF,MAAOylB,GAEP,MADAA,EAAE3L,QAAF,uCAA4C2sB,EAAYzmC,KAAxD,cAAkEylB,EAAE3L,SAC9D2L,MAGHxuB,GA9BT,IAAI2tD,EAAIjuD,EAAQ,K,6CCLhBX,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIm1E,EAAqB50E,EAAQ,KAE7BsM,EAAwBtM,EAAQ,KAEhC2K,EAAsB3K,EAAQ,KAE9B60E,EAAgC70E,EAAQ,KAExC4C,EAAQ5C,EAAQ,KAEhB80E,EAAW90E,EAAQ,KAEnB+0E,EAAkB/0E,EAAQ,MAExBg1E,EAAoB,SAAAC,GAAQ,OAAI51E,OAAO0iB,KAAK+yD,EAASG,IAAWze,QAAO,SAAAntD,GAAI,MAAI,SAASqb,KAAKrb,OAE7F5I,EAAiB,IAAIuF,IAAJ,YAAYgvE,EAAkB,YAA9B,EAA6CA,EAAkB,cAElF90E,GAAW,EAAI00E,EAAmB96B,UAAS,SAACo7B,EAAKvmE,GACnD,IAAIwmE,EAAiBC,EAAkBC,EAAkBC,EAEzDJ,EAAIK,cAAc,GAClB,IACEC,EACE7mE,EADF6mE,MAEI7rE,EAA2E,OAAxDwrE,EAAkBD,EAAIO,WAAW,oBAA8BN,EAAkBxmE,EAAQ6mE,MAC5G7wE,EAAwE,OAAvDywE,EAAmBF,EAAIO,WAAW,kBAA4BL,EAAmBzmE,EAAQ6mE,MAC1GzsE,EAAkG,OAApEssE,EAAmBH,EAAIO,WAAW,+BAAyCJ,EAAmB1mE,EAAQ6mE,MACpI9oE,EAAsE,OAAtD4oE,EAAmBJ,EAAIO,WAAW,iBAA2BH,EAAmB3mE,EAAQ6mE,MACxGE,EAAUC,SAChB,MAAO,CACLtsE,KAAM,oBACNusE,QAAS,CACPC,yBADO,SACkBt1E,GAClBA,EAAK+C,IAAI,eAAewyE,uBAC7B,EAAIjB,EAA8Bp1E,SAASc,IAG7Cw1E,iBANO,SAMUx1E,GACf,IACEQ,EACER,EADFQ,KAEIsE,EAAMtE,EAAK6J,IAAMrK,EAAKO,MAAM8I,sBAAsB,SACxDrJ,EAAKqF,YAAYhD,EAAMe,MAAMoG,oBAAoB,MAAO,CAACnH,EAAMe,MAAMqG,mBAAmB3E,EAAKzC,EAAMe,MAAM4H,aAAaxK,QAGxHi1E,gBAdO,SAcSz1E,EAAM+V,GACpB,IACEvV,EACER,EADFQ,KAEF,IAAIA,EAAK20E,GAAT,CACA,IAAMO,GAAW,EAAItrE,EAAoBlL,SAASc,GAE9C01E,GAAYA,IAAal1E,EAC3BR,EAAKqF,YAAYqwE,IAInBl1E,EAAK20E,IAAW,EAChBn1E,EAAKqF,aAAY,EAAImvE,EAAgBt1E,SAASc,EAAM+V,EAAM9V,KAAMC,EAAgB+0E,EAAO,CACrF7rE,kBACAhF,gBACAoE,6BACA2D,kBAGEnM,EAAK2F,sBACP,EAAIoG,EAAsB7M,SAASc,GAE/BA,EAAK+C,IAAI,UAAU0B,6BACrBzE,EAAK+C,IAAI,UAAU4yE,qCAS/B32E,EAAQE,QAAUS,G,6CCpFlBb,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQG,QAAUH,EAAQI,WAAaJ,EAAQM,UAAYN,EAAQK,WAAaL,EAAQO,WAAQ,EAEhG,IAAImuD,EAAIjuD,EAAQ,IAEhB,SAASm2E,EAAuB7qE,GAC9B,MAAO,CACLsJ,KAAM,SAAAkZ,GAAG,wCAA+BA,IACxCykD,SAAU,aACV6D,OAAQ,SAAA91E,GACN,OAAOgL,EAAGhL,EAAIZ,QAAQmC,KAAK8G,MAAM,MAKvC,IAAM7I,EAAQq2E,GAAuB,SAAAt0E,GACnC,OAAIA,EAAKqF,OAAS,EACTrF,EAEAA,EAAK,MAGhBtC,EAAQO,MAAQA,EAChB,IAAMF,EAAau2E,GAAuB,SAAAt0E,GAAI,OAAIA,KAClDtC,EAAQK,WAAaA,EACrB,IAAMC,EAAYs2E,GAAuB,SAAAt0E,GACvC,GAAoB,IAAhBA,EAAKqF,OACP,MAAM,IAAIqkC,MAAM,4BAGlB,GAAI1pC,EAAKqF,OAAS,EAChB,MAAM,IAAIqkC,MAAM,4CAGlB,OAAO1pC,EAAK,MAEdtC,EAAQM,UAAYA,EACpB,IAAMF,EAAa,CACjBiV,KAAM,SAAAkZ,GAAG,mBAAUA,EAAV,QACTykD,SAAU,SAAAjyE,GACR,GAAIA,EAAIZ,QAAQmC,KAAKqF,OAAS,EAC5B,MAAM,IAAIqkC,MAAM,4CAGlB,GAAqC,IAAjC5rC,EAAWy2E,OAAO91E,GAAKgV,MACzB,MAAM,IAAIi2B,MAAM,kCAGpB6qC,OAAQ,YAEF,IADJ12E,EACI,EADJA,QAEOkxC,EAAP,EAAelxC,EAAQmC,KAAvB,MAEA,OADAosD,EAAEooB,0BAA0BzlC,GACrBA,EAAKjxC,aAGhBJ,EAAQI,WAAaA,EAMrBJ,EAAQG,QALQ,CACdkV,KAAM,SAAAkZ,GAAG,OAAIA,GACbykD,SAAU,aACV6D,OAAQ,SAAA91E,GAAG,OAAIA,EAAIZ,W,iCC9DrBL,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAYR,SAAS62E,EAAsBpD,EAAWqD,GACxC,IAAMC,EAAkB,IAAI7oE,QACtB8oE,EAAmB,IAAI9oE,QACvB+oE,EAAaH,IAAe,EAAIlI,EAASkE,UAAU,MACzD,OAAOlzE,OAAOc,QAAO,SAACw2E,GAAiB,2BAATtuE,EAAS,iCAATA,EAAS,kBACrC,GAAmB,kBAARsuE,EAAkB,CAC3B,GAAItuE,EAAKnB,OAAS,EAAG,MAAM,IAAIqkC,MAAM,4BACrC,OAAOqrC,GAAc,EAAIC,EAAQp3E,SAASyzE,EAAWyD,GAAK,EAAItI,EAAStrE,OAAO2zE,GAAY,EAAIrI,EAASkE,UAAUlqE,EAAK,OACjH,GAAIuhB,MAAMC,QAAQ8sD,GAAM,CAC7B,IAAIG,EAAUN,EAAgBlzE,IAAIqzE,GAOlC,OALKG,IACHA,GAAU,EAAIC,EAASt3E,SAASyzE,EAAWyD,EAAKD,GAChDF,EAAgB/qE,IAAIkrE,EAAKG,IAGpBF,EAAcE,EAAQzuE,IACxB,GAAmB,kBAARsuE,GAAoBA,EAAK,CACzC,GAAItuE,EAAKnB,OAAS,EAAG,MAAM,IAAIqkC,MAAM,4BACrC,OAAO+qC,EAAsBpD,GAAW,EAAI7E,EAAStrE,OAAO2zE,GAAY,EAAIrI,EAASkE,UAAUoE,KAGjG,MAAM,IAAIprC,MAAJ,2CAA8CorC,MACnD,CACDr2E,IAAK,SAACq2E,GAAiB,2BAATtuE,EAAS,iCAATA,EAAS,kBACrB,GAAmB,kBAARsuE,EAAkB,CAC3B,GAAItuE,EAAKnB,OAAS,EAAG,MAAM,IAAIqkC,MAAM,4BACrC,OAAO,EAAIsrC,EAAQp3E,SAASyzE,EAAWyD,GAAK,EAAItI,EAAStrE,QAAO,EAAIsrE,EAAStrE,OAAO2zE,GAAY,EAAIrI,EAASkE,UAAUlqE,EAAK,KAAM2uE,GAA3H,GACF,GAAIptD,MAAMC,QAAQ8sD,GAAM,CAC7B,IAAIG,EAAUL,EAAiBnzE,IAAIqzE,GAOnC,OALKG,IACHA,GAAU,EAAIC,EAASt3E,SAASyzE,EAAWyD,GAAK,EAAItI,EAAStrE,OAAO2zE,EAAYM,IAChFP,EAAiBhrE,IAAIkrE,EAAKG,IAGrBA,EAAQzuE,EAARyuE,GAGT,MAAM,IAAIvrC,MAAJ,2CAA8CorC,QAjD1D,IAAItI,EAAWruE,EAAQ,KAEnB62E,EAAU72E,EAAQ,KAElB+2E,EAAW/2E,EAAQ,KAEjBg3E,GAAiB,EAAI3I,EAASkE,UAAU,CAC5CH,oBAAoB,IA+CtB,SAASwE,EAActrE,GACrB,IAAI2rE,EAAY,GAEhB,IACE,MAAM,IAAI1rC,MACV,MAAOhoB,GACHA,EAAMkO,QACRwlD,EAAY1zD,EAAMkO,MAAM0/C,MAAM,MAAMxoE,MAAM,GAAG2rB,KAAK,OAItD,OAAO,SAAAjoB,GACL,IACE,OAAOf,EAAGe,GACV,MAAOuX,GAEP,MADAA,EAAI6N,OAAJ,+BAAqCwlD,GAC/BrzD,M,iCC3EZvkB,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAQR,SAAwByzE,EAAWt+D,EAAMuvD,GAEvC,IAAIoQ,EACJ,OAFA3/D,EAAOs+D,EAAUt+D,KAAKA,GAEf,SAAAvI,GACL,IAAMymE,GAAe,EAAIzE,EAASwE,uBAAuBxmE,GAEzD,OADKkoE,IAAUA,GAAW,EAAI2C,EAAOz3E,SAASyzE,EAAWt+D,EAAMuvD,IACxD+O,EAAUkD,QAAO,EAAIe,EAAU13E,SAAS80E,EAAUzB,MAZ7D,IAAIzE,EAAWruE,EAAQ,KAEnBk3E,EAASl3E,EAAQ,KAEjBm3E,EAAYn3E,EAAQ,M,qDCTxBX,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQsxE,gBAAkBA,EAC1BtxE,EAAQuxE,SAAWA,EACnBvxE,EAAQE,QAoGR,SAAmBmV,GAAoB,IAAdjG,EAAc,uDAAJ,GACjC,GAAIkiE,EAAgBliE,GAAU,CAC5B,IAAM8gE,EAAQqB,EAASniE,GACjBoiE,EAAOvB,EAAQC,GACrB,OAAO2H,EAAgBrG,EAAMn8D,GAE7B,OAAOA,GAxGX,IAAIyiE,EAAYr3E,EAAQ,KAEpBs3E,EAA6Bt3E,EAAQ,KAErCu3E,EAASv3E,EAAQ,KAEfw3E,EAAoB,IAAIxxE,IAAI,CAAC,KAAM,QAAS,OAAQ,MAAO,KAAM,QAEvE,SAASwpE,EAAQC,GACf,MAAO,CACLrhE,QAASqhE,EAAMgI,KACfC,YAAajI,EAAMkI,OACnBC,cAAenI,EAAMkI,OACrBE,WAAYpI,EAAMkI,OAClBnG,OAAQ/B,EAAMqI,QACd3oE,OAAQsgE,EAAMsI,MACdxnC,MAAOk/B,EAAMqI,QACb1hE,QAASq5D,EAAME,KACf/gD,QAAS6gD,EAAMuI,MAAMC,MAAMnI,MAI/B,IAEIoI,EAFEnI,EAAU,0BACVoI,EAAU,cAGRC,EAAU,iBAEVC,EAAe,SAAUzpE,EAAO8T,EAAQ41D,GAC5C,GAAmB,SAAf1pE,EAAMyI,KAAiB,CACzB,IAAI,EAAIigE,EAA2B/xD,WAAW3W,EAAMpP,SAAU,EAAI83E,EAA2BlyD,sBAAsBxW,EAAMpP,OAAO,IAASg4E,EAAkBhsE,IAAIoD,EAAMpP,OACnK,MAAO,UAGT,GAAI44E,EAAQ1zD,KAAK9V,EAAMpP,SAAgC,MAArB84E,EAAK51D,EAAS,IAA4C,MAA9B41D,EAAK3nD,OAAOjO,EAAS,EAAG,IACpF,MAAO,gBAGT,GAAI9T,EAAMpP,MAAM,KAAOoP,EAAMpP,MAAM,GAAG+4E,cACpC,MAAO,cAIX,MAAmB,eAAf3pE,EAAMyI,MAAyB8gE,EAAQzzD,KAAK9V,EAAMpP,OAC7C,UAGU,YAAfoP,EAAMyI,MAAuC,MAAhBzI,EAAMpP,OAAiC,MAAhBoP,EAAMpP,MAIvDoP,EAAMyI,KAHJ,cAoBb,SAAS+/D,EAAgBrG,EAAMuH,GAC7B,IADmC,EAC/B5H,EAAc,GADiB,IAM9BwH,EAASI,IANqB,mCAIjCjhE,EAJiC,EAIjCA,KACA7X,EALiC,EAKjCA,MAEMg5E,EAAWzH,EAAK15D,GAGpBq5D,GADE8H,EACah5E,EAAM2xE,MAAMpB,GAASztE,KAAI,SAAAwrB,GAAG,OAAI0qD,EAAS1qD,MAAMwG,KAAK,MAEpD90B,GATnB,2BAGqB,IANc,8BAgBnC,OAAOkxE,EAGT,SAASG,EAAgBliE,GACvB,QAAS4oE,EAAOkB,eAAiB9pE,EAAQiiE,WAG3C,SAASE,EAASniE,GAChB,OAAOA,EAAQiiE,WAAa,IAAI2G,EAAO9zE,YAAY,CACjDi1E,SAAS,EACTC,MAAO,IACJpB,EAzCLW,EAAQ,QAAG,WAAWI,GAAX,4EAGF31D,EAAQ00D,EAAU53E,QAAQqjB,KAAKw1D,IAH7B,gBAMP,OAFM1pE,EAAQyoE,EAAUuB,aAAaj2D,GAJ9B,SAMD,CACJtL,KAAMghE,EAAazpE,EAAO+T,EAAMI,MAAOu1D,GACvC94E,MAAOoP,EAAMpP,OARR,iE,iCC7DbH,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAQR,SAAyByzE,EAAWyD,EAAKxS,GACvC,MAyBF,SAA0B+O,EAAWyD,EAAKxS,GACxC,IAAI/vC,EACAykD,EACAtE,EACAxmE,EAAS,GAEb,EAAG,CAED,IAAMyxC,EAASs5B,EAAkBnC,EADjC5oE,GAAU,KAEVqmB,EAAQorB,EAAOprB,MACfykD,EAAU,IAAI7yE,IAAIouB,GAClBmgD,GAAW,EAAI2C,EAAOz3E,SAASyzE,EAAWA,EAAUt+D,KAAK4qC,EAAO5qC,MAAO,CACrEqhB,OAAQkuC,EAAKluC,OACbk8C,qBAAsB,IAAInsE,IAAIw5C,EAAOprB,MAAMptB,OAAOm9D,EAAKgO,qBAAuBvoD,MAAMgI,KAAKuyC,EAAKgO,sBAAwB,KACtHC,mBAAoBjO,EAAKiO,mBACzBC,iBAAkBlO,EAAKkO,iBACvBC,sBAAuBnO,EAAKmO,8BAEvBiC,EAAS3e,aAAavhC,MAAK,SAAAyb,GAAW,OAAIA,EAAYwkC,aAAeuE,EAAQrtE,IAAIskC,EAAYzmC,UAEtG,MAAO,CACLkrE,WACAngD,SA5CE2kD,CAAiB7F,EAAWyD,EAAKxS,GAFnCoQ,EADF,EACEA,SACAngD,EAFF,EAEEA,MAEF,OAAO,SAAA/nB,GACL,IAAM2sE,EAAsB,GAI5B,OAHA3sE,EAAI2V,SAAQ,SAACixD,EAAaxqE,GACxBuwE,EAAoB5kD,EAAM3rB,IAAMwqE,KAE3B,SAAA5mE,GACL,IAAMymE,GAAe,EAAIzE,EAASwE,uBAAuBxmE,GAUzD,OARIymE,GACFzzE,OAAO0iB,KAAK+wD,GAAc9wD,SAAQ,SAAA7Z,GAChC,GAAI9I,OAAOg3B,UAAUwxB,eAAeh/C,KAAKmwE,EAAqB7wE,GAC5D,MAAM,IAAIojC,MAAM,sCAKf2nC,EAAUkD,QAAO,EAAIe,EAAU13E,SAAS80E,EAAUzB,EAAezzE,OAAOc,OAAO2yE,EAAckG,GAAuBA,OA3BjI,IAAI3K,EAAWruE,EAAQ,KAEnBk3E,EAASl3E,EAAQ,KAEjBm3E,EAAYn3E,EAAQ,KAsDxB,SAAS84E,EAAkBnC,EAAK5oE,GAI9B,IAHA,IAAMqmB,EAAQ,GACVxf,EAAO+hE,EAAI,GAENluE,EAAI,EAAGA,EAAIkuE,EAAIzvE,OAAQuB,IAAK,CACnC,IAAMjJ,EAAQ,GAAH,OAAMuO,GAAN,OAAetF,EAAI,GAC9B2rB,EAAMjxB,KAAK3D,GACXoV,GAAQpV,EAAQm3E,EAAIluE,GAGtB,MAAO,CACL2rB,QACAxf","file":"static/js/vendors-runtime-template.14c43d5b.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = require(\"./formatters\");\n\nvar _builder = require(\"./builder\");\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _inlineCreateSuperHelpers = require(\"./inline-createSuper-helpers\");\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\", {\n    beforeExpr\n  }),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else if (comments !== undefined) {\n    node.innerComments.unshift(...comments);\n  }\n}\n\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const {\n      start: nodeStart\n    } = node;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n\n      if (commentWS.trailingNode !== null) {\n        commentWS.trailingNode.leadingComments = comments;\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n\n    this.state.commentStack = [];\n  }\n\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipeBodyIsTighter: \"Unexpected %0 after pipeline body; any %0 expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: 'Invalid topic token %0. In order to use %0 as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"%0\" }.',\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction makeErrorTemplates(messages, code) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const value = stmt.expression.value;\n    const directive = super.stmtToDirective(stmt);\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n\n    return super.isAssignable(node, isBinding);\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  template: new TokContext(\"`\", true)\n};\n\ntypes$1.braceR.updateContext = context => {\n  context.pop();\n};\n\ntypes$1.braceL.updateContext = types$1.braceHashL.updateContext = types$1.dollarBraceL.updateContext = context => {\n  context.push(types.brace);\n};\n\ntypes$1.backQuote.updateContext = context => {\n  if (context[context.length - 1] === types.template) {\n    context.pop();\n  } else {\n    context.push(types.template);\n  }\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.strictMode === true ? true : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    if (curContext === types.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment();\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.slashAssign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? types$1.moduloAssign : types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.braceBarR);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  updateContext(prevType) {\n    var _this$state$type$upda, _this$state$type;\n\n    (_this$state$type$upda = (_this$state$type = this.state.type).updateContext) == null ? void 0 : _this$state$type$upda.call(_this$state$type, this.state.context);\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto,\n      optionalParameters\n    } = refExpressionErrors;\n\n    if (!andThrow) {\n      return shorthandAssign >= 0 || doubleProto >= 0 || optionalParameters >= 0;\n    }\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n\n    if (optionalParameters >= 0) {\n      this.unexpected(optionalParameters);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n    this.optionalParameters = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n}\n\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\n\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n\n  const cloned = Object.create(NodePrototype);\n  cloned.type = \"StringLiteral\";\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError);\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n        node = this.parseExport(node);\n\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(pos, FlowErrors.DeclareClassElement);\n      } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.OptionalBindingPattern);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentIsString = this.match(types$1.string);\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (firstIdentIsString) {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const curContext = context[context.length - 1];\n\n      if (curContext === types.j_oTag) {\n        context.length -= 2;\n      } else if (curContext === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow(params) {\n    return this.match(types$1.colon) || super.shouldParseArrow(params);\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    return super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral(this.match(types$1._true));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError);\ntypes.j_oTag = new TokContext(\"<tag\");\ntypes.j_cTag = new TokContext(\"</tag\");\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = context => {\n  context.push(types.j_expr, types.j_oTag);\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  createLookaheadState(state) {\n    const lookaheadState = super.createLookaheadState(state);\n    lookaheadState.inPropertyName = state.inPropertyName;\n    return lookaheadState;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    super.updateContext(prevType);\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === types$1.slash && prevType === types$1.jsxTagStart) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.exprAllowed = false;\n    } else if (type === types$1.jsxTagEnd) {\n      const out = context.pop();\n\n      if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n        context.pop();\n        this.state.exprAllowed = context[context.length - 1] === types.j_expr;\n      } else {\n        this.state.exprAllowed = true;\n      }\n    } else if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    const topLevelScope = this.scopeStack[0];\n    const {\n      name\n    } = id;\n\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AbstractPropertyHasInitializer: \"Property '%0' cannot have an initializer because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError);\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    } else {\n      node.id = null;\n      this.raise(this.state.start, TSErrors.MissingInterfaceName);\n    }\n\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    let isOptionalCall = false;\n\n    if (this.match(types$1.questionDot) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n\n    if (this.isRelational(\"<\")) {\n      let missingParenErrorPos;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (isOptionalCall && !this.match(types$1.parenL)) {\n            missingParenErrorPos = this.state.pos;\n            this.unexpected();\n          }\n\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n\n      if (missingParenErrorPos) {\n        this.unexpected(missingParenErrorPos, types$1.parenL);\n      }\n\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const interfaceNode = this.startNode();\n      this.next();\n      const result = this.tsParseInterfaceDeclaration(interfaceNode);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  parseClassMember(classBody, member, state) {\n    const invalidModifersForStaticBlocks = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\"];\n    this.tsParseModifiers(member, invalidModifersForStaticBlocks.concat([\"static\"]));\n\n    const callParseClassMemberWithIsStatic = () => {\n      const isStatic = !!member.static;\n\n      if (isStatic && this.eat(types$1.braceL)) {\n        if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    if (node.abstract && this.match(types$1.eq)) {\n      const {\n        key\n      } = node;\n      this.raise(this.state.start, TSErrors.AbstractPropertyHasInitializer, key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n\n      case \"TSParameterProperty\":\n        return true;\n\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow(params) {\n    if (this.match(types$1.colon)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n\n    return super.shouldParseArrow(params);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") === \"hash\";\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$pos;\n\n    refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n      const leftIsHackPipeExpression = left.type === \"BinaryExpression\" && left.operator === \"|>\" && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"hack\";\n\n      if (leftIsHackPipeExpression) {\n        throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, operator);\n      }\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              const bodyExpr = this.parseHackPipeBody(op, prec);\n              this.checkHackPipeBodyEarlyErrors(startPos);\n              return bodyExpr;\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              const childExpr = this.parseHackPipeBody(op, prec);\n              return this.parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseHackPipeBody(op, prec) {\n    const bodyIsInGeneratorContext = this.prodParam.hasYield;\n    const bodyIsYieldExpression = bodyIsInGeneratorContext && this.isContextual(\"yield\");\n\n    if (bodyIsYieldExpression) {\n      throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, this.state.value);\n    } else {\n      return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, ErrorMessages.AwaitNotInAsyncContext);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types$1.bracketL) || this.eat(types$1.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types$1.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    setInnerComments(node, call.innerComments);\n    setInnerComments(node, call.callee.trailingComments);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n            return this.parseModuleExpression();\n          }\n\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n\n      case types$1.slash:\n      case types$1.slashAssign:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case types$1.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case types$1.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case types$1._null:\n        return this.parseNullLiteral();\n\n      case types$1._true:\n        return this.parseBooleanLiteral(true);\n\n      case types$1._false:\n        return this.parseBooleanLiteral(false);\n\n      case types$1.parenL:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          const {\n            value,\n            start\n          } = this.state;\n          node = this.parsePrivateName();\n\n          if (this.match(types$1._in)) {\n            this.classScope.usePrivateName(value, start);\n          } else {\n            this.raise(start, ErrorMessages.PrivateInExpectedIn, value);\n          }\n\n          return node;\n        }\n\n      case types$1.moduloAssign:\n        if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"hack\" && this.getPluginOption(\"pipelineOperator\", \"topicToken\") === \"%\") {\n          this.state.value = \"%\";\n          this.state.type = types$1.modulo;\n          this.state.pos--;\n          this.state.end--;\n          this.state.endLoc.column--;\n        } else {\n          throw this.unexpected();\n        }\n\n      case types$1.modulo:\n      case types$1.hash:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n          if (pipeProposal) {\n            node = this.startNode();\n            const start = this.state.start;\n            const tokenType = this.state.type;\n            this.next();\n            return this.finishTopicReference(node, start, pipeProposal, tokenType);\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n              this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n            }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  finishTopicReference(node, start, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, start, tokenType)) {\n      let nodeType;\n\n      if (pipeProposal === \"smart\") {\n        nodeType = \"PipelinePrimaryTopicReference\";\n      } else {\n        nodeType = \"TopicReference\";\n      }\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        if (pipeProposal === \"smart\") {\n          this.raise(start, ErrorMessages.PrimaryTopicNotAllowed);\n        } else {\n          this.raise(start, ErrorMessages.PipeTopicUnbound);\n        }\n      }\n\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(start, ErrorMessages.PipeTopicUnconfiguredToken, tokenType.label);\n    }\n  }\n\n  testTopicReferenceConfiguration(pipeProposal, start, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          const pluginTopicToken = this.getPluginOption(\"pipelineOperator\", \"topicToken\");\n          return tokenType.label === pluginTopicToken;\n        }\n\n      case \"smart\":\n        return tokenType === types$1.hash;\n\n      default:\n        throw this.raise(start, ErrorMessages.PipeTopicRequiresHackPipes);\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      val.end = innerEndPos;\n      val.loc.end = innerEndLoc;\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(types$1.star);\n\n      switch (this.state.type) {\n        case types$1.semi:\n        case types$1.eof:\n        case types$1.braceR:\n        case types$1.parenR:\n        case types$1.bracketR:\n        case types$1.braceBarR:\n        case types$1.colon:\n        case types$1.comma:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  checkHackPipeBodyEarlyErrors(startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, types$1.arrow.label);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipeTopicUnused);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n\n    if (this.isSimpleReference(childExpr)) {\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      this.checkSmartPipeTopicBodyEarlyErrors(startPos);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  checkSmartPipeTopicBodyEarlyErrors(startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n    }\n  }\n\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSmartMixTopicForbiddingContext(callback) {\n    const proposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (proposal === \"smart\") {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const isContextual = this.match(types$1.name) && !this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(types$1.star) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.exportedIdentifiers.add(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      const isString = this.match(types$1.string);\n      const local = this.parseModuleExportName();\n      node.local = local;\n\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n      } else if (isString) {\n        node.exported = cloneStringLiteral(local);\n      } else {\n        node.exported = cloneIdentifier(local);\n      }\n\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const importedIsString = this.match(types$1.string);\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = cloneIdentifier(imported);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = require(\"@babel/types\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = require(\"@babel/types\");\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = require(\"globals\");\n\nvar _transformClass = require(\"./transformClass\");\n\nconst getBuiltinClasses = category => Object.keys(_globals[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = require(\"@babel/types\");\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}"],"sourceRoot":""}