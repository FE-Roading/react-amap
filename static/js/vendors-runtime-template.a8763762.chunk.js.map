{"version":3,"sources":["../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js","../node_modules/@babel/template/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js"],"names":["Object","defineProperty","exports","value","program","expression","statement","statements","smart","t","obj","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","WeakMap","makeStatementFormatter","fn","code","str","validate","unwrap","ast","body","slice","length","Error","start","stmt","assertExpressionStatement","createTemplateBuilder","formatter","defaultOpts","templateFnCache","templateAstCache","cachedOpts","_options","assign","tpl","args","extendedTrace","_string","merge","Array","isArray","builder","_literal","NO_PLACEHOLDER","_interopRequireDefault","placeholderPattern","rootStack","error","stack","split","join","arg","err","opts","metadata","replacements","normalizeReplacements","_parse","_populate","shouldHighlight","getChalk","options","chalk","defs","getDefs","highlightTokens","_helperValidatorIdentifier","jsTokens","Chalk","sometimesKeywords","Set","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","number","magenta","string","green","regex","comment","grey","invalid","white","bgRed","bold","tokenize","NEWLINE","BRACKET","JSX_TAG","getTokenType","token","offset","text","type","isKeyword","isStrictReservedWord","test","substr","toLowerCase","highlighted","colorize","map","supportsColor","forceColor","constructor","enabled","level","match","exec","matchToToken","index","names","nameSet","prefix","result","buildTemplateCode","parser","placeholderWhitelist","concat","from","preserveComments","syntacticPlaceholders","placeholders","some","placeholder","isDuplicate","name","buildLiteralData","defaultReplacements","forEach","replacement","i","keys","push","formatters","_builder","_default","bind","undefined","path","file","builtinClasses","isLoose","classState","parent","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","instancePropBody","instancePropRefs","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","hasInstanceDescriptors","hasStaticDescriptors","instanceMutatorMap","staticMutatorMap","setState","newState","findThisesVisitor","_core","traverse","visitors","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","params","template","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","replace","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","instanceProps","staticProps","defineMap","toClassObject","toComputedObjectFromClass","nullLiteral","lastNonNullIndex","isNullLiteral","expressionStatement","bareSuperNode","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","static","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","enumerable","mutatorMap","booleanLiteral","pushToMap","method","hasOwnBinding","rename","directives","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","toExpression","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","beforeExpr","startsExpr","TokenType","label","conf","this","rightAssociative","isAssign","postfix","binop","updateContext","keywords","Map","createKeyword","createBinop","num","bigint","decimal","regexp","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","end","filename","identifierName","last","CommentsParser","loc","state","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","properties","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","lineStart","lastIndex","getLineInfo","errorTemplate","raiseWithData","getLocationForPosition","message","_","errorRecovery","errors","_raise","data","errorContext","SyntaxError","isLookahead","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","String","fromCharCode","isIdentifierChar","reservedWords","keywords$1","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictBindOnlyReservedWord","isStrictBindReservedWord","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","createScope","bindingType","currentScope","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","treatFunctionsAsVarInScope","currentVarScope","currentThisScope","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","e","estreeParseLiteral","bigInt","BigInt","parseLiteral","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","convertPrivateNameToPrivateIdentifier","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","propertyNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","count","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","tryParse","failState","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","callParseClassMember","inAbstractClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","readToken_lt_gt","baseCount","firstParam","oldIsDeclareContext","oldInAbstractClass","hasBody","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","curr","clear","skipSpace","getTokenFromCode","codePointAt","block","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","escStart","identifierCheck","esc","readWord1","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","range","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","Parser","getOptions","initializeScopes","pluginMap","pluginsMap","enterInitialScopes","parseTopLevel","parseProgram","interpreter","parseInterpreterDirective","parseBlockBody","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","parseDecorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","parseVar","declarations","parseForIn","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","parseBindingAtom","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","hadConstructor","parseClassMember","pushClassMethod","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","elem","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","parseAwait","checkExponentialAfterUnary","parseModuleExpression","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","gutter","marker","red","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlightCode","maybeHighlight","chalkFn","lines","hasColumns","numberMaxWidth","highlightedLines","frame","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","reduce","acc","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","placeholderName","reverse","stringLiteral","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","assertVersion","loose","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression"],"mappings":"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","file":"static/js/vendors-runtime-template.a8763762.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nconst jsTokens = require(\"js-tokens\");\n\nconst Chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokens.default.exec(text)) {\n      const token = jsTokens.matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!Chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new Chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : Chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperReplaceSupers = _interopRequireWildcard(require(\"@babel/helper-replace-supers\"));\n\nvar _helperOptimiseCallExpression = _interopRequireDefault(require(\"@babel/helper-optimise-call-expression\"));\n\nvar defineMap = _interopRequireWildcard(require(\"@babel/helper-define-map\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _inlineCreateSuperHelpers = _interopRequireDefault(require(\"./inline-createSuper-helpers\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    instancePropBody: [],\n    instancePropRefs: {},\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    hasInstanceDescriptors: false,\n    hasStaticDescriptors: false,\n    instanceMutatorMap: {},\n    staticMutatorMap: {}\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function pushToMap(node, enumerable, kind = \"value\", scope) {\n    let mutatorMap;\n\n    if (node.static) {\n      setState({\n        hasStaticDescriptors: true\n      });\n      mutatorMap = classState.staticMutatorMap;\n    } else {\n      setState({\n        hasInstanceDescriptors: true\n      });\n      mutatorMap = classState.instanceMutatorMap;\n    }\n\n    const map = defineMap.push(mutatorMap, node, kind, classState.file, scope);\n\n    if (enumerable) {\n      map.enumerable = _core.types.booleanLiteral(true);\n    }\n\n    return map;\n  }\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          isLoose: classState.isLoose,\n          file: classState.file\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function clearDescriptors() {\n    setState({\n      hasInstanceDescriptors: false,\n      hasStaticDescriptors: false,\n      instanceMutatorMap: {},\n      staticMutatorMap: {}\n    });\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    let instanceProps;\n    let staticProps;\n\n    if (classState.hasInstanceDescriptors) {\n      instanceProps = defineMap.toClassObject(classState.instanceMutatorMap);\n    }\n\n    if (classState.hasStaticDescriptors) {\n      staticProps = defineMap.toClassObject(classState.staticMutatorMap);\n    }\n\n    if (instanceProps || staticProps) {\n      if (instanceProps) {\n        instanceProps = defineMap.toComputedObjectFromClass(instanceProps);\n      }\n\n      if (staticProps) {\n        staticProps = defineMap.toComputedObjectFromClass(staticProps);\n      }\n\n      let args = [_core.types.cloneNode(classState.classRef), _core.types.nullLiteral(), _core.types.nullLiteral()];\n      if (instanceProps) args[1] = instanceProps;\n      if (staticProps) args[2] = staticProps;\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n\n    clearDescriptors();\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (classState.isLoose) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    pushToMap(node, false, null, scope);\n  }\n\n  function processMethod(node, scope) {\n    if (classState.isLoose && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    if (path.scope.hasOwnBinding(classState.classRef.name)) {\n      path.scope.rename(classState.classRef.name);\n    }\n\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!classState.isLoose) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!classState.isLoose) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, errorTemplate, ...params) {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseOverwrite(pos, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = [];\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => {\n  var _temp;\n\n  return _temp = class extends superClass {\n    constructor(...args) {\n      super(...args);\n      this.flowPragma = undefined;\n    }\n\n    getScopeHandler() {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes() {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums() {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type, val) {\n      if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment) {\n      if (this.flowPragma === undefined) {\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n        if (!matches) ; else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || types.colon);\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate() {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(types.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n\n      if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n\n      if (this.eat(types.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(types.colon);\n      let type = null;\n      let predicate = null;\n\n      if (this.match(types.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n\n        if (this.match(types.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node) {\n      this.next();\n      this.flowParseInterfaceish(node, true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(node) {\n      this.next();\n      const id = node.id = this.parseIdentifier();\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(types.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(types.parenR);\n      [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n      this.resetEndLocation(id);\n      this.semicolon();\n      this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(node, insideModule) {\n      if (this.match(types._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(types._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(types._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(types.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(types._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(node) {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(true);\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node) {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(types.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = node.body = this.startNode();\n      const body = bodyNode.body = [];\n      this.expect(types.braceL);\n\n      while (!this.match(types.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(types._import)) {\n          this.next();\n\n          if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n            this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n          }\n\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n      this.expect(types.braceR);\n      this.finishNode(bodyNode, \"BlockStatement\");\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n          }\n\n          if (kind === \"ES\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(node, insideModule) {\n      this.expect(types._export);\n\n      if (this.eat(types._default)) {\n        if (this.match(types._function) || this.match(types._class)) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n\n        node.default = true;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n          throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n        }\n\n        if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(node) {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(node) {\n      this.next();\n      this.flowParseTypeAlias(node);\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(node) {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(node) {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    flowParseInterfaceish(node, isClass = false) {\n      node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n      this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false\n      });\n    }\n\n    flowParseInterfaceExtends() {\n      const node = this.startNode();\n      node.id = this.flowParseQualifiedTypeIdentifier();\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node) {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word, startLoc, declaration) {\n      if (!reservedTypes.has(word)) return;\n      this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n    }\n\n    flowParseRestrictedIdentifier(liberal, declaration) {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    flowParseTypeAlias(node) {\n      node.id = this.flowParseRestrictedIdentifier(false, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(types.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(node, declare) {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(true, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.supertype = null;\n\n      if (this.match(types.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(types.colon);\n      }\n\n      node.impltype = null;\n\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(types.eq);\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    flowParseTypeParameter(requireDefault = false) {\n      const nodeStart = this.state.start;\n      const node = this.startNode();\n      const variance = this.flowParseVariance();\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(types.eq)) {\n        this.eat(types.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration() {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n      this.state.inType = true;\n\n      if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      } while (!this.isRelational(\">\"));\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType() {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n      node.extends = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false\n      });\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey() {\n      return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(node, isStatic, variance) {\n      node.static = isStatic;\n\n      if (this.lookahead().type === types.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n\n      this.expect(types.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(node, isStatic) {\n      node.static = isStatic;\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(types.bracketR);\n      this.expect(types.bracketR);\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n      } else {\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n      }\n\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(node) {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(types.parenL);\n\n      if (this.match(types._this)) {\n        node.this = this.flowParseFunctionTypeParam(true);\n        node.this.name = null;\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n\n      this.expect(types.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(node, isStatic) {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact\n    }) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const nodeStart = this.startNode();\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n      let endDelim;\n      let exact;\n      let inexact = false;\n\n      if (allowExact && this.match(types.braceBarL)) {\n        this.expect(types.braceBarL);\n        endDelim = types.braceBarR;\n        exact = true;\n      } else {\n        this.expect(types.braceL);\n        endDelim = types.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart = null;\n        let inexactStart = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(types.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (this.eat(types.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n          } else {\n            nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n          }\n        } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n\n            if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n          this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n        }\n      }\n\n      this.expect(endDelim);\n\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n      this.state.inType = oldInType;\n      return out;\n    }\n\n    flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n      if (this.eat(types.ellipsis)) {\n        const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n        let optional = false;\n\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n\n          if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n            this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n          node.method = false;\n\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    flowCheckGetterSetterParams(property) {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n      }\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon() {\n      if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(types.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(startPos, startLoc, id) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType() {\n      const node = this.startNode();\n      this.expect(types._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType() {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(types.bracketL);\n\n      while (this.state.pos < this.length && !this.match(types.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(types.bracketR)) break;\n        this.expect(types.comma);\n      }\n\n      this.expect(types.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first) {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === types._this;\n\n      if (lh.type === types.colon || lh.type === types.question) {\n        if (isThis && !first) {\n          this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n        }\n\n        name = this.parseIdentifier(isThis);\n\n        if (this.eat(types.question)) {\n          optional = true;\n\n          if (isThis) {\n            this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n        }\n\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(type) {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params = []) {\n      let rest = null;\n      let _this = null;\n\n      if (this.match(types._this)) {\n        _this = this.flowParseFunctionTypeParam(true);\n        _this.name = null;\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n\n      return {\n        params,\n        rest,\n        _this\n      };\n    }\n\n    flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    flowParsePrimaryType() {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case types.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n        case types.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true\n          });\n\n        case types.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false\n          });\n\n        case types.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case types.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(types.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(types.parenR);\n            this.expect(types.arrow);\n            node.returnType = this.flowParseType();\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n\n          break;\n\n        case types.parenL:\n          this.next();\n\n          if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n            if (this.match(types.name) || this.match(types._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== types.question && token !== types.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n              this.expect(types.parenR);\n              return type;\n            } else {\n              this.eat(types.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case types.string:\n          return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n        case types._true:\n        case types._false:\n          node.value = this.match(types._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case types.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n\n            if (this.match(types.num)) {\n              return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            if (this.match(types.bigint)) {\n              return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n          }\n\n          throw this.unexpected();\n\n        case types.num:\n          return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n        case types.bigint:\n          return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n        case types._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case types._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case types._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case types.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType() {\n      const startPos = this.state.start,\n            startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n\n      while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(types.bracketL);\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n\n      return type;\n    }\n\n    flowParsePrefixType() {\n      const node = this.startNode();\n\n      if (this.eat(types.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens() {\n      const param = this.flowParsePrefixType();\n\n      if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n\n      return param;\n    }\n\n    flowParseIntersectionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation() {\n      if (this.state.type === types.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation() {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n      const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n      if (this.match(types.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n\n      return ident;\n    }\n\n    typeCastToParameter(node) {\n      node.expression.typeAnnotation = node.typeAnnotation;\n      this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n      return node.expression;\n    }\n\n    flowParseVariance() {\n      let variance = null;\n\n      if (this.match(types.plusMin)) {\n        variance = this.startNode();\n\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n\n      return variance;\n    }\n\n    parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(node, type, isMethod = false) {\n      if (this.match(types.colon)) {\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    parseStatement(context, topLevel) {\n      if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      const stmt = super.parseStatement(context, topLevel);\n\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n\n      return stmt;\n    }\n\n    parseExpressionStatement(node, expr) {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    shouldParseExportDeclaration() {\n      return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier() {\n      if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n      if (!this.match(types.question)) return expr;\n\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n        if (!result.node) {\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(types.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let {\n        consequent,\n        failed\n      } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(types.colon);\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent() {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(types.colon);\n      this.state.noArrowParamsConversionAt.pop();\n      return {\n        consequent,\n        failed\n      };\n    }\n\n    getArrowLikeExpressions(node, disallowInvalid) {\n      const stack = [node];\n      const arrows = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n    }\n\n    finishArrowValidation(node) {\n      var _node$extra;\n\n      this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt(node, parse) {\n      let result;\n\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(node, startPos, startLoc) {\n      node = super.parseParenItem(node, startPos, startLoc);\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(types.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node) {\n      if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node) {\n      const decl = super.parseExport(node);\n\n      if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n\n      return decl;\n    }\n\n    parseExportDeclaration(node) {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node) {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node) {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n\n      return hasNamespace;\n    }\n\n    parseClassId(node, isStatement, optionalId) {\n      super.parseClassId(node, isStatement, optionalId);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(classBody, member, state) {\n      const pos = this.state.start;\n\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n            this.raise(pos, FlowErrors.DeclareClassElement);\n          } else if (member.value) {\n          this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n        }\n      }\n    }\n\n    getTokenFromCode(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 123 && next === 124) {\n        return this.finishOp(types.braceBarL, 2);\n      } else if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else if (this.state.inType && code === 63) {\n        return this.finishOp(types.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node, isBinding) {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\":\n          {\n            const last = node.properties.length - 1;\n            return node.properties.every((prop, i) => {\n              return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n            });\n          }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node, isLHS = false) {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableList(exprList, trailingCommaPos, isLHS) {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n\n        if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    toReferencedList(exprList, isParenthesizedExpr) {\n      for (let i = 0; i < exprList.length; i++) {\n        var _expr$extra;\n\n        const expr = exprList[i];\n\n        if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n      const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(expr, ...args) {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    parseClassProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassPrivateProperty(node);\n    }\n\n    isClassMethod() {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty() {\n      return this.match(types.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method) {\n      return !this.match(types.colon) && super.isNonstaticConstructor(method);\n    }\n\n    isThisParam(param) {\n      return param.type === \"Identifier\" && param.name === \"this\";\n    }\n\n    pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n        const params = method.value.params;\n\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node) {\n      super.parseClassSuper(node);\n\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented = node.implements = [];\n\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(true);\n\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(types.comma));\n      }\n    }\n\n    checkGetterSetterParams(method) {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n\n      if (params.length > 0) {\n        const param = params[0];\n\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n        }\n      }\n    }\n\n    parsePropertyName(node, isPrivateNameAllowed) {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      node.variance = variance;\n      return key;\n    }\n\n    parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      if (prop.variance) {\n        this.unexpected(prop.variance.start);\n      }\n\n      delete prop.variance;\n      let typeParameters;\n\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param) {\n      if (this.eat(types.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n\n        param.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n      }\n\n      if (this.match(types.eq) && this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamNoDefault);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(startPos, startLoc, left) {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node) {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    maybeParseDefaultImportSpecifier(node) {\n      node.importKind = \"value\";\n      let kind = null;\n\n      if (this.match(types._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n\n      if (kind) {\n        const lh = this.lookahead();\n\n        if (kind === \"type\" && lh.type === types.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    parseImportSpecifier(node) {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n      let specifierTypeKind = null;\n\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n\n        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(specifier.local.name, specifier.local.start, true);\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseBindingAtom() {\n      switch (this.state.type) {\n        case types._this:\n          return this.parseIdentifier(true);\n\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseFunctionParams(node, allowModifiers) {\n      const kind = node.kind;\n\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    parseVarId(decl, kind) {\n      super.parseVarId(decl, kind);\n\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id);\n      }\n    }\n\n    parseAsyncArrowFromCallExpression(node, call) {\n      if (this.match(types.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    shouldParseAsyncArrow() {\n      return this.match(types.colon) || super.shouldParseAsyncArrow();\n    }\n\n    parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _jsx;\n\n      let state = null;\n      let jsx;\n\n      if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n        state = this.state.clone();\n        jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n        if (!jsx.error) return jsx.node;\n        const {\n          context\n        } = this.state;\n\n        if (context[context.length - 1] === types$1.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === types$1.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n        var _jsx2, _jsx3;\n\n        state = state || this.state.clone();\n        let typeParameters;\n        const arrow = this.tryParse(abort => {\n          var _arrowExpression$extr;\n\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n            const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n            this.resetStartLocationFromNode(result, typeParameters);\n            return result;\n          });\n\n          if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n            abort();\n          }\n\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n          return arrowExpression;\n        }, state);\n        let arrowExpression = null;\n\n        if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n          if (!arrow.error && !arrow.aborted) {\n            if (arrow.node.async) {\n              this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        if ((_jsx2 = jsx) != null && _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n    }\n\n    parseArrow(node) {\n      if (this.match(types.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          const typeNode = this.startNode();\n          [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          return typeNode;\n        });\n        if (result.thrown) return null;\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow() {\n      return this.match(types.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(node, params) {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(node, allowDuplicates, isArrowFunction) {\n      if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        return;\n      }\n\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow) {\n      return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n    }\n\n    parseSubscripts(base, startPos, startLoc, noCalls) {\n      if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n        const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n      if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, true);\n      } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(types.parenL);\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(node, subscriptState.optionalChainMember);\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n    }\n\n    parseNewArguments(node) {\n      let targs = null;\n\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n      }\n\n      node.typeArguments = targs;\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(node, undefined, true);\n    }\n\n    readToken_mult_modulo(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 42 && next === 47 && this.state.hasFlowComment) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 124 && next === 125) {\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file, program) {\n      const fileNode = super.parseTopLevel(file, program);\n\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n\n      return fileNode;\n    }\n\n    skipBlockComment() {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n        }\n\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment() {\n      const {\n        pos\n      } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n\n      while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === 58 && ch3 === 58) {\n        return shiftToFirstNonWhiteSpace + 2;\n      }\n\n      if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n        return shiftToFirstNonWhiteSpace + 12;\n      }\n\n      if (ch2 === 58 && ch3 !== 58) {\n        return shiftToFirstNonWhiteSpace;\n      }\n\n      return false;\n    }\n\n    hasFlowCommentCompletion() {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n      }\n    }\n\n    flowEnumErrorBooleanMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n    }\n\n    flowEnumErrorInvalidMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n    }\n\n    flowEnumErrorDuplicateMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(pos, {\n      enumName,\n      suppliedType\n    }) {\n      return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n    }\n\n    flowEnumErrorInvalidMemberInitializer(pos, {\n      enumName,\n      explicitType,\n      memberName\n    }) {\n      let message = null;\n\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n\n        default:\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n    }\n\n    flowEnumMemberInit() {\n      const startPos = this.state.start;\n\n      const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n      switch (this.state.type) {\n        case types.num:\n          {\n            const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"number\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types.string:\n          {\n            const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"string\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types._true:\n        case types._false:\n          {\n            const literal = this.parseBooleanLiteral();\n\n            if (endOfInit()) {\n              return {\n                type: \"boolean\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        default:\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n      }\n    }\n\n    flowEnumMemberRaw() {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n        type: \"none\",\n        pos\n      };\n      return {\n        id,\n        init\n      };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n      const {\n        explicitType\n      } = context;\n\n      if (explicitType === null) {\n        return;\n      }\n\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType\n    }) {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: []\n      };\n      let hasUnknownMembers = false;\n\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n\n        const memberNode = this.startNode();\n        const {\n          id,\n          init\n        } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n\n        if (memberName === \"\") {\n          continue;\n        }\n\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        seenNames.add(memberName);\n        const context = {\n          enumName,\n          explicitType,\n          memberName\n        };\n        memberNode.id = id;\n\n        switch (init.type) {\n          case \"boolean\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n              memberNode.init = init.value;\n              members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n              break;\n            }\n\n          case \"number\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n              memberNode.init = init.value;\n              members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n              break;\n            }\n\n          case \"string\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n              memberNode.init = init.value;\n              members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n              break;\n            }\n\n          case \"invalid\":\n            {\n              throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n            }\n\n          case \"none\":\n            {\n              switch (explicitType) {\n                case \"boolean\":\n                  this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                  break;\n\n                case \"number\":\n                  this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                  break;\n\n                default:\n                  members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n              }\n            }\n        }\n\n        if (!this.match(types.braceR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      return {\n        members,\n        hasUnknownMembers\n      };\n    }\n\n    flowEnumStringMembers(initializedMembers, defaultedMembers, {\n      enumName\n    }) {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName\n    }) {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(types.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null\n          });\n        }\n\n        const {\n          value\n        } = this.state;\n        this.next();\n\n        if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value\n          });\n        }\n\n        return value;\n      }\n\n      return null;\n    }\n\n    flowEnumBody(node, {\n      enumName,\n      nameLoc\n    }) {\n      const explicitType = this.flowEnumParseExplicitType({\n        enumName\n      });\n      this.expect(types.braceL);\n      const {\n        members,\n        hasUnknownMembers\n      } = this.flowEnumMembers({\n        enumName,\n        explicitType\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n            enumName\n          });\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n\n        default:\n          {\n            const empty = () => {\n              node.members = [];\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            };\n\n            node.explicitType = false;\n            const boolsLen = members.booleanMembers.length;\n            const numsLen = members.numberMembers.length;\n            const strsLen = members.stringMembers.length;\n            const defaultedLen = members.defaultedMembers.length;\n\n            if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n              return empty();\n            } else if (!boolsLen && !numsLen) {\n              node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                enumName\n              });\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n              for (const member of members.defaultedMembers) {\n                this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.booleanMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumBooleanBody\");\n            } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n              for (const member of members.defaultedMembers) {\n                this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.numberMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumNumberBody\");\n            } else {\n              this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                enumName\n              });\n              return empty();\n            }\n          }\n      }\n    }\n\n    flowParseEnumDeclaration(node) {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType) {\n      if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    isLookaheadToken_lt() {\n      const next = this.nextTokenStart();\n\n      if (this.input.charCodeAt(next) === 60) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return afterNext !== 60 && afterNext !== 61;\n      }\n\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n\n  }, _temp;\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = Object.freeze({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma)) {\n      this.semicolon();\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInDeclareContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types._class) || this.match(types.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\") && ahead.type !== types.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  parseClassMember(classBody, member, state) {\n    this.tsParseModifiers(member, [\"declare\", \"private\", \"public\", \"protected\"]);\n\n    const callParseClassMember = () => {\n      super.parseClassMember(classBody, member, state);\n    };\n\n    if (member.declare) {\n      this.tsInDeclareContext(callParseClassMember);\n    } else {\n      callParseClassMember();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (isStatic) {\n        this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isDeclareContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || expr.extra && expr.extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isDeclareContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInDeclareContext(cb) {\n    const oldIsDeclareContext = this.state.isDeclareContext;\n    this.state.isDeclareContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isDeclareContext = oldIsDeclareContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, \"A class name is required\");\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext != null && curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, message) {\n    this.errors.set(pos, message);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, message);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, message);\n  }\n\n  recordParenthesizedIdentifierError(pos, message) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, message);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((message, pos) => {\n      this.raise(pos, message);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, message) {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  unexpected(pos, messageOrType = \"Unexpected token\") {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo();\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(this.getPrivateNameSV(node), node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.getPrivateNameSV(node));\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo() {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(id.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = ErrorMessages.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(node.start, {\n        code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n      }, ErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n\n    if (this.match(types._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init, true);\n      const description = this.isContextual(\"of\") ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(constructorAllowsSuper, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      constructorAllowsSuper,\n      hadConstructor: false\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    if (!node.typeAnnotation || this.match(types.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = _interopRequireDefault(require(\"globals\"));\n\nvar _transformClass = _interopRequireDefault(require(\"./transformClass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getBuiltinClasses = category => Object.keys(_globals.default[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;"],"sourceRoot":""}