{"version":3,"sources":["../node_modules/@babel/template/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js"],"names":["Object","defineProperty","exports","value","default","program","expression","statements","statement","smart","obj","formatters","__esModule","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_builder","WeakMap","_default","assign","bind","undefined","ast","path","file","builtinClasses","isLoose","assumptions","classState","parent","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","body","superThises","pushedConstructor","pushedInherits","protoAlias","methods","instance","hasComputed","list","map","Map","static","setState","newState","findThisesVisitor","_core","traverse","visitors","merge","_helperReplaceSupers","environmentVisitor","ThisExpression","push","buildBody","paths","equals","params","constructor","template","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","constantSuper","refToPreserve","replace","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Set","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","concat","bodyPaths","length","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","objectExpression","objectProperty","properties","args","arrayExpression","nullLiteral","lastNonNullIndex","i","isNullLiteral","slice","expressionStatement","bareSuperNode","superIsCallableConstructor","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","name","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","setClassMethods","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","descriptor","descKey","isNumericLiteral","isBigIntLiteral","stringLiteral","String","fn","toExpression","method","directives","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","arg","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","noClassCalls","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","beforeExpr","startsExpr","prefix","TokenType","label","conf","this","keyword","rightAssociative","isAssign","postfix","binop","updateContext","keywords$1","createKeyword","options","token","createBinop","types$1","num","bigint","decimal","regexp","string","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","last","stack","CommentsParser","comment","loc","state","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","type","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","keys","forEach","reasonCode","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","offset","match","lineStart","lastIndex","exec","index","getLineInfo","raiseWithData","getLocationForPosition","message","_","errorRecovery","errors","error","_raise","data","errorTemplate","errorContext","err","isLookahead","TokContext","isExpr","preserveSpace","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","fromCharCode","isIdentifierChar","reservedWords","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScope","currentThisScope","treatFunctionsAsVarInScope","currentScope","createScope","bindingType","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","State","strict","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inPipeline","inType","noAnonFunctionType","inPropertyName","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","containsEsc","strictErrors","exportedIdentifiers","tokensLength","strictMode","sourceType","startLine","curPosition","skipArrays","val","Array","isArray","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","PlaceHolderErrors","ClassNameIsRequired","some","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","regex","e","estreeParseLiteral","bigInt","BigInt","parseLiteral","stmt","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","propertyNode","isPattern","isAccessor","shorthand","startPos","refExpressionErrors","isLHS","toAssignable","optional","_node$arguments$","attributes","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","quote","entity","str","count","substr","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","lookaheadState","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","matches","tok","oldInType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","seenOptionalIndexedAccess","canInsertSemicolon","elementType","objectType","indexType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","result","tryParse","failState","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","invalid","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","finishOp","current","isIteratorStart","readIterator","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","isLineTerminator","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","override","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","readToken_lt_gt","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","placeholders","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","ranges","tokens","createParenthesizedExpressions","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","createLookaheadState","curr","cp","trail","clear","skipSpace","readTmplToken","getTokenFromCode","codePointAtPos","block","text","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readWord1","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","firstCode","escStart","identifierCheck","esc","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","from","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","nextCh","allowAsi","messageOrType","missingPlugin","names","join","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","parser","range","unwrapParenthesizedExpression","ExpressionParser","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","parseModuleExpression","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseFunction","parseAsyncArrowUnaryFunction","parseDo","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","codePointAt","expectOnePlugin","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","elem","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseDecorator","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","initializeScopes","enterInitialScopes","parseProgram","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","parseBindingAtom","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","Parser","opts","getOptions","pluginMap","pluginsMap","parseTopLevel","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","matched","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","pushClassMethod","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","getPrivateNameSV","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","importedIsString","getParser","decoratorsBeforeExport","p","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","isDuplicate","metadata","placeholderName","reverse","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","assumption","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","makeStatementFormatter","unwrap","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","_interopRequireDefault","rootStack","_parse","_populate","highlightTokens","_helperValidatorIdentifier","jsTokens","Chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","toLowerCase","colorize","supportsColor","enabled","level","matchToToken","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements"],"mappings":"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","file":"static/js/vendors-runtime-template.77cf12b6.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _inlineCreateSuperHelpers = require(\"./inline-createSuper-helpers\");\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction makeErrorTemplates(messages, code) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes$1.parenR.updateContext = types$1.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes$1.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types$1.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types$1._function && prevType !== types$1._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n};\n\ntypes$1.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.dollarBraceL.updateContext = function () {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n  this.state.context.push(statementParens ? types.parenStatement : types.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.incDec.updateContext = function () {};\n\ntypes$1._function.updateContext = types$1._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types$1.semi && prevType !== types$1._else && !(prevType === types$1._return && this.hasPrecedingLineBreak()) && !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat)) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes$1.backQuote.updateContext = function () {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes$1.braceHashL.updateContext = function () {\n  this.state.context.push(types.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = [];\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError);\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n          node = this.parseExport(node);\n\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n          return node;\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (refNeedsArrowPos) {\n      const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n      if (!result.node) {\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n      case \"TypeCastExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.OptionalBindingPattern);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentIsString = this.match(types$1.string);\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = as_ident.__clone();\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n      specifier.imported = this.parseIdentifier(true);\n      specifier.importKind = specifierTypeKind;\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = specifier.imported.__clone();\n      }\n    } else {\n      if (firstIdentIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n      }\n\n      isBinding = true;\n      specifier.imported = firstIdent;\n      specifier.importKind = null;\n      specifier.local = specifier.imported.__clone();\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n\n        if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n          abort();\n        }\n\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral(this.match(types$1._true));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  updateContext(prevType) {\n    if (this.match(types$1.name) && this.state.value === \"of\" && prevType === types$1.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n      this.state.exprAllowed = false;\n    } else {\n      super.updateContext(prevType);\n    }\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError);\ntypes.j_oTag = new TokContext(\"<tag\", false);\ntypes.j_cTag = new TokContext(\"</tag\", false);\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = function () {\n  this.state.context.push(types.j_expr);\n  this.state.context.push(types.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes$1.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  createLookaheadState(state) {\n    const lookaheadState = super.createLookaheadState(state);\n    lookaheadState.inPropertyName = state.inPropertyName;\n    return lookaheadState;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types$1.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types.j_oTag) {\n        this.state.context.push(types.braceExpression);\n      } else if (curContext === types.j_expr) {\n        this.state.context.push(types.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types$1.slash) && prevType === types$1.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError);\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  parseClassMember(classBody, member, state) {\n    const invalidModifersForStaticBlocks = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\"];\n    this.tsParseModifiers(member, invalidModifersForStaticBlocks.concat([\"static\"]));\n\n    const callParseClassMemberWithIsStatic = () => {\n      const isStatic = !!member.static;\n\n      if (isStatic && this.eat(types$1.braceL)) {\n        if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      exprAllowed: state.exprAllowed,\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    if (curContext === types.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types$1.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types$1.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types$1.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types$1.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.codePointAtPos(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types.functionExpression || parent === types.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types$1.colon && (parent === types.braceStatement || parent === types.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types$1._return || prevType === types$1.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow) {\n      return true;\n    }\n\n    if (prevType === types$1.braceL) {\n      return parent === types.braceStatement;\n    }\n\n    if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name) {\n      return false;\n    }\n\n    if (prevType === types$1.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types$1.bracketL) || this.eat(types$1.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types$1.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types$1.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(id);\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              return this.parseDo(true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(false);\n        }\n\n      case types$1.regexp:\n        {\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case types$1.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case types$1.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case types$1._null:\n        return this.parseNullLiteral();\n\n      case types$1._true:\n        return this.parseBooleanLiteral(true);\n\n      case types$1._false:\n        return this.parseBooleanLiteral(false);\n\n      case types$1.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          const start = this.state.start;\n          const value = this.state.value;\n          node = this.parsePrivateName();\n\n          if (this.match(types$1._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(value, node.start);\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, value);\n          } else {\n            throw this.unexpected(start);\n          }\n\n          return node;\n        }\n\n      case types$1.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    const node = this.startNode();\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types$1._class || type === types$1._function) && (curContext === types.functionStatement || curContext === types.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types$1.semi) || !this.match(types$1.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types$1.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      const matched = keywordRelationalOperator.exec(this.input);\n\n      if (matched !== null) {\n        const endCh = this.codePointAtPos(next + matched[0].length);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types$1.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const importedIsString = this.match(types$1.string);\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = require(\"globals\");\n\nvar _transformClass = require(\"./transformClass\");\n\nconst getBuiltinClasses = category => Object.keys(_globals[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nconst jsTokens = require(\"js-tokens\");\n\nconst Chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokens.default.exec(text)) {\n      const token = jsTokens.matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!Chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new Chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : Chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}"],"sourceRoot":""}