{"version":3,"sources":["../node_modules/@babel/template/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js"],"names":["Object","defineProperty","exports","value","default","program","expression","statements","statement","smart","obj","formatters","__esModule","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_builder","WeakMap","_default","assign","bind","undefined","ast","path","file","builtinClasses","isLoose","classState","parent","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","instancePropBody","instancePropRefs","staticPropBody","body","superThises","pushedConstructor","pushedInherits","protoAlias","hasInstanceDescriptors","hasStaticDescriptors","instanceMutatorMap","staticMutatorMap","setState","newState","findThisesVisitor","_core","traverse","visitors","merge","_helperReplaceSupers","environmentVisitor","ThisExpression","push","buildBody","paths","equals","params","constructor","template","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","replace","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Set","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","concat","bodyPaths","length","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","instanceProps","staticProps","defineMap","toClassObject","toComputedObjectFromClass","args","nullLiteral","lastNonNullIndex","i","isNullLiteral","slice","expressionStatement","bareSuperNode","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","name","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","static","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","enumerable","mutatorMap","map","booleanLiteral","pushToMap","method","hasOwnBinding","rename","directives","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","arg","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","fn","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","toExpression","arrowFunctionExpression","classTransformer","_interopRequireDefault","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","beforeExpr","startsExpr","prefix","TokenType","label","conf","this","keyword","rightAssociative","isAssign","postfix","binop","updateContext","keywords","Map","createKeyword","options","token","createBinop","num","bigint","decimal","regexp","string","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","last","stack","CommentsParser","comment","loc","state","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","type","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","properties","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","DuplicateStaticBlock","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","offset","match","lineStart","lastIndex","exec","index","getLineInfo","errorTemplate","raiseWithData","data","getLocationForPosition","message","_","_raise","errorContext","err","SyntaxError","errorRecovery","isLookahead","errors","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","String","fromCharCode","isIdentifierChar","reservedWords","keywords$1","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_TS_AMBIENT","BIND_NONE","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SpreadVariance","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","createScope","bindingType","currentScope","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","treatFunctionsAsVarInScope","currentVarScope","currentThisScope","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","IndexSignatureHasDeclare","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","placeholder","some","Array","isArray","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","regex","e","estreeParseLiteral","bigInt","BigInt","parseLiteral","stmt","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","str","count","substr","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","declareName","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","forEach","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","lh","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","result","tryParse","error","failState","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","invalid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","superTypeParameters","implemented","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","_i","flowEnumErrorStringMemberInconsistentlyInitailized","_i2","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","_i3","_members$defaultedMem","_i4","_members$defaultedMem2","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","allowedModifiers","modifier","tsTryParse","tsNextTokenCanFollowModifier","modified","tsParseModifier","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminatorAndMatch","cls","abstract","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tokenType","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","accessibility","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","tsParseModifiers","callParseClassMember","methodOrProp","tsParseExpressionStatement","isDeclare","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","readToken_lt_gt","baseCount","firstParam","getObjectOrClassMethodParams","oldIsDeclareContext","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","placeholders","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","keys","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","UtilParser","op","nameStart","nameEnd","messageOrType","missingPlugin","names","n","join","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","checkKeywordEscapes","pushToken","old","curr","clear","skipSpace","getTokenFromCode","codePointAt","block","text","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","escStart","identifierCheck","esc","readWord1","update","ExpressionErrors","Node","parser","range","unwrapParenthesizedExpression","LValParser","_node$extra3","expressionScope","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedListDeep","parseBindingAtom","parseObjectLike","closeCharCode","allowEmpty","elts","first","parseRestBinding","checkCommaAfterRest","parseDecorator","parseAssignableListItem","_startLoc","_startPos","_left","checkClashes","disallowLetBinding","strictModeChanged","_expr$properties","isObjectMethod","_expr$elements","elem","processComment","locationNode","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","loopLabel","switchLabel","loneSurrogate","StatementParser","interpreter","parseInterpreterDirective","parseBlockBody","_Array$from","from","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","parseVar","declarations","parseForIn","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","handler","clause","parseCatchClauseParam","finalizer","_this$state$labels","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","classScope","hadConstructor","hadStaticBlock","parseClassMember","pushClassMethod","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","oldLabels","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","shouldParseExportDeclaration","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","_node$specifiers","exportedName","checkLocalExport","_node$declaration$dec","_i5","_node$properties","_i6","_node$elements","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","used","paramFlags","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","parseAwait","isDelete","hasPropertyAsPrivateName","parseUpdate","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","tag","quasi","_node$arguments","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","_node$params","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","redefined","accessor","_this$stack","Parser","opts","_Object$keys","getOptions","getScopeHandler","pluginMap","pluginsMap","parseTopLevel","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","isDuplicate","metadata","placeholderName","reverse","stringLiteral","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","assertVersion","loose","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","makeStatementFormatter","unwrap","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","_parse","_populate","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","cyan","capitalized","yellow","jsx_tag","punctuator","magenta","green","white","bgRed","JSX_TAG","BRACKET","getTokenType","matchToToken","toLowerCase","colorize","supportsColor","enabled","level","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements"],"mappings":"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","file":"static/js/vendors-runtime-template.63e8d255.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperReplaceSupers = _interopRequireWildcard(require(\"@babel/helper-replace-supers\"));\n\nvar _helperOptimiseCallExpression = _interopRequireDefault(require(\"@babel/helper-optimise-call-expression\"));\n\nvar defineMap = _interopRequireWildcard(require(\"@babel/helper-define-map\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _inlineCreateSuperHelpers = _interopRequireDefault(require(\"./inline-createSuper-helpers\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    instancePropBody: [],\n    instancePropRefs: {},\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    hasInstanceDescriptors: false,\n    hasStaticDescriptors: false,\n    instanceMutatorMap: {},\n    staticMutatorMap: {}\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function pushToMap(node, enumerable, kind = \"value\", scope) {\n    let mutatorMap;\n\n    if (node.static) {\n      setState({\n        hasStaticDescriptors: true\n      });\n      mutatorMap = classState.staticMutatorMap;\n    } else {\n      setState({\n        hasInstanceDescriptors: true\n      });\n      mutatorMap = classState.instanceMutatorMap;\n    }\n\n    const map = defineMap.push(mutatorMap, node, kind, classState.file, scope);\n\n    if (enumerable) {\n      map.enumerable = _core.types.booleanLiteral(true);\n    }\n\n    return map;\n  }\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          isLoose: classState.isLoose,\n          file: classState.file\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function clearDescriptors() {\n    setState({\n      hasInstanceDescriptors: false,\n      hasStaticDescriptors: false,\n      instanceMutatorMap: {},\n      staticMutatorMap: {}\n    });\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    let instanceProps;\n    let staticProps;\n\n    if (classState.hasInstanceDescriptors) {\n      instanceProps = defineMap.toClassObject(classState.instanceMutatorMap);\n    }\n\n    if (classState.hasStaticDescriptors) {\n      staticProps = defineMap.toClassObject(classState.staticMutatorMap);\n    }\n\n    if (instanceProps || staticProps) {\n      if (instanceProps) {\n        instanceProps = defineMap.toComputedObjectFromClass(instanceProps);\n      }\n\n      if (staticProps) {\n        staticProps = defineMap.toComputedObjectFromClass(staticProps);\n      }\n\n      let args = [_core.types.cloneNode(classState.classRef), _core.types.nullLiteral(), _core.types.nullLiteral()];\n      if (instanceProps) args[1] = instanceProps;\n      if (staticProps) args[2] = staticProps;\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n\n    clearDescriptors();\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (classState.isLoose) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    pushToMap(node, false, null, scope);\n  }\n\n  function processMethod(node, scope) {\n    if (classState.isLoose && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    if (path.scope.hasOwnBinding(classState.classRef.name)) {\n      path.scope.rename(classState.classRef.name);\n    }\n\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!classState.isLoose) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!classState.isLoose) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  DuplicateStaticBlock: \"Duplicate static block in the same class\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, errorTemplate, ...params) {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) == null ? void 0 : _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n    type = type === \"ClassMethod\" ? \"MethodDefinition\" : type;\n    return this.finishNode(node, type);\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b00000000,\n      SCOPE_PROGRAM = 0b00000001,\n      SCOPE_FUNCTION = 0b00000010,\n      SCOPE_ARROW = 0b00000100,\n      SCOPE_SIMPLE_CATCH = 0b00001000,\n      SCOPE_SUPER = 0b00010000,\n      SCOPE_DIRECT_SUPER = 0b00100000,\n      SCOPE_CLASS = 0b01000000,\n      SCOPE_TS_MODULE = 0b10000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b00000000001,\n      BIND_KIND_TYPE = 0b00000000010,\n      BIND_SCOPE_VAR = 0b00000000100,\n      BIND_SCOPE_LEXICAL = 0b00000001000,\n      BIND_SCOPE_FUNCTION = 0b00000010000,\n      BIND_FLAGS_NONE = 0b00001000000,\n      BIND_FLAGS_CLASS = 0b00010000000,\n      BIND_FLAGS_TS_ENUM = 0b00100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b01000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b10000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => {\n  var _temp;\n\n  return _temp = class extends superClass {\n    constructor(options, input) {\n      super(options, input);\n      this.flowPragma = void 0;\n      this.flowPragma = undefined;\n    }\n\n    shouldParseTypes() {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums() {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type, val) {\n      if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment) {\n      if (this.flowPragma === undefined) {\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n        if (!matches) ; else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || types.colon);\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate() {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(types.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n\n      if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n\n      if (this.eat(types.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(types.colon);\n      let type = null;\n      let predicate = null;\n\n      if (this.match(types.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n\n        if (this.match(types.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node) {\n      this.next();\n      this.flowParseInterfaceish(node, true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(node) {\n      this.next();\n      const id = node.id = this.parseIdentifier();\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(types.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      this.expect(types.parenR);\n      [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n      this.resetEndLocation(id);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(node, insideModule) {\n      if (this.match(types._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(types._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(types._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(types.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(types._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(node) {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(true);\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node) {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(types.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = node.body = this.startNode();\n      const body = bodyNode.body = [];\n      this.expect(types.braceL);\n\n      while (!this.match(types.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(types._import)) {\n          this.next();\n\n          if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n            this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n          }\n\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n      this.expect(types.braceR);\n      this.finishNode(bodyNode, \"BlockStatement\");\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n          }\n\n          if (kind === \"ES\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(node, insideModule) {\n      this.expect(types._export);\n\n      if (this.eat(types._default)) {\n        if (this.match(types._function) || this.match(types._class)) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n\n        node.default = true;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n          throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n        }\n\n        if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(node) {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(node) {\n      this.next();\n      this.flowParseTypeAlias(node);\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(node) {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(node) {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    flowParseInterfaceish(node, isClass = false) {\n      node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n      this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false\n      });\n    }\n\n    flowParseInterfaceExtends() {\n      const node = this.startNode();\n      node.id = this.flowParseQualifiedTypeIdentifier();\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node) {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word, startLoc, declaration) {\n      if (!reservedTypes.has(word)) return;\n      this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n    }\n\n    flowParseRestrictedIdentifier(liberal, declaration) {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    flowParseTypeAlias(node) {\n      node.id = this.flowParseRestrictedIdentifier(false, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(types.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(node, declare) {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(true, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.supertype = null;\n\n      if (this.match(types.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(types.colon);\n      }\n\n      node.impltype = null;\n\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(types.eq);\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    flowParseTypeParameter(requireDefault = false) {\n      const nodeStart = this.state.start;\n      const node = this.startNode();\n      const variance = this.flowParseVariance();\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(types.eq)) {\n        this.eat(types.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration() {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n      this.state.inType = true;\n\n      if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      } while (!this.isRelational(\">\"));\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType() {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n      node.extends = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false\n      });\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey() {\n      return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(node, isStatic, variance) {\n      node.static = isStatic;\n\n      if (this.lookahead().type === types.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n\n      this.expect(types.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(node, isStatic) {\n      node.static = isStatic;\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(types.bracketR);\n      this.expect(types.bracketR);\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n      } else {\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n      }\n\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(node) {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(types.parenL);\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam());\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam();\n      }\n\n      this.expect(types.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(node, isStatic) {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact\n    }) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const nodeStart = this.startNode();\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n      let endDelim;\n      let exact;\n      let inexact = false;\n\n      if (allowExact && this.match(types.braceBarL)) {\n        this.expect(types.braceBarL);\n        endDelim = types.braceBarR;\n        exact = true;\n      } else {\n        this.expect(types.braceL);\n        endDelim = types.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart = null;\n        let inexactStart = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(types.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (this.eat(types.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n          } else {\n            nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n          }\n        } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n\n            if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n          this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n        }\n      }\n\n      this.expect(endDelim);\n\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n      this.state.inType = oldInType;\n      return out;\n    }\n\n    flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n      if (this.eat(types.ellipsis)) {\n        const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n        let optional = false;\n\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n          node.method = false;\n\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    flowCheckGetterSetterParams(property) {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon() {\n      if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(types.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(startPos, startLoc, id) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType() {\n      const node = this.startNode();\n      this.expect(types._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType() {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(types.bracketL);\n\n      while (this.state.pos < this.length && !this.match(types.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(types.bracketR)) break;\n        this.expect(types.comma);\n      }\n\n      this.expect(types.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam() {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n\n      if (lh.type === types.colon || lh.type === types.question) {\n        name = this.parseIdentifier();\n\n        if (this.eat(types.question)) {\n          optional = true;\n        }\n\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(type) {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params = []) {\n      let rest = null;\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam());\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam();\n      }\n\n      return {\n        params,\n        rest\n      };\n    }\n\n    flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    flowParsePrimaryType() {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case types.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n        case types.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true\n          });\n\n        case types.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false\n          });\n\n        case types.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case types.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(types.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            this.expect(types.parenR);\n            this.expect(types.arrow);\n            node.returnType = this.flowParseType();\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n\n          break;\n\n        case types.parenL:\n          this.next();\n\n          if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n            if (this.match(types.name)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== types.question && token !== types.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n              this.expect(types.parenR);\n              return type;\n            } else {\n              this.eat(types.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case types.string:\n          return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n        case types._true:\n        case types._false:\n          node.value = this.match(types._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case types.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n\n            if (this.match(types.num)) {\n              return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            if (this.match(types.bigint)) {\n              return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n          }\n\n          throw this.unexpected();\n\n        case types.num:\n          return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n        case types.bigint:\n          return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n        case types._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case types._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case types._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case types.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType() {\n      const startPos = this.state.start,\n            startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n\n      while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(types.bracketL);\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n\n      return type;\n    }\n\n    flowParsePrefixType() {\n      const node = this.startNode();\n\n      if (this.eat(types.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens() {\n      const param = this.flowParsePrefixType();\n\n      if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n\n      return param;\n    }\n\n    flowParseIntersectionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation() {\n      if (this.state.type === types.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation() {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n      const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n      if (this.match(types.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n\n      return ident;\n    }\n\n    typeCastToParameter(node) {\n      node.expression.typeAnnotation = node.typeAnnotation;\n      this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n      return node.expression;\n    }\n\n    flowParseVariance() {\n      let variance = null;\n\n      if (this.match(types.plusMin)) {\n        variance = this.startNode();\n\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n\n      return variance;\n    }\n\n    parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(node, type, isMethod = false) {\n      if (this.match(types.colon)) {\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    parseStatement(context, topLevel) {\n      if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      const stmt = super.parseStatement(context, topLevel);\n\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n\n      return stmt;\n    }\n\n    parseExpressionStatement(node, expr) {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    shouldParseExportDeclaration() {\n      return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier() {\n      if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n      if (!this.match(types.question)) return expr;\n\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n        if (!result.node) {\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(types.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let {\n        consequent,\n        failed\n      } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(types.colon);\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent() {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(types.colon);\n      this.state.noArrowParamsConversionAt.pop();\n      return {\n        consequent,\n        failed\n      };\n    }\n\n    getArrowLikeExpressions(node, disallowInvalid) {\n      const stack = [node];\n      const arrows = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n    }\n\n    finishArrowValidation(node) {\n      var _node$extra;\n\n      this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt(node, parse) {\n      let result;\n\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(node, startPos, startLoc) {\n      node = super.parseParenItem(node, startPos, startLoc);\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(types.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node) {\n      if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node) {\n      const decl = super.parseExport(node);\n\n      if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n\n      return decl;\n    }\n\n    parseExportDeclaration(node) {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node) {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node) {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n\n      return hasNamespace;\n    }\n\n    parseClassId(node, isStatement, optionalId) {\n      super.parseClassId(node, isStatement, optionalId);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(classBody, member, state) {\n      const pos = this.state.start;\n\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n        }\n      }\n    }\n\n    getTokenFromCode(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 123 && next === 124) {\n        return this.finishOp(types.braceBarL, 2);\n      } else if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else if (this.state.inType && code === 63) {\n        return this.finishOp(types.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node, isBinding) {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\":\n          {\n            const last = node.properties.length - 1;\n            return node.properties.every((prop, i) => {\n              return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n            });\n          }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node, isLHS = false) {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableList(exprList, trailingCommaPos, isLHS) {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n\n        if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    toReferencedList(exprList, isParenthesizedExpr) {\n      for (let i = 0; i < exprList.length; i++) {\n        var _expr$extra;\n\n        const expr = exprList[i];\n\n        if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) == null ? void 0 : _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n      const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(expr, ...args) {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    parseClassProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassPrivateProperty(node);\n    }\n\n    isClassMethod() {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty() {\n      return this.match(types.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method) {\n      return !this.match(types.colon) && super.isNonstaticConstructor(method);\n    }\n\n    pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n    }\n\n    pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node) {\n      super.parseClassSuper(node);\n\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented = node.implements = [];\n\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(true);\n\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(types.comma));\n      }\n    }\n\n    parsePropertyName(node, isPrivateNameAllowed) {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      node.variance = variance;\n      return key;\n    }\n\n    parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      if (prop.variance) {\n        this.unexpected(prop.variance.start);\n      }\n\n      delete prop.variance;\n      let typeParameters;\n\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param) {\n      if (this.eat(types.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        param.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(startPos, startLoc, left) {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node) {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    maybeParseDefaultImportSpecifier(node) {\n      node.importKind = \"value\";\n      let kind = null;\n\n      if (this.match(types._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n\n      if (kind) {\n        const lh = this.lookahead();\n\n        if (kind === \"type\" && lh.type === types.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    parseImportSpecifier(node) {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n      let specifierTypeKind = null;\n\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n\n        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(specifier.local.name, specifier.local.start, true);\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseFunctionParams(node, allowModifiers) {\n      const kind = node.kind;\n\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    parseVarId(decl, kind) {\n      super.parseVarId(decl, kind);\n\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id);\n      }\n    }\n\n    parseAsyncArrowFromCallExpression(node, call) {\n      if (this.match(types.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    shouldParseAsyncArrow() {\n      return this.match(types.colon) || super.shouldParseAsyncArrow();\n    }\n\n    parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _jsx;\n\n      let state = null;\n      let jsx;\n\n      if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n        state = this.state.clone();\n        jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n        if (!jsx.error) return jsx.node;\n        const {\n          context\n        } = this.state;\n\n        if (context[context.length - 1] === types$1.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === types$1.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (((_jsx = jsx) == null ? void 0 : _jsx.error) || this.isRelational(\"<\")) {\n        var _jsx2, _jsx3;\n\n        state = state || this.state.clone();\n        let typeParameters;\n        const arrow = this.tryParse(abort => {\n          var _arrowExpression$extr;\n\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n            const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n            this.resetStartLocationFromNode(result, typeParameters);\n            return result;\n          });\n\n          if (arrowExpression.type !== \"ArrowFunctionExpression\" && ((_arrowExpression$extr = arrowExpression.extra) == null ? void 0 : _arrowExpression$extr.parenthesized)) {\n            abort();\n          }\n\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n          return arrowExpression;\n        }, state);\n        let arrowExpression = null;\n\n        if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n          if (!arrow.error && !arrow.aborted) {\n            if (arrow.node.async) {\n              this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n    }\n\n    parseArrow(node) {\n      if (this.match(types.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          const typeNode = this.startNode();\n          [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          return typeNode;\n        });\n        if (result.thrown) return null;\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow() {\n      return this.match(types.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(node, params) {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(node, allowDuplicates, isArrowFunction) {\n      if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        return;\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow) {\n      return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n    }\n\n    parseSubscripts(base, startPos, startLoc, noCalls) {\n      if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n        const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n      if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, true);\n      } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(types.parenL);\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(node, subscriptState.optionalChainMember);\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n    }\n\n    parseNewArguments(node) {\n      let targs = null;\n\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n      }\n\n      node.typeArguments = targs;\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(node, undefined, true);\n    }\n\n    readToken_mult_modulo(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 42 && next === 47 && this.state.hasFlowComment) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 124 && next === 125) {\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file, program) {\n      const fileNode = super.parseTopLevel(file, program);\n\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n\n      return fileNode;\n    }\n\n    skipBlockComment() {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n        }\n\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment() {\n      const {\n        pos\n      } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n\n      while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === 58 && ch3 === 58) {\n        return shiftToFirstNonWhiteSpace + 2;\n      }\n\n      if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n        return shiftToFirstNonWhiteSpace + 12;\n      }\n\n      if (ch2 === 58 && ch3 !== 58) {\n        return shiftToFirstNonWhiteSpace;\n      }\n\n      return false;\n    }\n\n    hasFlowCommentCompletion() {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n      }\n    }\n\n    flowEnumErrorBooleanMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n    }\n\n    flowEnumErrorInvalidMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n    }\n\n    flowEnumErrorDuplicateMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(pos, {\n      enumName,\n      suppliedType\n    }) {\n      return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n    }\n\n    flowEnumErrorInvalidMemberInitializer(pos, {\n      enumName,\n      explicitType,\n      memberName\n    }) {\n      let message = null;\n\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n\n        default:\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n    }\n\n    flowEnumMemberInit() {\n      const startPos = this.state.start;\n\n      const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n      switch (this.state.type) {\n        case types.num:\n          {\n            const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"number\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types.string:\n          {\n            const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"string\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types._true:\n        case types._false:\n          {\n            const literal = this.parseBooleanLiteral();\n\n            if (endOfInit()) {\n              return {\n                type: \"boolean\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        default:\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n      }\n    }\n\n    flowEnumMemberRaw() {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n        type: \"none\",\n        pos\n      };\n      return {\n        id,\n        init\n      };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n      const {\n        explicitType\n      } = context;\n\n      if (explicitType === null) {\n        return;\n      }\n\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType\n    }) {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: []\n      };\n\n      while (!this.match(types.braceR)) {\n        const memberNode = this.startNode();\n        const {\n          id,\n          init\n        } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n\n        if (memberName === \"\") {\n          continue;\n        }\n\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        seenNames.add(memberName);\n        const context = {\n          enumName,\n          explicitType,\n          memberName\n        };\n        memberNode.id = id;\n\n        switch (init.type) {\n          case \"boolean\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n              memberNode.init = init.value;\n              members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n              break;\n            }\n\n          case \"number\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n              memberNode.init = init.value;\n              members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n              break;\n            }\n\n          case \"string\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n              memberNode.init = init.value;\n              members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n              break;\n            }\n\n          case \"invalid\":\n            {\n              throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n            }\n\n          case \"none\":\n            {\n              switch (explicitType) {\n                case \"boolean\":\n                  this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                  break;\n\n                case \"number\":\n                  this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                  break;\n\n                default:\n                  members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n              }\n            }\n        }\n\n        if (!this.match(types.braceR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      return members;\n    }\n\n    flowEnumStringMembers(initializedMembers, defaultedMembers, {\n      enumName\n    }) {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (let _i = 0; _i < initializedMembers.length; _i++) {\n          const member = initializedMembers[_i];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return defaultedMembers;\n      } else {\n        for (let _i2 = 0; _i2 < defaultedMembers.length; _i2++) {\n          const member = defaultedMembers[_i2];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName\n    }) {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(types.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null\n          });\n        }\n\n        const {\n          value\n        } = this.state;\n        this.next();\n\n        if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value\n          });\n        }\n\n        return value;\n      }\n\n      return null;\n    }\n\n    flowEnumBody(node, {\n      enumName,\n      nameLoc\n    }) {\n      const explicitType = this.flowEnumParseExplicitType({\n        enumName\n      });\n      this.expect(types.braceL);\n      const members = this.flowEnumMembers({\n        enumName,\n        explicitType\n      });\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n            enumName\n          });\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n\n        default:\n          {\n            const empty = () => {\n              node.members = [];\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            };\n\n            node.explicitType = false;\n            const boolsLen = members.booleanMembers.length;\n            const numsLen = members.numberMembers.length;\n            const strsLen = members.stringMembers.length;\n            const defaultedLen = members.defaultedMembers.length;\n\n            if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n              return empty();\n            } else if (!boolsLen && !numsLen) {\n              node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                enumName\n              });\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n              for (let _i3 = 0, _members$defaultedMem = members.defaultedMembers; _i3 < _members$defaultedMem.length; _i3++) {\n                const member = _members$defaultedMem[_i3];\n                this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.booleanMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumBooleanBody\");\n            } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n              for (let _i4 = 0, _members$defaultedMem2 = members.defaultedMembers; _i4 < _members$defaultedMem2.length; _i4++) {\n                const member = _members$defaultedMem2[_i4];\n                this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.numberMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumNumberBody\");\n            } else {\n              this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                enumName\n              });\n              return empty();\n            }\n          }\n      }\n    }\n\n    flowParseEnumDeclaration(node) {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType) {\n      if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    isLookaheadToken_lt() {\n      const next = this.nextTokenStart();\n\n      if (this.input.charCodeAt(next) === 60) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return afterNext !== 60 && afterNext !== 61;\n      }\n\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n\n  }, _temp;\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers) {\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers);\n      if (!modifier) break;\n\n      if (Object.hasOwnProperty.call(modified, modifier)) {\n        this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n      }\n\n      modified[modifier] = true;\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma)) {\n      this.semicolon();\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (!readonly && (this.match(types.parenL) || this.isRelational(\"<\"))) {\n      const method = nodeAny;\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    const readonly = !!this.tsParseModifier([\"readonly\"]);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      if (readonly) node.readonly = true;\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n    return this.tsParsePropertyOrMethodSignature(node, readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      this.expect(types._new);\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    this.eat(operator);\n    let type = parseConstituentType();\n\n    if (this.match(operator)) {\n      const types = [type];\n\n      while (this.eat(operator)) {\n        types.push(parseConstituentType());\n      }\n\n      const node = this.startNodeAtNode(type);\n      node.types = types;\n      type = this.finishNode(node, kind);\n    }\n\n    return type;\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          const node = this.startNodeAtNode(t);\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        const node = this.startNodeAtNode(t);\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      const node = this.startNodeAtNode(t);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types.eq);\n    node.moduleReference = this.tsParseModuleReference();\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInDeclareContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminatorAndMatch(types._class, next)) {\n          const cls = node;\n          cls.abstract = true;\n\n          if (next) {\n            this.next();\n\n            if (!this.match(types._class)) {\n              this.unexpected(null, types._class);\n            }\n          }\n\n          return this.parseClass(cls, true, false);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (next) this.next();\n\n        if (this.match(types.string)) {\n          return this.tsParseAmbientExternalModuleDeclaration(node);\n        } else if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminatorAndMatch(tokenType, next) {\n    return (next || this.match(tokenType)) && !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      const ahead = this.lookahead();\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\")) {\n        node.importKind = \"type\";\n        this.next();\n      }\n    }\n\n    if (!node.importKind) {\n      node.importKind = \"value\";\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.expect(types._import);\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      this.parseClass(cls, true, true);\n      cls.abstract = true;\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  parseClassMember(classBody, member, state) {\n    this.tsParseModifiers(member, [\"declare\"]);\n    const accessibility = this.parseAccessModifier();\n    if (accessibility) member.accessibility = accessibility;\n    this.tsParseModifiers(member, [\"declare\"]);\n\n    const callParseClassMember = () => {\n      super.parseClassMember(classBody, member, state);\n    };\n\n    if (member.declare) {\n      this.tsInDeclareContext(callParseClassMember);\n    } else {\n      callParseClassMember();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (isStatic) {\n        this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      return;\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isDeclareContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.match(types.jsxTagStart)) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) == null ? void 0 : _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || expr.extra && expr.extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) == null ? void 0 : _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) == null ? void 0 : _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isDeclareContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInDeclareContext(cb) {\n    const oldIsDeclareContext = this.state.isDeclareContext;\n    this.state.isDeclareContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isDeclareContext = oldIsDeclareContext;\n    }\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, \"A class name is required\");\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers == null ? void 0 : specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (let _i = 0, _Object$keys = Object.keys(defaultOptions); _i < _Object$keys.length; _i++) {\n    const key = _Object$keys[_i];\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext == null ? void 0 : curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, message) {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon() {\n    if (!this.isLineTerminator()) this.unexpected(null, types.semi);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  unexpected(pos, messageOrType = \"Unexpected token\") {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser == null ? void 0 : parser.options.ranges) this.range = [pos, 0];\n    if (parser == null ? void 0 : parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || ((_node$extra = node.extra) == null ? void 0 : _node$extra.parenthesized)) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && ((_node$extra2 = node.extra) == null ? void 0 : _node$extra2.trailingComma)) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (let _i = 0; _i < exprList.length; _i++) {\n      const expr = exprList[_i];\n\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let _i2 = 0, _expr$properties = expr.properties; _i2 < _expr$properties.length; _i2++) {\n          let prop = _expr$properties[_i2];\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (let _i3 = 0, _expr$elements = expr.elements; _i3 < _expr$elements.length; _i3++) {\n          const elem = _expr$elements[_i3];\n\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, message) {\n    this.errors.set(pos, message);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, message);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, message);\n  }\n\n  recordParenthesizedIdentifierError(pos, message) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, message);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((message, pos) => {\n      this.raise(pos, message);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        if (op === types.exponent && left.type === \"UnaryExpression\" && (this.options.createParenthesizedExpressions || !(left.extra && left.extra.parenthesized))) {\n          this.raise(left.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n        }\n\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (this.isContextual(\"await\") && this.isAwaitAllowed()) {\n      return this.parseAwait();\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary();\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    return this.parseUpdate(node, update, refExpressionErrors);\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (let _i = 0, _node$arguments = node.arguments; _i < _node$arguments.length; _i++) {\n          const arg = _node$arguments[_i];\n\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo();\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(node.id.name, node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, node.id.name);\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo() {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(id.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = ErrorMessages.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (let _i2 = 0, _node$params = node.params; _i2 < _node$params.length; _i2++) {\n      const param = _node$params[_i2];\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      if (!this.prodParam.hasAwait && word === \"await\") {\n        this.raise(startLoc, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n      } else {\n        this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n      }\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait() {\n    const node = this.startNode();\n    this.next();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo)) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary();\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    program.sourceType = this.options.sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, types.eof);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (let _i = 0, _Array$from = Array.from(this.scope.undefinedExports); _i < _Array$from.length; _i++) {\n        const [name] = _Array$from[_i];\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    file.program = this.finishNode(program, \"Program\");\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(node.start, {\n        code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n      }, ErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n\n    if (this.match(types._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init, true);\n      const description = this.isContextual(\"of\") ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (let _i2 = 0, _this$state$labels = this.state.labels; _i2 < _this$state$labels.length; _i2++) {\n      const label = _this$state$labels[_i2];\n\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(constructorAllowsSuper, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      constructorAllowsSuper,\n      hadConstructor: false,\n      hadStaticBlock: false\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member, state);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member, state) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.expressionScope.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if (state.hadStaticBlock) {\n      this.raise(member.start, ErrorMessages.DuplicateStaticBlock);\n    }\n\n    if ((_member$decorators = member.decorators) == null ? void 0 : _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n\n    state.hadStaticBlock = true;\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    if (!node.typeAnnotation || this.match(types.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) == null ? void 0 : _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (let _i3 = 0, _node$specifiers = node.specifiers; _i3 < _node$specifiers.length; _i3++) {\n          const specifier = _node$specifiers[_i3];\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (let _i4 = 0, _node$declaration$dec = node.declaration.declarations; _i4 < _node$declaration$dec.length; _i4++) {\n            const declaration = _node$declaration$dec[_i4];\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (let _i5 = 0, _node$properties = node.properties; _i5 < _node$properties.length; _i5++) {\n        const prop = _node$properties[_i5];\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (let _i6 = 0, _node$elements = node.elements; _i6 < _node$elements.length; _i6++) {\n        const elem = _node$elements[_i6];\n\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (let _i = 0, _Array$from = Array.from(oldClassScope.undefinedPrivateNames); _i < _Array$from.length; _i++) {\n      const [name, pos] = _Array$from[_i];\n\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (let _i2 = 0, _this$stack = this.stack; _i2 < _this$stack.length; _i2++) {\n      classScope = _this$stack[_i2];\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    const ScopeHandler = this.getScopeHandler();\n    this.options = options;\n    this.inModule = this.options.sourceType === \"module\";\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    this.prodParam = new ProductionParameterHandler();\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (let _i = 0; _i < plugins.length; _i++) {\n    const plugin = plugins[_i];\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options == null ? void 0 : options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (let _i = 0; _i < pluginList.length; _i++) {\n      const plugin = pluginList[_i];\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} | `;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line, markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = _interopRequireDefault(require(\"globals\"));\n\nvar _transformClass = _interopRequireDefault(require(\"./transformClass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getBuiltinClasses = category => Object.keys(_globals.default[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = _interopRequireWildcard(require(\"js-tokens\"));\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsx_tag: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst JSX_TAG = /^[a-z][\\w-]*$/i;\nconst BRACKET = /^[()[\\]{}]$/;\n\nfunction getTokenType(match) {\n  const [offset, text] = match.slice(-2);\n  const token = (0, _jsTokens.matchToToken)(match);\n\n  if (token.type === \"name\") {\n    if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isReservedWord)(token.value)) {\n      return \"keyword\";\n    }\n\n    if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n      return \"jsx_tag\";\n    }\n\n    if (token.value[0] !== token.value[0].toLowerCase()) {\n      return \"capitalized\";\n    }\n  }\n\n  if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n    return \"bracket\";\n  }\n\n  if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n    return \"punctuator\";\n  }\n\n  return token.type;\n}\n\nfunction highlightTokens(defs, text) {\n  return text.replace(_jsTokens.default, function (...args) {\n    const type = getTokenType(args);\n    const colorize = defs[type];\n\n    if (colorize) {\n      return args[0].split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      return args[0];\n    }\n  });\n}\n\nfunction shouldHighlight(options) {\n  return _chalk.default.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  let chalk = _chalk.default;\n\n  if (options.forceColor) {\n    chalk = new _chalk.default.constructor({\n      enabled: true,\n      level: 1\n    });\n  }\n\n  return chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}"],"sourceRoot":""}