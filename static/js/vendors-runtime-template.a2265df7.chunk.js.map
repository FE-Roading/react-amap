{"version":3,"sources":["../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/template/lib/index.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js"],"names":["Object","defineProperty","exports","value","program","expression","statement","statements","smart","t","obj","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","WeakMap","makeStatementFormatter","fn","code","str","validate","unwrap","ast","body","slice","length","Error","start","stmt","assertExpressionStatement","createTemplateBuilder","formatter","defaultOpts","templateFnCache","templateAstCache","cachedOpts","_options","assign","tpl","args","extendedTrace","_string","merge","Array","isArray","builder","_literal","NO_PLACEHOLDER","_interopRequireDefault","placeholderPattern","rootStack","error","stack","split","join","arg","err","opts","metadata","replacements","normalizeReplacements","_parse","_populate","shouldHighlight","getChalk","options","chalk","defs","getDefs","highlightTokens","jsTokensNs","_helperValidatorIdentifier","_chalk","sometimesKeywords","Set","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","number","magenta","string","green","regex","comment","grey","invalid","white","bgRed","bold","tokenize","NEWLINE","BRACKET","matchToToken","JSX_TAG","getTokenType","token","offset","text","type","isKeyword","isStrictReservedWord","test","substr","toLowerCase","highlighted","colorize","map","supportsColor","forceColor","constructor","enabled","level","match","exec","index","names","nameSet","prefix","result","buildTemplateCode","parser","placeholderWhitelist","concat","from","preserveComments","syntacticPlaceholders","placeholders","some","placeholder","isDuplicate","name","buildLiteralData","defaultReplacements","forEach","replacement","i","keys","push","path","file","builtinClasses","isLoose","classState","parent","undefined","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","instancePropBody","instancePropRefs","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","hasInstanceDescriptors","hasStaticDescriptors","instanceMutatorMap","staticMutatorMap","setState","newState","findThisesVisitor","_core","traverse","visitors","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","params","template","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","replace","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","instanceProps","staticProps","defineMap","toClassObject","toComputedObjectFromClass","nullLiteral","lastNonNullIndex","isNullLiteral","expressionStatement","bareSuperNode","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","static","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","enumerable","mutatorMap","booleanLiteral","pushToMap","method","hasOwnBinding","rename","directives","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","toExpression","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","formatters","_builder","_default","bind","beforeExpr","startsExpr","TokenType","label","conf","this","rightAssociative","isAssign","postfix","binop","updateContext","keywords","Map","createKeyword","createBinop","num","bigint","decimal","regexp","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","end","filename","identifierName","last","CommentsParser","loc","state","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","properties","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","DuplicateStaticBlock","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","lineStart","lastIndex","getLineInfo","errorTemplate","raiseWithData","getLocationForPosition","message","_","errorRecovery","errors","_raise","data","errorContext","SyntaxError","isLookahead","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","String","fromCharCode","isIdentifierChar","reservedWords","keywords$1","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictBindOnlyReservedWord","isStrictBindReservedWord","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","createScope","bindingType","currentScope","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","treatFunctionsAsVarInScope","currentVarScope","currentThisScope","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateModifier","DuplicateAccessibilityModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","IndexSignatureHasDeclare","InvalidModifierOnTypeMember","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","e","estreeParseLiteral","bigInt","BigInt","parseLiteral","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","convertPrivateNameToPrivateIdentifier","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","propertyNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","count","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","tryParse","failState","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","_i","flowEnumErrorStringMemberInconsistentlyInitailized","_i2","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","_i3","_members$defaultedMem","_i4","_members$defaultedMem2","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","callParseClassMember","inAbstractClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","readToken_lt_gt","baseCount","firstParam","oldIsDeclareContext","oldInAbstractClass","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","curr","clear","skipSpace","getTokenFromCode","codePointAt","block","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","escStart","identifierCheck","esc","readWord1","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","_Array$from","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","_this$stack","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","range","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","Parser","_Object$keys","getOptions","initializeScopes","pluginMap","pluginsMap","enterInitialScopes","parseTopLevel","parseProgram","interpreter","parseInterpreterDirective","parseBlockBody","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","parseDecorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","parseVar","declarations","parseForIn","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","parseBindingAtom","simple","handler","clause","parseCatchClauseParam","finalizer","_this$state$labels","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","hadConstructor","hadStaticBlock","parseClassMember","pushClassMethod","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","_node$specifiers","exportedName","checkLocalExport","_node$declaration$dec","_i5","_node$properties","_i6","_node$elements","elem","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","isAwait","parseAwait","parseModuleExpression","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","_node$arguments","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","_node$params","allowEmpty","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","_expr$properties","_expr$elements","processComment","locationNode","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","gutter","marker","red","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlightCode","maybeHighlight","chalkFn","lines","hasColumns","numberMaxWidth","highlightedLines","frame","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","reduce","acc","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","placeholderName","reverse","stringLiteral","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","assertVersion","loose","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression"],"mappings":"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","file":"static/js/vendors-runtime-template.a2265df7.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar jsTokensNs = _interopRequireWildcard(require(\"js-tokens\"));\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const {\n    matchToToken\n  } = jsTokensNs;\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokensNs.default.exec(text)) {\n      const token = matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return _chalk.default.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  let chalk = _chalk.default;\n\n  if (options.forceColor) {\n    chalk = new _chalk.default.constructor({\n      enabled: true,\n      level: 1\n    });\n  }\n\n  return chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperReplaceSupers = _interopRequireWildcard(require(\"@babel/helper-replace-supers\"));\n\nvar _helperOptimiseCallExpression = _interopRequireDefault(require(\"@babel/helper-optimise-call-expression\"));\n\nvar defineMap = _interopRequireWildcard(require(\"@babel/helper-define-map\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _inlineCreateSuperHelpers = _interopRequireDefault(require(\"./inline-createSuper-helpers\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    instancePropBody: [],\n    instancePropRefs: {},\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    hasInstanceDescriptors: false,\n    hasStaticDescriptors: false,\n    instanceMutatorMap: {},\n    staticMutatorMap: {}\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function pushToMap(node, enumerable, kind = \"value\", scope) {\n    let mutatorMap;\n\n    if (node.static) {\n      setState({\n        hasStaticDescriptors: true\n      });\n      mutatorMap = classState.staticMutatorMap;\n    } else {\n      setState({\n        hasInstanceDescriptors: true\n      });\n      mutatorMap = classState.instanceMutatorMap;\n    }\n\n    const map = defineMap.push(mutatorMap, node, kind, classState.file, scope);\n\n    if (enumerable) {\n      map.enumerable = _core.types.booleanLiteral(true);\n    }\n\n    return map;\n  }\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          isLoose: classState.isLoose,\n          file: classState.file\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function clearDescriptors() {\n    setState({\n      hasInstanceDescriptors: false,\n      hasStaticDescriptors: false,\n      instanceMutatorMap: {},\n      staticMutatorMap: {}\n    });\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    let instanceProps;\n    let staticProps;\n\n    if (classState.hasInstanceDescriptors) {\n      instanceProps = defineMap.toClassObject(classState.instanceMutatorMap);\n    }\n\n    if (classState.hasStaticDescriptors) {\n      staticProps = defineMap.toClassObject(classState.staticMutatorMap);\n    }\n\n    if (instanceProps || staticProps) {\n      if (instanceProps) {\n        instanceProps = defineMap.toComputedObjectFromClass(instanceProps);\n      }\n\n      if (staticProps) {\n        staticProps = defineMap.toComputedObjectFromClass(staticProps);\n      }\n\n      let args = [_core.types.cloneNode(classState.classRef), _core.types.nullLiteral(), _core.types.nullLiteral()];\n      if (instanceProps) args[1] = instanceProps;\n      if (staticProps) args[2] = staticProps;\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n\n    clearDescriptors();\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (classState.isLoose) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    pushToMap(node, false, null, scope);\n  }\n\n  function processMethod(node, scope) {\n    if (classState.isLoose && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    if (path.scope.hasOwnBinding(classState.classRef.name)) {\n      path.scope.rename(classState.classRef.name);\n    }\n\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!classState.isLoose) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!classState.isLoose) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  DuplicateStaticBlock: \"Duplicate static block in the same class\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, errorTemplate, ...params) {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseOverwrite(pos, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) == null ? void 0 : _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = [];\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => {\n  var _temp;\n\n  return _temp = class extends superClass {\n    constructor(...args) {\n      super(...args);\n      this.flowPragma = undefined;\n    }\n\n    getScopeHandler() {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes() {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums() {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type, val) {\n      if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment) {\n      if (this.flowPragma === undefined) {\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n        if (!matches) ; else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || types.colon);\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate() {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(types.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n\n      if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n\n      if (this.eat(types.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(types.colon);\n      let type = null;\n      let predicate = null;\n\n      if (this.match(types.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n\n        if (this.match(types.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node) {\n      this.next();\n      this.flowParseInterfaceish(node, true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(node) {\n      this.next();\n      const id = node.id = this.parseIdentifier();\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(types.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(types.parenR);\n      [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n      this.resetEndLocation(id);\n      this.semicolon();\n      this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(node, insideModule) {\n      if (this.match(types._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(types._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(types._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(types.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(types._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(node) {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(true);\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node) {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(types.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = node.body = this.startNode();\n      const body = bodyNode.body = [];\n      this.expect(types.braceL);\n\n      while (!this.match(types.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(types._import)) {\n          this.next();\n\n          if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n            this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n          }\n\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n      this.expect(types.braceR);\n      this.finishNode(bodyNode, \"BlockStatement\");\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n          }\n\n          if (kind === \"ES\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(node, insideModule) {\n      this.expect(types._export);\n\n      if (this.eat(types._default)) {\n        if (this.match(types._function) || this.match(types._class)) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n\n        node.default = true;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n          throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n        }\n\n        if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(node) {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(node) {\n      this.next();\n      this.flowParseTypeAlias(node);\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(node) {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(node) {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    flowParseInterfaceish(node, isClass = false) {\n      node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n      this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false\n      });\n    }\n\n    flowParseInterfaceExtends() {\n      const node = this.startNode();\n      node.id = this.flowParseQualifiedTypeIdentifier();\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node) {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word, startLoc, declaration) {\n      if (!reservedTypes.has(word)) return;\n      this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n    }\n\n    flowParseRestrictedIdentifier(liberal, declaration) {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    flowParseTypeAlias(node) {\n      node.id = this.flowParseRestrictedIdentifier(false, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(types.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(node, declare) {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(true, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.supertype = null;\n\n      if (this.match(types.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(types.colon);\n      }\n\n      node.impltype = null;\n\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(types.eq);\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    flowParseTypeParameter(requireDefault = false) {\n      const nodeStart = this.state.start;\n      const node = this.startNode();\n      const variance = this.flowParseVariance();\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(types.eq)) {\n        this.eat(types.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration() {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n      this.state.inType = true;\n\n      if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      } while (!this.isRelational(\">\"));\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType() {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n      node.extends = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false\n      });\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey() {\n      return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(node, isStatic, variance) {\n      node.static = isStatic;\n\n      if (this.lookahead().type === types.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n\n      this.expect(types.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(node, isStatic) {\n      node.static = isStatic;\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(types.bracketR);\n      this.expect(types.bracketR);\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n      } else {\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n      }\n\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(node) {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(types.parenL);\n\n      if (this.match(types._this)) {\n        node.this = this.flowParseFunctionTypeParam(true);\n        node.this.name = null;\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n\n      this.expect(types.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(node, isStatic) {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact\n    }) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const nodeStart = this.startNode();\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n      let endDelim;\n      let exact;\n      let inexact = false;\n\n      if (allowExact && this.match(types.braceBarL)) {\n        this.expect(types.braceBarL);\n        endDelim = types.braceBarR;\n        exact = true;\n      } else {\n        this.expect(types.braceL);\n        endDelim = types.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart = null;\n        let inexactStart = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(types.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (this.eat(types.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n          } else {\n            nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n          }\n        } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n\n            if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n          this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n        }\n      }\n\n      this.expect(endDelim);\n\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n      this.state.inType = oldInType;\n      return out;\n    }\n\n    flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n      if (this.eat(types.ellipsis)) {\n        const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n        let optional = false;\n\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n\n          if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n            this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n          node.method = false;\n\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    flowCheckGetterSetterParams(property) {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n      }\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon() {\n      if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(types.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(startPos, startLoc, id) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType() {\n      const node = this.startNode();\n      this.expect(types._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType() {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(types.bracketL);\n\n      while (this.state.pos < this.length && !this.match(types.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(types.bracketR)) break;\n        this.expect(types.comma);\n      }\n\n      this.expect(types.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first) {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === types._this;\n\n      if (lh.type === types.colon || lh.type === types.question) {\n        if (isThis && !first) {\n          this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n        }\n\n        name = this.parseIdentifier(isThis);\n\n        if (this.eat(types.question)) {\n          optional = true;\n\n          if (isThis) {\n            this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n        }\n\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(type) {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params = []) {\n      let rest = null;\n      let _this = null;\n\n      if (this.match(types._this)) {\n        _this = this.flowParseFunctionTypeParam(true);\n        _this.name = null;\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n\n      return {\n        params,\n        rest,\n        _this\n      };\n    }\n\n    flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    flowParsePrimaryType() {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case types.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n        case types.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true\n          });\n\n        case types.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false\n          });\n\n        case types.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case types.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(types.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(types.parenR);\n            this.expect(types.arrow);\n            node.returnType = this.flowParseType();\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n\n          break;\n\n        case types.parenL:\n          this.next();\n\n          if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n            if (this.match(types.name) || this.match(types._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== types.question && token !== types.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n              this.expect(types.parenR);\n              return type;\n            } else {\n              this.eat(types.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case types.string:\n          return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n        case types._true:\n        case types._false:\n          node.value = this.match(types._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case types.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n\n            if (this.match(types.num)) {\n              return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            if (this.match(types.bigint)) {\n              return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n          }\n\n          throw this.unexpected();\n\n        case types.num:\n          return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n        case types.bigint:\n          return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n        case types._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case types._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case types._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case types.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType() {\n      const startPos = this.state.start,\n            startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n\n      while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(types.bracketL);\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n\n      return type;\n    }\n\n    flowParsePrefixType() {\n      const node = this.startNode();\n\n      if (this.eat(types.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens() {\n      const param = this.flowParsePrefixType();\n\n      if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n\n      return param;\n    }\n\n    flowParseIntersectionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation() {\n      if (this.state.type === types.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation() {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n      const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n      if (this.match(types.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n\n      return ident;\n    }\n\n    typeCastToParameter(node) {\n      node.expression.typeAnnotation = node.typeAnnotation;\n      this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n      return node.expression;\n    }\n\n    flowParseVariance() {\n      let variance = null;\n\n      if (this.match(types.plusMin)) {\n        variance = this.startNode();\n\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n\n      return variance;\n    }\n\n    parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(node, type, isMethod = false) {\n      if (this.match(types.colon)) {\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    parseStatement(context, topLevel) {\n      if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      const stmt = super.parseStatement(context, topLevel);\n\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n\n      return stmt;\n    }\n\n    parseExpressionStatement(node, expr) {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    shouldParseExportDeclaration() {\n      return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier() {\n      if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n      if (!this.match(types.question)) return expr;\n\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n        if (!result.node) {\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(types.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let {\n        consequent,\n        failed\n      } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(types.colon);\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent() {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(types.colon);\n      this.state.noArrowParamsConversionAt.pop();\n      return {\n        consequent,\n        failed\n      };\n    }\n\n    getArrowLikeExpressions(node, disallowInvalid) {\n      const stack = [node];\n      const arrows = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n    }\n\n    finishArrowValidation(node) {\n      var _node$extra;\n\n      this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt(node, parse) {\n      let result;\n\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(node, startPos, startLoc) {\n      node = super.parseParenItem(node, startPos, startLoc);\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(types.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node) {\n      if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node) {\n      const decl = super.parseExport(node);\n\n      if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n\n      return decl;\n    }\n\n    parseExportDeclaration(node) {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node) {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node) {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n\n      return hasNamespace;\n    }\n\n    parseClassId(node, isStatement, optionalId) {\n      super.parseClassId(node, isStatement, optionalId);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(classBody, member, state) {\n      const pos = this.state.start;\n\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n            this.raise(pos, FlowErrors.DeclareClassElement);\n          } else if (member.value) {\n          this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n        }\n      }\n    }\n\n    getTokenFromCode(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 123 && next === 124) {\n        return this.finishOp(types.braceBarL, 2);\n      } else if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else if (this.state.inType && code === 63) {\n        return this.finishOp(types.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node, isBinding) {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\":\n          {\n            const last = node.properties.length - 1;\n            return node.properties.every((prop, i) => {\n              return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n            });\n          }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node, isLHS = false) {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableList(exprList, trailingCommaPos, isLHS) {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n\n        if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    toReferencedList(exprList, isParenthesizedExpr) {\n      for (let i = 0; i < exprList.length; i++) {\n        var _expr$extra;\n\n        const expr = exprList[i];\n\n        if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) == null ? void 0 : _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n      const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(expr, ...args) {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    parseClassProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassPrivateProperty(node);\n    }\n\n    isClassMethod() {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty() {\n      return this.match(types.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method) {\n      return !this.match(types.colon) && super.isNonstaticConstructor(method);\n    }\n\n    isThisParam(param) {\n      return param.type === \"Identifier\" && param.name === \"this\";\n    }\n\n    pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n        const params = method.value.params;\n\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node) {\n      super.parseClassSuper(node);\n\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented = node.implements = [];\n\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(true);\n\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(types.comma));\n      }\n    }\n\n    checkGetterSetterParams(method) {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n\n      if (params.length > 0) {\n        const param = params[0];\n\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n        }\n      }\n    }\n\n    parsePropertyName(node, isPrivateNameAllowed) {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      node.variance = variance;\n      return key;\n    }\n\n    parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      if (prop.variance) {\n        this.unexpected(prop.variance.start);\n      }\n\n      delete prop.variance;\n      let typeParameters;\n\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param) {\n      if (this.eat(types.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n\n        param.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n      }\n\n      if (this.match(types.eq) && this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamNoDefault);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(startPos, startLoc, left) {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node) {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    maybeParseDefaultImportSpecifier(node) {\n      node.importKind = \"value\";\n      let kind = null;\n\n      if (this.match(types._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n\n      if (kind) {\n        const lh = this.lookahead();\n\n        if (kind === \"type\" && lh.type === types.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    parseImportSpecifier(node) {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n      let specifierTypeKind = null;\n\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n\n        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(specifier.local.name, specifier.local.start, true);\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseBindingAtom() {\n      switch (this.state.type) {\n        case types._this:\n          return this.parseIdentifier(true);\n\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseFunctionParams(node, allowModifiers) {\n      const kind = node.kind;\n\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    parseVarId(decl, kind) {\n      super.parseVarId(decl, kind);\n\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id);\n      }\n    }\n\n    parseAsyncArrowFromCallExpression(node, call) {\n      if (this.match(types.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    shouldParseAsyncArrow() {\n      return this.match(types.colon) || super.shouldParseAsyncArrow();\n    }\n\n    parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _jsx;\n\n      let state = null;\n      let jsx;\n\n      if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n        state = this.state.clone();\n        jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n        if (!jsx.error) return jsx.node;\n        const {\n          context\n        } = this.state;\n\n        if (context[context.length - 1] === types$1.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === types$1.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (((_jsx = jsx) == null ? void 0 : _jsx.error) || this.isRelational(\"<\")) {\n        var _jsx2, _jsx3;\n\n        state = state || this.state.clone();\n        let typeParameters;\n        const arrow = this.tryParse(abort => {\n          var _arrowExpression$extr;\n\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n            const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n            this.resetStartLocationFromNode(result, typeParameters);\n            return result;\n          });\n\n          if (arrowExpression.type !== \"ArrowFunctionExpression\" && ((_arrowExpression$extr = arrowExpression.extra) == null ? void 0 : _arrowExpression$extr.parenthesized)) {\n            abort();\n          }\n\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n          return arrowExpression;\n        }, state);\n        let arrowExpression = null;\n\n        if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n          if (!arrow.error && !arrow.aborted) {\n            if (arrow.node.async) {\n              this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n    }\n\n    parseArrow(node) {\n      if (this.match(types.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          const typeNode = this.startNode();\n          [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          return typeNode;\n        });\n        if (result.thrown) return null;\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow() {\n      return this.match(types.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(node, params) {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(node, allowDuplicates, isArrowFunction) {\n      if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        return;\n      }\n\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow) {\n      return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n    }\n\n    parseSubscripts(base, startPos, startLoc, noCalls) {\n      if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n        const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n      if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, true);\n      } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(types.parenL);\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(node, subscriptState.optionalChainMember);\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n    }\n\n    parseNewArguments(node) {\n      let targs = null;\n\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n      }\n\n      node.typeArguments = targs;\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(node, undefined, true);\n    }\n\n    readToken_mult_modulo(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 42 && next === 47 && this.state.hasFlowComment) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 124 && next === 125) {\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file, program) {\n      const fileNode = super.parseTopLevel(file, program);\n\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n\n      return fileNode;\n    }\n\n    skipBlockComment() {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n        }\n\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment() {\n      const {\n        pos\n      } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n\n      while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === 58 && ch3 === 58) {\n        return shiftToFirstNonWhiteSpace + 2;\n      }\n\n      if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n        return shiftToFirstNonWhiteSpace + 12;\n      }\n\n      if (ch2 === 58 && ch3 !== 58) {\n        return shiftToFirstNonWhiteSpace;\n      }\n\n      return false;\n    }\n\n    hasFlowCommentCompletion() {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n      }\n    }\n\n    flowEnumErrorBooleanMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n    }\n\n    flowEnumErrorInvalidMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n    }\n\n    flowEnumErrorDuplicateMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(pos, {\n      enumName,\n      suppliedType\n    }) {\n      return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n    }\n\n    flowEnumErrorInvalidMemberInitializer(pos, {\n      enumName,\n      explicitType,\n      memberName\n    }) {\n      let message = null;\n\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n\n        default:\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n    }\n\n    flowEnumMemberInit() {\n      const startPos = this.state.start;\n\n      const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n      switch (this.state.type) {\n        case types.num:\n          {\n            const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"number\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types.string:\n          {\n            const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"string\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types._true:\n        case types._false:\n          {\n            const literal = this.parseBooleanLiteral();\n\n            if (endOfInit()) {\n              return {\n                type: \"boolean\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        default:\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n      }\n    }\n\n    flowEnumMemberRaw() {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n        type: \"none\",\n        pos\n      };\n      return {\n        id,\n        init\n      };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n      const {\n        explicitType\n      } = context;\n\n      if (explicitType === null) {\n        return;\n      }\n\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType\n    }) {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: []\n      };\n      let hasUnknownMembers = false;\n\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n\n        const memberNode = this.startNode();\n        const {\n          id,\n          init\n        } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n\n        if (memberName === \"\") {\n          continue;\n        }\n\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        seenNames.add(memberName);\n        const context = {\n          enumName,\n          explicitType,\n          memberName\n        };\n        memberNode.id = id;\n\n        switch (init.type) {\n          case \"boolean\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n              memberNode.init = init.value;\n              members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n              break;\n            }\n\n          case \"number\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n              memberNode.init = init.value;\n              members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n              break;\n            }\n\n          case \"string\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n              memberNode.init = init.value;\n              members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n              break;\n            }\n\n          case \"invalid\":\n            {\n              throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n            }\n\n          case \"none\":\n            {\n              switch (explicitType) {\n                case \"boolean\":\n                  this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                  break;\n\n                case \"number\":\n                  this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                  break;\n\n                default:\n                  members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n              }\n            }\n        }\n\n        if (!this.match(types.braceR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      return {\n        members,\n        hasUnknownMembers\n      };\n    }\n\n    flowEnumStringMembers(initializedMembers, defaultedMembers, {\n      enumName\n    }) {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (let _i = 0; _i < initializedMembers.length; _i++) {\n          const member = initializedMembers[_i];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return defaultedMembers;\n      } else {\n        for (let _i2 = 0; _i2 < defaultedMembers.length; _i2++) {\n          const member = defaultedMembers[_i2];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName\n    }) {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(types.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null\n          });\n        }\n\n        const {\n          value\n        } = this.state;\n        this.next();\n\n        if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value\n          });\n        }\n\n        return value;\n      }\n\n      return null;\n    }\n\n    flowEnumBody(node, {\n      enumName,\n      nameLoc\n    }) {\n      const explicitType = this.flowEnumParseExplicitType({\n        enumName\n      });\n      this.expect(types.braceL);\n      const {\n        members,\n        hasUnknownMembers\n      } = this.flowEnumMembers({\n        enumName,\n        explicitType\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n            enumName\n          });\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n\n        default:\n          {\n            const empty = () => {\n              node.members = [];\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            };\n\n            node.explicitType = false;\n            const boolsLen = members.booleanMembers.length;\n            const numsLen = members.numberMembers.length;\n            const strsLen = members.stringMembers.length;\n            const defaultedLen = members.defaultedMembers.length;\n\n            if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n              return empty();\n            } else if (!boolsLen && !numsLen) {\n              node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                enumName\n              });\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n              for (let _i3 = 0, _members$defaultedMem = members.defaultedMembers; _i3 < _members$defaultedMem.length; _i3++) {\n                const member = _members$defaultedMem[_i3];\n                this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.booleanMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumBooleanBody\");\n            } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n              for (let _i4 = 0, _members$defaultedMem2 = members.defaultedMembers; _i4 < _members$defaultedMem2.length; _i4++) {\n                const member = _members$defaultedMem2[_i4];\n                this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.numberMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumNumberBody\");\n            } else {\n              this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                enumName\n              });\n              return empty();\n            }\n          }\n      }\n    }\n\n    flowParseEnumDeclaration(node) {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType) {\n      if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    isLookaheadToken_lt() {\n      const next = this.nextTokenStart();\n\n      if (this.input.charCodeAt(next) === 60) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return afterNext !== 60 && afterNext !== 61;\n      }\n\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n\n  }, _temp;\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers == null ? void 0 : disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma)) {\n      this.semicolon();\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types.eq);\n    node.moduleReference = this.tsParseModuleReference();\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInDeclareContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types._class) || this.match(types.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      const ahead = this.lookahead();\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\")) {\n        node.importKind = \"type\";\n        this.next();\n      }\n    }\n\n    if (!node.importKind) {\n      node.importKind = \"value\";\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.expect(types._import);\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  parseClassMember(classBody, member, state) {\n    this.tsParseModifiers(member, [\"declare\", \"private\", \"public\", \"protected\"]);\n\n    const callParseClassMember = () => {\n      super.parseClassMember(classBody, member, state);\n    };\n\n    if (member.declare) {\n      this.tsInDeclareContext(callParseClassMember);\n    } else {\n      callParseClassMember();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (isStatic) {\n        this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isDeclareContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) == null ? void 0 : _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || expr.extra && expr.extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) == null ? void 0 : _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) == null ? void 0 : _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isDeclareContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInDeclareContext(cb) {\n    const oldIsDeclareContext = this.state.isDeclareContext;\n    this.state.isDeclareContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isDeclareContext = oldIsDeclareContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types._class);\n    }\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, \"A class name is required\");\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers == null ? void 0 : specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (let _i = 0, _Object$keys = Object.keys(defaultOptions); _i < _Object$keys.length; _i++) {\n    const key = _Object$keys[_i];\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext == null ? void 0 : curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (let _i = 0, _Array$from = Array.from(oldClassScope.undefinedPrivateNames); _i < _Array$from.length; _i++) {\n      const [name, pos] = _Array$from[_i];\n\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (let _i2 = 0, _this$stack = this.stack; _i2 < _this$stack.length; _i2++) {\n      classScope = _this$stack[_i2];\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, message) {\n    this.errors.set(pos, message);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, message);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, message);\n  }\n\n  recordParenthesizedIdentifierError(pos, message) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, message);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((message, pos) => {\n      this.raise(pos, message);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, message) {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  unexpected(pos, messageOrType = \"Unexpected token\") {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser == null ? void 0 : parser.options.ranges) this.range = [pos, 0];\n    if (parser == null ? void 0 : parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || ((_node$extra = node.extra) == null ? void 0 : _node$extra.parenthesized)) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && ((_node$extra2 = node.extra) == null ? void 0 : _node$extra2.trailingComma)) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (let _i = 0; _i < exprList.length; _i++) {\n      const expr = exprList[_i];\n\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let _i2 = 0, _expr$properties = expr.properties; _i2 < _expr$properties.length; _i2++) {\n          let prop = _expr$properties[_i2];\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (let _i3 = 0, _expr$elements = expr.elements; _i3 < _expr$elements.length; _i3++) {\n          const elem = _expr$elements[_i3];\n\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        if (op === types.exponent && left.type === \"UnaryExpression\" && (this.options.createParenthesizedExpressions || !(left.extra && left.extra.parenthesized))) {\n          this.raise(left.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n        }\n\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      return this.parseAwait(startPos, startLoc);\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary();\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (let _i = 0, _node$arguments = node.arguments; _i < _node$arguments.length; _i++) {\n          const arg = _node$arguments[_i];\n\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo();\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(this.getPrivateNameSV(node), node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.getPrivateNameSV(node));\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo() {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(id.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = ErrorMessages.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (let _i2 = 0, _node$params = node.params; _i2 < _node$params.length; _i2++) {\n      const param = _node$params[_i2];\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary();\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (let _i = 0, _Array$from = Array.from(this.scope.undefinedExports); _i < _Array$from.length; _i++) {\n        const [name] = _Array$from[_i];\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(node.start, {\n        code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n      }, ErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n\n    if (this.match(types._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init, true);\n      const description = this.isContextual(\"of\") ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (let _i2 = 0, _this$state$labels = this.state.labels; _i2 < _this$state$labels.length; _i2++) {\n      const label = _this$state$labels[_i2];\n\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(constructorAllowsSuper, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      constructorAllowsSuper,\n      hadConstructor: false,\n      hadStaticBlock: false\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member, state);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member, state) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if (state.hadStaticBlock) {\n      this.raise(member.start, ErrorMessages.DuplicateStaticBlock);\n    }\n\n    if ((_member$decorators = member.decorators) == null ? void 0 : _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n\n    state.hadStaticBlock = true;\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    if (!node.typeAnnotation || this.match(types.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) == null ? void 0 : _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (let _i3 = 0, _node$specifiers = node.specifiers; _i3 < _node$specifiers.length; _i3++) {\n          const specifier = _node$specifiers[_i3];\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (let _i4 = 0, _node$declaration$dec = node.declaration.declarations; _i4 < _node$declaration$dec.length; _i4++) {\n            const declaration = _node$declaration$dec[_i4];\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (let _i5 = 0, _node$properties = node.properties; _i5 < _node$properties.length; _i5++) {\n        const prop = _node$properties[_i5];\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (let _i6 = 0, _node$elements = node.elements; _i6 < _node$elements.length; _i6++) {\n        const elem = _node$elements[_i6];\n\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (let _i = 0; _i < plugins.length; _i++) {\n    const plugin = plugins[_i];\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options == null ? void 0 : options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (let _i = 0; _i < pluginList.length; _i++) {\n      const plugin = pluginList[_i];\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = _interopRequireDefault(require(\"globals\"));\n\nvar _transformClass = _interopRequireDefault(require(\"./transformClass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getBuiltinClasses = category => Object.keys(_globals.default[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;"],"sourceRoot":""}