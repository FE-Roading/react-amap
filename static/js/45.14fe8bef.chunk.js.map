{"version":3,"sources":["../src/BezierCurve/README.md"],"names":[],"mappings":"4HAAA,OAAe","file":"static/js/45.14fe8bef.chunk.js","sourcesContent":["export default \"BezierCurve 贝塞尔曲线\\n===\\n\\n贝塞尔曲线\\n\\n```jsx\\nimport { BezierCurve } from '@uiw/react-amap';\\n```\\n\\n### 基本用法\\n\\n<!--rehype:bgWhite=true&noScroll=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React, { useState, useRef } from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Map, APILoader, BezierCurve } from '@uiw/react-amap';\\n\\nconst Example = () => {\\n  const [show, setShow] = useState(true);\\n  const path = [// 每个弧线段有两种描述方式\\n    [116.39, 39.91, 116.37, 39.91],//起点\\n    // 第一段弧线\\n    [116.380298, 39.907771, 116.38, 39.90],// 控制点，途经点\\n    // 第二段弧线\\n    [116.385298, 39.907771, 116.40, 39.90],// 控制点，途经点// 弧线段有两种描述方式1\\n    // 第三段弧线\\n    [// 弧线段有两种描述方式2\\n      [116.392872, 39.887391],//控制点\\n      [116.40772, 39.909252],//控制点\\n      [116.41, 39.89]//途经点\\n    ],\\n    // 第四段弧线\\n    [116.423857, 39.889498, 116.422312, 39.899639, 116.425273, 39.902273]\\n    // 控制点，控制点，途经点，每段最多两个控制点\\n  ];\\n  return (\\n    <>\\n      <button onClick={() => setShow(!show)}>\\n        {show ? '隐藏' : '显示'}\\n      </button>\\n      <div style={{ width: '100%', height: '500px' }}>\\n        <Map zoom={14} center={[116.397637, 39.900001]}>\\n          <BezierCurve\\n            visiable={show}\\n            path={path}\\n            isOutline={true}\\n            outlineColor=\\\"#ffeeff\\\"\\n            borderWeight={3}\\n            strokeColor=\\\"#3366FF\\\"\\n            strokeOpacity={1}\\n            strokeWeight={6}\\n            // 线样式还支持 'dashed'\\n            strokeStyle=\\\"solid\\\"\\n            // strokeStyle是dashed时有效\\n            strokeDasharray={[10, 10]}\\n            lineJoin=\\\"round\\\"\\n            lineCap=\\\"round\\\"\\n            zIndex={50}\\n          />\\n        </Map>\\n      </div>\\n    </>\\n  );\\n}\\n\\nReactDOM.render((\\n  <APILoader akay=\\\"a7a90e05a37d3f6bf76d4a9032fc9129\\\">\\n    <Example />\\n  </APILoader>\\n), _mount_);\\n```\\n\\n### Props\\n\\n[更多参数设置](https://github.com/uiwjs/react-amap/blob/9364fa457dfac8c6ece84802e07358a131b7cad9/src/types/overlay.d.ts#L718-L776)\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|--------- |-------- |--------- |-------- |\\n| visiable | 覆盖物是否可见。 | `boolean` | - |\\n| path | 贝瑟尔曲线的路径。 | `Array<LngLat> | Array<Array<LngLat>>` | - |\\n\\n### 事件\\n\\n[事件类型文档](https://github.com/uiwjs/react-amap/blob/9364fa457dfac8c6ece84802e07358a131b7cad9/src/types/overlay.d.ts#L778-L802)\\n\\n| 参数 | 说明 | 类型 |\\n| ---- | ---- | ---- |\\n| onClick | 鼠标左键单击事件 | `(event: MapsEvent): void;` |\\n| onDblClick | 鼠标左键双击事件 | `(event: MapsEvent): void;` |\\n| onRightClick | 右键单击 | `(event: MapsEvent): void;` |\\n| onHide | 隐藏 | `(event: { type: string; target: any }): void;` |\\n| onShow | 显示 | `(event: { type: string; target: any }): void;` |\\n| onMouseDown | 鼠标按下 | `(event: MapsEvent): void;` |\\n| onMouseUp | 鼠标抬起 | `(event: MapsEvent): void;` |\\n| onMouseOver | 鼠标经过 | `(event: MapsEvent): void;` |\\n| onMouseOut | 鼠标移出 | `(event: MapsEvent): void;` |\\n| onChange | 属性发生变化时 | `(event: { type: string; target: any }): void;` |\\n| onTouchStart | 触摸开始时触发事件，仅适用移动设备 | `(event: MapsEvent): void;` |\\n| onTouchMove | 触摸移动进行中时触发事件，仅适用移动设备 | `(event: MapsEvent): void;` |\\n| onTouchEnd | 触摸结束时触发事件，仅适用移动设备 | `(event: MapsEvent): void;` |\";"],"sourceRoot":""}