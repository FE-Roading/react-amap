(this.webpackJsonpwebsite=this.webpackJsonpwebsite||[]).push([[61],{765:function(n,o,e){"use strict";e.r(o),o.default="Polyline \u6298\u7ebf\u7ec4\u4ef6\n===\n\n\u6784\u9020\u6298\u7ebf\u5bf9\u8c61\uff0c\u652f\u6301 `lineString` \u548c `MultiLineString`\u3002\n\n```jsx\nimport { Polyline } from '@uiw/react-amap';\n// \u6216\u8005\u5355\u72ec\u5b89\u88c5\u4f7f\u7528\nimport { Polyline } from '@uiw/react-amap-polyline';\n```\n\n### \u57fa\u672c\u7528\u6cd5\n\n\x3c!--rehype:bgWhite=true&noScroll=true&codeSandbox=true&codeSandbox=true--\x3e\n```jsx\nimport ReactDOM from 'react-dom';\nimport React, { useState, useRef } from 'react';\nimport { Map, APILoader, Polyline, ToolBarControl } from '@uiw/react-amap';\n\nconst Example = () => {\n  const [show, setShow] = useState(true);\n  return (\n    <>\n      <button onClick={() => setShow(!show)}>\n        {show ? '\u5173\u95ed' : '\u5f00\u542f'}\n      </button>\n      <div style={{ width: '100%', height: '300px' }}>\n        <Map zoom={3}>\n          <Polyline\n            visiable={show}\n            onHide={(obj) => {\n              console.log('obj:', obj);\n            }}\n            onShow={(obj) => {\n              console.log('obj:', obj);\n            }}\n            onClick={(obj) => {\n              console.log('obj:', obj);\n            }}\n            strokeColor=\"black\"\n            strokeOpacity={1}\n            path={[\n              [116.405289, 39.904987],\n              [113.964458, 40.54664],\n              [111.47836, 41.135964],\n              [108.949297, 41.670904],\n              [106.380111, 42.149509],\n              [103.774185, 42.56996],\n              [101.135432, 42.930601],\n              [98.46826, 43.229964],\n              [95.777529, 43.466798],\n              [93.068486, 43.64009],\n              [90.34669, 43.749086],\n              [87.61792, 43.793308]\n            ]}\n          />\n          <Polyline\n            visiable={show}\n            strokeOpacity={1}\n            path={[\n              [121.099109,31.222311],\n              [118.528308,31.989555],\n              [117.319812,31.803006],\n              [114.353503,30.67583],\n              [115.891589,28.979429],\n              [112.947253,28.188361],\n            ]}\n          />\n        </Map>\n      </div>\n    </>\n  );\n}\n\nReactDOM.render((\n  <APILoader akay=\"a7a90e05a37d3f6bf76d4a9032fc9129\">\n    <Example />\n  </APILoader>\n), _mount_);\n```\n\n### \u53d7\u63a7\u7ec4\u4ef6\n\n\x3c!--rehype:bgWhite=true&noScroll=true&codeSandbox=true&codeSandbox=true--\x3e\n```jsx\nimport ReactDOM from 'react-dom';\nimport React, { useState, useRef } from 'react';\nimport { Map, APILoader, Polyline, ToolBarControl } from '@uiw/react-amap';\n\nconst path1 = [\n  [121.099109,31.222311],\n  [118.528308,31.989555],\n  [117.319812,31.803006],\n  [114.353503,30.67583],\n  [115.891589,28.979429],\n  [112.947253,28.188361],\n];\n\nconst path2 = [\n  [116.405289, 39.904987],\n  [113.964458, 40.54664],\n  [111.47836, 41.135964],\n  [108.949297, 41.670904],\n  [106.380111, 42.149509],\n  [103.774185, 42.56996],\n  [101.135432, 42.930601],\n  [98.46826, 43.229964],\n  [95.777529, 43.466798],\n  [93.068486, 43.64009],\n  [90.34669, 43.749086],\n  [87.61792, 43.793308],\n];\n\nconst Example = () => {\n  const [show, setShow] = useState(true);\n  const [paths, setPaths] = useState(path1);\n  return (\n    <>\n      <button onClick={() => setShow(!show)}>\n        {show ? '\u5173\u95ed' : '\u5f00\u542f'}\n      </button>\n      {show && (\n        <button onClick={() => setPaths(paths.length === 6 ? path2 : path1)}>\n          \u5207\u6362\u8def\u7ebf\n        </button>\n      )}\n      <div style={{ width: '100%', height: '300px' }}>\n        <Map zoom={3}>\n          <Polyline\n            visiable={show}\n            strokeOpacity={1}\n            path={paths}\n          />\n        </Map>\n      </div>\n    </>\n  );\n}\n\nReactDOM.render((\n  <APILoader akay=\"a7a90e05a37d3f6bf76d4a9032fc9129\">\n    <Example />\n  </APILoader>\n), _mount_);\n```\n\n### Props\n\n[\u66f4\u591a\u53c2\u6570\u8bbe\u7f6e](https://github.com/uiwjs/react-amap/blob/268303d/src/types/overlay.d.ts#L275-L370)\n\n| \u53c2\u6570 | \u8bf4\u660e | \u7c7b\u578b | \u9ed8\u8ba4\u503c |\n| ----- | ----- | ----- | ----- |\n| visiable | \u8986\u76d6\u7269\u662f\u5426\u53ef\u89c1\u3002 | `boolean` | - |\n| path | \u8def\u5f84\uff0c\u652f\u6301 lineString \u548c MultiLineString\u3002 | `Array<LngLat>` / `Array<Array<LngLat>>` | - |\n\n### \u4e8b\u4ef6\n\n[\u4e8b\u4ef6\u7c7b\u578b\u6587\u6863](https://github.com/uiwjs/react-amap/blob/268303d/src/types/overlay.d.ts#L249-L274)\n\n| \u53c2\u6570 | \u8bf4\u660e | \u7c7b\u578b |\n| ---- | ---- | ---- |\n| onHide | \u9690\u85cf | (): void; |\n| onShow | \u663e\u793a | (): void; |\n| onMouseOut | \u9f20\u6807\u79fb\u51fa | (event: MapsEvent): void; |\n| onRightClick | \u9f20\u6807\u53f3\u952e\u5355\u51fb\u4e8b\u4ef6 | (event: MapsEvent): void; |\n| onDblClick | \u9f20\u6807\u5de6\u952e\u53cc\u51fb\u4e8b\u4ef6 | (event: MapsEvent): void; |\n| onMouseOver | \u9f20\u6807\u7ecf\u8fc7 | (event: MapsEvent): void; |\n| onTouchEnd | \u89e6\u6478\u7ed3\u675f\u65f6\u89e6\u53d1\u4e8b\u4ef6\uff0c\u4ec5\u9002\u7528\u79fb\u52a8\u8bbe\u5907 | (event: MapsEvent): void; |\n| onTouchMove | \u89e6\u6478\u79fb\u52a8\u8fdb\u884c\u4e2d\u65f6\u89e6\u53d1\u4e8b\u4ef6\uff0c\u4ec5\u9002\u7528\u79fb\u52a8\u8bbe\u5907 | (event: MapsEvent): void; |\n| onTouchStart | \u89e6\u6478\u5f00\u59cb\u65f6\u89e6\u53d1\u4e8b\u4ef6\uff0c\u4ec5\u9002\u7528\u79fb\u52a8\u8bbe\u5907 | (event: MapsEvent): void; |\n| onMouseUp | \u9f20\u6807\u62ac\u8d77 | (event: MapsEvent): void; |\n| onMouseDown | \u9f20\u6807\u6309\u4e0b | (event: MapsEvent): void; |\n"}}]);
//# sourceMappingURL=61.3f313e2a.chunk.js.map