{"version":3,"sources":["../../packages/weather/README.md"],"names":[],"mappings":"qGAAA,OAAe","file":"static/js/67.975778b7.chunk.js","sourcesContent":["export default \"Weather 天气查询服务\\n===\\n\\n天气查询服务，根据城市名称或区域编码返回城市天气预报信息，包括实时天气信息和四天天气预报。\\n\\n```jsx\\nimport { Weather } from '@uiw/react-amap';\\n```\\n\\n### 基本用法\\n\\n<!--rehype:bgWhite=true&noScroll=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport React, { useState, useRef } from 'react';\\nimport { APILoader, Weather } from '@uiw/react-amap';\\n\\nconst Example = () => {\\n  const [data, setData] = useState();\\n  const [city, setCity] = useState('上海市');\\n  return (\\n    <>\\n      <button onClick={() => setCity('上海市')}>\\n        上海市\\n      </button>\\n      <button onClick={() => setCity('北京市')}>\\n        北京市\\n      </button>\\n      <button onClick={() => setCity('黄冈市')}>\\n        黄冈市\\n      </button>\\n      <div style={{ width: '100%' }}>\\n        <Weather\\n          city={city}\\n          onComplete={(data) => {\\n            console.log('返回数据：', data);\\n            setData(data);\\n          }}\\n        />\\n        <pre style={{ padding: 10, marginTop: 10 }}>\\n          {data ? JSON.stringify(data, null, 2) : '{}'}\\n        </pre>\\n      </div>\\n    </>\\n  );\\n}\\n\\nReactDOM.render((\\n  <APILoader akay=\\\"a7a90e05a37d3f6bf76d4a9032fc9129\\\">\\n    <Example />\\n  </APILoader>\\n), _mount_);\\n```\\n\\n### 查询四天预报天气\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport React, { useState, useRef } from 'react';\\nimport { APILoader, Weather } from '@uiw/react-amap';\\n\\nconst Example = () => {\\n  const [data, setData] = useState();\\n  const [city, setCity] = useState('上海市');\\n  return (\\n    <>\\n      <button onClick={() => setCity('上海市')}>\\n        上海市\\n      </button>\\n      <button onClick={() => setCity('北京市')}>\\n        北京市\\n      </button>\\n      <button onClick={() => setCity('黄冈市')}>\\n        黄冈市\\n      </button>\\n      <div style={{ width: '100%', height: '300px' }}>\\n        <Weather\\n          city={city}\\n          type=\\\"forecast\\\"\\n          onComplete={(data) => {\\n            console.log('返回数据：', data);\\n            setData(data);\\n          }}\\n        />\\n        <pre style={{ padding: 10, marginTop: 10 }}>\\n          {data ? JSON.stringify(data, null, 2) : '{}'}\\n        </pre>\\n      </div>\\n    </>\\n  );\\n}\\n\\nReactDOM.render((\\n  <APILoader akay=\\\"a7a90e05a37d3f6bf76d4a9032fc9129\\\">\\n    <Example />\\n  </APILoader>\\n), _mount_);\\n```\\n\\n### 切换类型\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport React, { useState, useRef } from 'react';\\nimport { APILoader, Weather } from '@uiw/react-amap';\\n\\nconst Example = () => {\\n  const [data, setData] = useState();\\n  const [type, setType] = useState('live');\\n  return (\\n    <>\\n      <button onClick={() => setType('live')}>\\n        实时天气信息:live\\n      </button>\\n      <button onClick={() => setType('forecast')}>\\n        四天预报天气:forecast\\n      </button>\\n      <div style={{ width: '100%', height: '300px' }}>\\n        <Weather\\n          city=\\\"上海市\\\"\\n          type={type}\\n          onComplete={(data) => {\\n            console.log('返回数据：', type, data);\\n            setData(data);\\n          }}\\n        />\\n        <pre style={{ padding: 10, marginTop: 10 }}>\\n          {data ? JSON.stringify(data, null, 2) : '{}'}\\n        </pre>\\n      </div>\\n    </>\\n  );\\n}\\n\\nReactDOM.render((\\n  <APILoader akay=\\\"a7a90e05a37d3f6bf76d4a9032fc9129\\\">\\n    <Example />\\n  </APILoader>\\n), _mount_);\\n```\\n\\n### 不使用组件\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport React, { useEffect, useState, useRef } from 'react';\\nimport { APILoader } from '@uiw/react-amap';\\n\\nconst Example = () => {\\n  const [data, setData] = useState();\\n  useEffect(() => {\\n    AMap.plugin(['AMap.Weather'], () => {\\n      const instance = new AMap.Weather({});\\n      instance.getForecast('上海市', (status, result) => {\\n        if(status === 'complete'){\\n          setData(result);\\n        } else {\\n          setData(result);\\n        }\\n      });\\n    });\\n  }, []);\\n  return (\\n    <>\\n      <div style={{ width: '100%' }}>\\n        <pre style={{ padding: 10, marginTop: 10 }}>\\n          {data ? JSON.stringify(data, null, 2) : '{正在获取}'}\\n        </pre>\\n      </div>\\n    </>\\n  );\\n}\\n\\nReactDOM.render((\\n  <APILoader akay=\\\"a7a90e05a37d3f6bf76d4a9032fc9129\\\">\\n    <Example />\\n  </APILoader>\\n), _mount_);\\n```\\n\\n\\n### Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|--------- |-------- |--------- |-------- |\\n| city | 城市名称/区域编码(如：“杭州市”/“330100”) | `string` | - |\\n| type | 获取 `查询实时天气信息` 或 `查询四天预报天气` | `live|forecast` | `live` |\\n\\n### 事件\\n\\n| 参数 | 说明 | 类型 |\\n| ---- | ---- | ---- |\\n| onComplete | 数据请求完成时触发事件。 | `(data: WeatherLiveResult | WeatherForecastResult): void;` |\\n| onError | 数据请求错误时触发事件。 | `(err): void;` |\";"],"sourceRoot":""}