{"version":3,"sources":["../../packages/info-window/README.md"],"names":[],"mappings":"qGAAA,OAAe","file":"static/js/54.b7892322.chunk.js","sourcesContent":["export default \"InfoWindow 信息窗体\\n===\\n\\n用于在地图上弹出一个详细信息展示窗体，地图上只允许同时展示 `1` 个信息窗体。\\n\\n```jsx\\nimport { InfoWindow } from '@uiw/react-amap';\\n// 或者单独安装使用\\nimport { InfoWindow } from '@uiw/react-amap-info-window';\\n```\\n\\n### 基本用法\\n\\n<!--rehype:bgWhite=true&noScroll=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport React, { useState, useRef } from 'react';\\nimport { Map, APILoader, InfoWindow } from '@uiw/react-amap';\\n\\nconst Example = () => {\\n  const [show, setShow] = useState(true);\\n  // 构建信息窗体中显示的内容\\n  const info = [];\\n  info.push(\\\"<div class='input-card content-window-card'><div><img style=\\\\\\\"float:left;width:67px;height:16px;\\\\\\\" src=\\\\\\\" https://webapi.amap.com/images/autonavi.png \\\\\\\"/></div> \\\");\\n  info.push(\\\"<div style=\\\\\\\"padding:7px 0px 0px 0px;\\\\\\\"><h4>高德软件</h4>\\\");\\n  info.push(\\\"<p class='input-item'>电话 : 010-84107000   邮编 : 100102</p>\\\");\\n  info.push(\\\"<p class='input-item'>地址 :北京市朝阳区望京阜荣街10号首开广场4层</p></div></div>\\\");\\n  return (\\n    <>\\n      <button onClick={() => setShow(!show)}>\\n        {show ? '隐藏' : '显示'}\\n      </button>\\n      <div style={{ width: '100%', height: '500px' }}>\\n        <Map zoom={14} center={[116.397637, 39.900001]}>\\n          <InfoWindow\\n            visiable={show}\\n            content={info.join('')}\\n            // position={[116.397046, 39.915698]}\\n            onClose={(evn) => {\\n              console.log('evn', evn);\\n            }}\\n          />\\n        </Map>\\n      </div>\\n    </>\\n  );\\n}\\n\\nReactDOM.render((\\n  <APILoader akay=\\\"a7a90e05a37d3f6bf76d4a9032fc9129\\\">\\n    <Example />\\n  </APILoader>\\n), _mount_);\\n```\\n\\n### 设置信息窗体内容\\n\\n<!--rehype:bgWhite=true&noScroll=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport React, { useState, useRef } from 'react';\\nimport { Map, APILoader, InfoWindow } from '@uiw/react-amap';\\n\\nconst Example = () => {\\n  const [show, setShow] = useState(true);\\n  const [content, setContent] = useState('<div>高德软件</div>');\\n  return (\\n    <>\\n      <button onClick={() => setShow(!show)}>\\n        {show ? '隐藏' : '显示'}\\n      </button>\\n      <input type=\\\"text\\\" value={content} onChange={(evn) => setContent(evn.target.value)}/>\\n      <div style={{ width: '100%', height: '500px' }}>\\n        <Map zoom={14} pitch={70} viewMode=\\\"3D\\\" center={[116.397637, 39.900001]}>\\n          <InfoWindow\\n            visiable={show}\\n            content={content}\\n            onClose={(evn) => {\\n              console.log('evn', evn);\\n            }}\\n          />\\n        </Map>\\n      </div>\\n    </>\\n  );\\n}\\n\\nReactDOM.render((\\n  <APILoader akay=\\\"a7a90e05a37d3f6bf76d4a9032fc9129\\\">\\n    <Example />\\n  </APILoader>\\n), _mount_);\\n```\\n\\n### 点标记点弹出信息窗体\\n\\n<!--rehype:bgWhite=true&noScroll=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport React, { useState, useRef } from 'react';\\nimport { Map, Marker, APILoader, InfoWindow } from '@uiw/react-amap';\\n\\nconst Example = () => {\\n  const [show, setShow] = useState(false);\\n  const [winPosition, setWinPosition] = useState();\\n  const [content, setContent] = useState('<div>高德软件</div>');\\n  return (\\n    <>\\n      <input type=\\\"text\\\" value={content} onChange={(evn) => setContent(evn.target.value)}/>\\n      <div style={{ width: '100%', height: '300px' }}>\\n        <Map zoom={14} center={[116.397637, 39.900001]}>\\n          <Marker\\n            title=\\\"北京市\\\"\\n            position={new AMap.LngLat(116.405285,39.904989)}\\n            onClick={(evn) => {\\n              if (!show) {\\n                setWinPosition(new AMap.LngLat(116.405285,39.904989));\\n                setShow(true);\\n              } else {\\n                setWinPosition(new AMap.LngLat(116.405285,39.904989));\\n              }\\n            }}\\n          />\\n          <Marker\\n            title=\\\"北京市\\\"\\n            position={new AMap.LngLat(116.415285,39.905589)}\\n            onClick={(evn) => {\\n              if (!show) {\\n                setWinPosition(new AMap.LngLat(116.415285,39.905589));\\n                setShow(true);\\n              } else {\\n                setWinPosition(new AMap.LngLat(116.415285,39.905589));\\n              }\\n            }}\\n          />\\n          {winPosition && (\\n            <InfoWindow\\n              visiable={show}\\n              position={winPosition}\\n              offset={{ x: 0, y: -10}}\\n              content={content}\\n              onClose={(evn) => {\\n                // console.log('evn2', evn, show);\\n              }}\\n            />\\n          )}\\n        </Map>\\n      </div>\\n    </>\\n  );\\n}\\n\\nReactDOM.render((\\n  <APILoader akay=\\\"a7a90e05a37d3f6bf76d4a9032fc9129\\\">\\n    <Example />\\n  </APILoader>\\n), _mount_);\\n```\\n\\n### 点标记点弹出信息窗体 Ref 实现\\n\\n<!--rehype:bgWhite=true&noScroll=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport React, { useState, useRef } from 'react';\\nimport { Map, Marker, APILoader, InfoWindow } from '@uiw/react-amap';\\n\\nconst Example = () => {\\n  const mapRef = useRef();\\n  const winRef = useRef();\\n  const [winPosition, setWinPosition] = useState();\\n  const [content, setContent] = useState('<div>高德软件</div>');\\n  return (\\n    <>\\n      <input type=\\\"text\\\" value={content} onChange={(evn) => setContent(evn.target.value)}/>\\n      <div style={{ width: '100%', height: '300px' }}>\\n        <Map ref={mapRef} zoom={14} center={[116.397637, 39.900001]}>\\n          <Marker\\n            title=\\\"北京市\\\"\\n            position={new AMap.LngLat(116.405285,39.904989)}\\n            onClick={(evn) => {\\n              winRef.current.infoWindow.open(mapRef.current.map, new AMap.LngLat(116.405285,39.904989))\\n            }}\\n          />\\n          <Marker\\n            title=\\\"北京市\\\"\\n            position={new AMap.LngLat(116.415285,39.905589)}\\n            onClick={(evn) => {\\n              winRef.current.infoWindow.open(mapRef.current.map, new AMap.LngLat(116.415285,39.905589))\\n            }}\\n          />\\n          <InfoWindow\\n            ref={winRef}\\n            offset={{ x: 0, y: -30}}\\n            content={content}\\n          />\\n        </Map>\\n      </div>\\n    </>\\n  );\\n}\\n\\nReactDOM.render((\\n  <APILoader akay=\\\"a7a90e05a37d3f6bf76d4a9032fc9129\\\">\\n    <Example />\\n  </APILoader>\\n), _mount_);\\n```\\n\\n### Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|--------- |-------- |--------- |-------- |\\n| visiable | 覆盖物是否可见。 | `boolean` | - |\\n| position | 信息窗体显示基点位置，默认地图的中间 | `LngLat` | - |\\n| offset | 信息窗体显示位置偏移量。默认基准点为信息窗体的底部中心（若设置了anchor，则以anchor值为基准点）。 | `Pixel` | - |\\n| anchor | 信息窗体锚点 | `top-left`,`top-center`,`top-right`,`middle-left`,`center`,`middle-right`,`bottom-left`,`bottom-center`,`bottom-right` | `bottom-center` |\\n| autoMove | 是否自动调整窗体到视野内（当信息窗体超出视野范围时，通过该属性设置是否自动平移地图，使信息窗体完全显示） | `boolean` | - |\\n| size | 信息窗体显示基点位置，默认地图的中间 | `Size` | - |\\n| closeWhenClickMap | 控制是否在鼠标点击地图后关闭信息窗体，默认false，鼠标点击地图后不关闭信息窗体 | `boolean` | - |\\n| content | 信息窗体尺寸（isCustom为true时，该属性无效） | `string/HTMLElement` | - |\\n| avoid | autoMove 为 true 时，自动平移到视野内后的上右下左的避让宽度。默认值： `[20, 20, 20, 20]` | `Array<number>` | - |\\n| isCustom | 是否自定义窗体。设为true时，信息窗体外框及内容完全按照content所设的值添加（默认为false，即在系统默认的信息窗体外框中显示content内容） | `boolean` | - |\\n\\n### 事件\\n\\n| 参数 | 说明 | 类型 |\\n| ---- | ---- | ---- |\\n| onOpen | 信息窗体打开之后触发事件 | `(opts: { type: string }): void;` |\\n| onClose | 信息窗体关闭之后触发事件 | `(opts: { type: string }): void;` |\";"],"sourceRoot":""}